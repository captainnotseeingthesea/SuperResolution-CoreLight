// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Resize_opr_bicubic (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_rows_V_read,
        p_src_cols_V_read,
        p_src_data_stream_0_V_dout,
        p_src_data_stream_0_V_empty_n,
        p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout,
        p_src_data_stream_1_V_empty_n,
        p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout,
        p_src_data_stream_2_V_empty_n,
        p_src_data_stream_2_V_read,
        p_dst_rows_V_read,
        p_dst_cols_V_read,
        p_dst_data_stream_0_V_din,
        p_dst_data_stream_0_V_full_n,
        p_dst_data_stream_0_V_write,
        p_dst_data_stream_1_V_din,
        p_dst_data_stream_1_V_full_n,
        p_dst_data_stream_1_V_write,
        p_dst_data_stream_2_V_din,
        p_dst_data_stream_2_V_full_n,
        p_dst_data_stream_2_V_write
);

parameter    ap_ST_fsm_state1 = 52'd1;
parameter    ap_ST_fsm_state2 = 52'd2;
parameter    ap_ST_fsm_state3 = 52'd4;
parameter    ap_ST_fsm_state4 = 52'd8;
parameter    ap_ST_fsm_state5 = 52'd16;
parameter    ap_ST_fsm_state6 = 52'd32;
parameter    ap_ST_fsm_state7 = 52'd64;
parameter    ap_ST_fsm_state8 = 52'd128;
parameter    ap_ST_fsm_state9 = 52'd256;
parameter    ap_ST_fsm_state10 = 52'd512;
parameter    ap_ST_fsm_state11 = 52'd1024;
parameter    ap_ST_fsm_state12 = 52'd2048;
parameter    ap_ST_fsm_state13 = 52'd4096;
parameter    ap_ST_fsm_state14 = 52'd8192;
parameter    ap_ST_fsm_state15 = 52'd16384;
parameter    ap_ST_fsm_state16 = 52'd32768;
parameter    ap_ST_fsm_state17 = 52'd65536;
parameter    ap_ST_fsm_state18 = 52'd131072;
parameter    ap_ST_fsm_state19 = 52'd262144;
parameter    ap_ST_fsm_state20 = 52'd524288;
parameter    ap_ST_fsm_state21 = 52'd1048576;
parameter    ap_ST_fsm_state22 = 52'd2097152;
parameter    ap_ST_fsm_state23 = 52'd4194304;
parameter    ap_ST_fsm_state24 = 52'd8388608;
parameter    ap_ST_fsm_state25 = 52'd16777216;
parameter    ap_ST_fsm_state26 = 52'd33554432;
parameter    ap_ST_fsm_state27 = 52'd67108864;
parameter    ap_ST_fsm_state28 = 52'd134217728;
parameter    ap_ST_fsm_state29 = 52'd268435456;
parameter    ap_ST_fsm_state30 = 52'd536870912;
parameter    ap_ST_fsm_state31 = 52'd1073741824;
parameter    ap_ST_fsm_state32 = 52'd2147483648;
parameter    ap_ST_fsm_state33 = 52'd4294967296;
parameter    ap_ST_fsm_state34 = 52'd8589934592;
parameter    ap_ST_fsm_state35 = 52'd17179869184;
parameter    ap_ST_fsm_state36 = 52'd34359738368;
parameter    ap_ST_fsm_state37 = 52'd68719476736;
parameter    ap_ST_fsm_state38 = 52'd137438953472;
parameter    ap_ST_fsm_state39 = 52'd274877906944;
parameter    ap_ST_fsm_state40 = 52'd549755813888;
parameter    ap_ST_fsm_state41 = 52'd1099511627776;
parameter    ap_ST_fsm_state42 = 52'd2199023255552;
parameter    ap_ST_fsm_state43 = 52'd4398046511104;
parameter    ap_ST_fsm_state44 = 52'd8796093022208;
parameter    ap_ST_fsm_state45 = 52'd17592186044416;
parameter    ap_ST_fsm_state46 = 52'd35184372088832;
parameter    ap_ST_fsm_state47 = 52'd70368744177664;
parameter    ap_ST_fsm_state48 = 52'd140737488355328;
parameter    ap_ST_fsm_state49 = 52'd281474976710656;
parameter    ap_ST_fsm_state50 = 52'd562949953421312;
parameter    ap_ST_fsm_pp0_stage0 = 52'd1125899906842624;
parameter    ap_ST_fsm_state94 = 52'd2251799813685248;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [10:0] p_src_rows_V_read;
input  [10:0] p_src_cols_V_read;
input  [7:0] p_src_data_stream_0_V_dout;
input   p_src_data_stream_0_V_empty_n;
output   p_src_data_stream_0_V_read;
input  [7:0] p_src_data_stream_1_V_dout;
input   p_src_data_stream_1_V_empty_n;
output   p_src_data_stream_1_V_read;
input  [7:0] p_src_data_stream_2_V_dout;
input   p_src_data_stream_2_V_empty_n;
output   p_src_data_stream_2_V_read;
input  [12:0] p_dst_rows_V_read;
input  [12:0] p_dst_cols_V_read;
output  [7:0] p_dst_data_stream_0_V_din;
input   p_dst_data_stream_0_V_full_n;
output   p_dst_data_stream_0_V_write;
output  [7:0] p_dst_data_stream_1_V_din;
input   p_dst_data_stream_1_V_full_n;
output   p_dst_data_stream_1_V_write;
output  [7:0] p_dst_data_stream_2_V_din;
input   p_dst_data_stream_2_V_full_n;
output   p_dst_data_stream_2_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_0_V_read;
reg p_src_data_stream_1_V_read;
reg p_src_data_stream_2_V_read;
reg p_dst_data_stream_0_V_write;
reg p_dst_data_stream_1_V_write;
reg p_dst_data_stream_2_V_write;

(* fsm_encoding = "none" *) reg   [51:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] hcoeffs_3_address0;
reg    hcoeffs_3_ce0;
wire   [16:0] hcoeffs_3_q0;
wire   [3:0] hcoeffs_2_address0;
reg    hcoeffs_2_ce0;
wire   [20:0] hcoeffs_2_q0;
wire   [3:0] hcoeffs_1_address0;
reg    hcoeffs_1_ce0;
wire   [20:0] hcoeffs_1_q0;
wire   [3:0] hcoeffs_0_address0;
reg    hcoeffs_0_ce0;
wire   [16:0] hcoeffs_0_q0;
wire   [3:0] vcoeffs_3_address0;
reg    vcoeffs_3_ce0;
wire   [16:0] vcoeffs_3_q0;
wire   [3:0] vcoeffs_2_address0;
reg    vcoeffs_2_ce0;
wire   [20:0] vcoeffs_2_q0;
wire   [3:0] vcoeffs_1_address0;
reg    vcoeffs_1_ce0;
wire   [20:0] vcoeffs_1_q0;
wire   [3:0] vcoeffs_0_address0;
reg    vcoeffs_0_ce0;
wire   [16:0] vcoeffs_0_q0;
reg    p_src_data_stream_0_V_blk_n;
reg    ap_enable_reg_pp0_iter36;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_20_reg_3557;
reg   [0:0] tmp_20_reg_3557_pp0_iter35_reg;
reg   [0:0] col_rd_en_1_reg_894;
reg   [0:0] row_rd_en_load_1_reg_3599;
reg   [0:0] or_cond3_reg_3603;
reg    p_src_data_stream_1_V_blk_n;
reg    p_src_data_stream_2_V_blk_n;
reg    p_dst_data_stream_0_V_blk_n;
reg    ap_enable_reg_pp0_iter42;
reg   [0:0] brmerge4_reg_3640;
reg   [0:0] brmerge4_reg_3640_pp0_iter41_reg;
reg    p_dst_data_stream_1_V_blk_n;
reg    p_dst_data_stream_2_V_blk_n;
reg   [12:0] p_Val2_10_reg_840;
reg   [12:0] p_Val2_10_reg_840_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state51_pp0_stage0_iter0;
wire    ap_block_state52_pp0_stage0_iter1;
wire    ap_block_state53_pp0_stage0_iter2;
wire    ap_block_state54_pp0_stage0_iter3;
wire    ap_block_state55_pp0_stage0_iter4;
wire    ap_block_state56_pp0_stage0_iter5;
wire    ap_block_state57_pp0_stage0_iter6;
wire    ap_block_state58_pp0_stage0_iter7;
wire    ap_block_state59_pp0_stage0_iter8;
wire    ap_block_state60_pp0_stage0_iter9;
wire    ap_block_state61_pp0_stage0_iter10;
wire    ap_block_state62_pp0_stage0_iter11;
wire    ap_block_state63_pp0_stage0_iter12;
wire    ap_block_state64_pp0_stage0_iter13;
wire    ap_block_state65_pp0_stage0_iter14;
wire    ap_block_state66_pp0_stage0_iter15;
wire    ap_block_state67_pp0_stage0_iter16;
wire    ap_block_state68_pp0_stage0_iter17;
wire    ap_block_state69_pp0_stage0_iter18;
wire    ap_block_state70_pp0_stage0_iter19;
wire    ap_block_state71_pp0_stage0_iter20;
wire    ap_block_state72_pp0_stage0_iter21;
wire    ap_block_state73_pp0_stage0_iter22;
wire    ap_block_state74_pp0_stage0_iter23;
wire    ap_block_state75_pp0_stage0_iter24;
wire    ap_block_state76_pp0_stage0_iter25;
wire    ap_block_state77_pp0_stage0_iter26;
wire    ap_block_state78_pp0_stage0_iter27;
wire    ap_block_state79_pp0_stage0_iter28;
wire    ap_block_state80_pp0_stage0_iter29;
wire    ap_block_state81_pp0_stage0_iter30;
wire    ap_block_state82_pp0_stage0_iter31;
wire    ap_block_state83_pp0_stage0_iter32;
wire    ap_block_state84_pp0_stage0_iter33;
wire    ap_block_state85_pp0_stage0_iter34;
wire    ap_block_state86_pp0_stage0_iter35;
reg    ap_predicate_op536_read_state87;
reg    ap_predicate_op537_read_state87;
reg    ap_predicate_op538_read_state87;
reg    ap_block_state87_pp0_stage0_iter36;
wire    ap_block_state88_pp0_stage0_iter37;
wire    ap_block_state89_pp0_stage0_iter38;
wire    ap_block_state90_pp0_stage0_iter39;
wire    ap_block_state91_pp0_stage0_iter40;
wire    ap_block_state92_pp0_stage0_iter41;
reg    ap_block_state93_pp0_stage0_iter42;
reg    ap_block_pp0_stage0_11001;
reg   [12:0] p_Val2_10_reg_840_pp0_iter2_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter3_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter4_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter5_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter6_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter7_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter8_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter9_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter10_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter11_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter12_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter13_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter14_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter15_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter16_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter17_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter18_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter19_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter20_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter21_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter22_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter23_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter24_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter25_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter26_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter27_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter28_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter29_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter30_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter31_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter32_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter33_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter34_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter35_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter36_reg;
reg   [12:0] p_Val2_10_reg_840_pp0_iter37_reg;
reg   [44:0] r_V_4_reg_852;
reg   [0:0] row_rd_en_3_reg_872;
reg   [0:0] row_rd_en_3_reg_872_pp0_iter35_reg;
reg   [0:0] row_rd_en_3_reg_872_pp0_iter36_reg;
reg   [0:0] col_wr_en_1_reg_906;
reg   [0:0] col_wr_en_1_reg_906_pp0_iter36_reg;
reg   [0:0] col_wr_en_1_reg_906_pp0_iter37_reg;
reg   [0:0] col_wr_en_1_reg_906_pp0_iter38_reg;
wire  signed [12:0] rows_fu_1182_p3;
reg  signed [12:0] rows_reg_3397;
wire   [12:0] cols_fu_1196_p3;
reg   [12:0] cols_reg_3403;
wire  signed [31:0] row_ratio_V_fu_1219_p1;
reg  signed [31:0] row_ratio_V_reg_3408;
wire    ap_CS_fsm_state49;
wire  signed [31:0] col_ratio_V_fu_1223_p1;
reg  signed [31:0] col_ratio_V_reg_3413;
wire   [31:0] row_rate_fu_1265_p3;
reg   [31:0] row_rate_reg_3418;
wire   [31:0] h_phase_acc_V_4_fu_1311_p3;
reg   [31:0] h_phase_acc_V_4_reg_3423;
wire  signed [13:0] rows_cast_cast_fu_1319_p1;
reg  signed [13:0] rows_cast_cast_reg_3429;
wire  signed [13:0] cols_cast_fu_1322_p1;
reg  signed [13:0] cols_cast_reg_3434;
wire   [13:0] tmp_10_fu_1325_p2;
reg   [13:0] tmp_10_reg_3440;
wire   [13:0] addconv_fu_1331_p2;
reg   [13:0] addconv_reg_3445;
wire   [0:0] icmp_fu_1347_p2;
reg   [0:0] icmp_reg_3450;
wire  signed [44:0] tmp_18_cast_fu_1353_p1;
reg  signed [44:0] tmp_18_cast_reg_3455;
wire   [0:0] icmp1_fu_1367_p2;
reg   [0:0] icmp1_reg_3460;
wire  signed [44:0] tmp_20_cast_fu_1373_p1;
reg  signed [44:0] tmp_20_cast_reg_3465;
wire  signed [13:0] tmp_21_cast_cast_fu_1382_p1;
reg  signed [13:0] tmp_21_cast_cast_reg_3470;
wire   [0:0] tmp_13_fu_1390_p2;
wire    ap_CS_fsm_state50;
wire   [12:0] row_fu_1395_p2;
reg   [12:0] row_reg_3479;
wire   [44:0] r_V_3_fu_1405_p2;
reg   [44:0] r_V_3_reg_3484;
reg   [0:0] p_Result_3_reg_3490;
wire   [31:0] t_V_2_cast_fu_1426_p1;
reg   [31:0] t_V_2_cast_reg_3495;
wire   [0:0] tmp_16_fu_1430_p2;
reg   [0:0] tmp_16_reg_3500;
wire   [0:0] tmp_18_fu_1451_p2;
reg   [0:0] tmp_18_reg_3510;
wire   [0:0] notlhs_fu_1457_p2;
reg   [0:0] notlhs_reg_3526;
wire   [1:0] tmp_118_0_t_fu_1474_p3;
reg   [1:0] tmp_118_0_t_reg_3531;
wire   [0:0] tmp12_fu_1482_p2;
reg   [0:0] tmp12_reg_3541;
wire   [13:0] i_op_assign_1_cast_fu_1488_p1;
reg   [13:0] i_op_assign_1_cast_reg_3546;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter1_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter2_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter3_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter4_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter5_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter6_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter7_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter8_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter9_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter10_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter11_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter12_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter13_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter14_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter15_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter16_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter17_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter18_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter19_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter20_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter21_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter22_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter23_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter24_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter25_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter26_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter27_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter28_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter29_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter30_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter31_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter32_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter33_reg;
reg   [13:0] i_op_assign_1_cast_reg_3546_pp0_iter34_reg;
wire   [1:0] tmp_19_fu_1492_p1;
reg   [1:0] tmp_19_reg_3552;
reg   [1:0] tmp_19_reg_3552_pp0_iter1_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter2_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter3_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter4_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter5_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter6_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter7_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter8_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter9_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter10_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter11_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter12_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter13_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter14_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter15_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter16_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter17_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter18_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter19_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter20_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter21_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter22_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter23_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter24_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter25_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter26_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter27_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter28_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter29_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter30_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter31_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter32_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter33_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter34_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter35_reg;
reg   [1:0] tmp_19_reg_3552_pp0_iter36_reg;
wire   [0:0] tmp_20_fu_1496_p2;
reg   [0:0] tmp_20_reg_3557_pp0_iter1_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter2_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter3_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter4_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter5_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter6_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter7_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter8_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter9_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter10_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter11_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter12_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter13_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter14_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter15_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter16_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter17_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter18_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter19_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter20_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter21_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter22_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter23_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter24_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter25_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter26_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter27_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter28_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter29_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter30_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter31_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter32_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter33_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter34_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter36_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter37_reg;
reg   [0:0] tmp_20_reg_3557_pp0_iter38_reg;
wire   [12:0] col_fu_1501_p2;
reg   [12:0] col_reg_3561;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_22_fu_1507_p2;
reg   [0:0] tmp_22_reg_3566;
reg   [0:0] tmp_22_reg_3566_pp0_iter1_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter2_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter3_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter4_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter5_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter6_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter7_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter8_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter9_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter10_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter11_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter12_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter13_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter14_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter15_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter16_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter17_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter18_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter19_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter20_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter21_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter22_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter23_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter24_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter25_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter26_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter27_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter28_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter29_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter30_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter31_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter32_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter33_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter34_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter35_reg;
reg   [0:0] tmp_22_reg_3566_pp0_iter36_reg;
wire   [0:0] not_1_fu_1589_p2;
wire   [44:0] next_mul_fu_1605_p2;
reg    ap_enable_reg_pp0_iter34;
wire   [0:0] not_or_cond1_fu_1648_p2;
wire   [0:0] not_or_cond_fu_1739_p2;
wire   [0:0] row_rd_en_load_1_load_fu_1754_p1;
wire   [0:0] ap_phi_mux_col_rd_en_1_phi_fu_898_p4;
wire   [0:0] or_cond3_fu_1761_p2;
wire   [0:0] or_cond4_fu_1776_p2;
reg   [0:0] or_cond4_reg_3607;
wire   [0:0] brmerge2_fu_1784_p2;
reg   [0:0] brmerge2_reg_3611;
wire   [0:0] ap_phi_mux_col_wr_en_1_phi_fu_910_p4;
reg   [0:0] brmerge2_reg_3611_pp0_iter36_reg;
reg   [0:0] brmerge2_reg_3611_pp0_iter37_reg;
reg   [0:0] brmerge2_reg_3611_pp0_iter38_reg;
wire   [0:0] tmp_37_fu_1841_p2;
reg   [0:0] tmp_37_reg_3615;
wire   [0:0] brmerge4_fu_2006_p2;
reg   [0:0] brmerge4_reg_3640_pp0_iter37_reg;
reg   [0:0] brmerge4_reg_3640_pp0_iter38_reg;
reg   [0:0] brmerge4_reg_3640_pp0_iter39_reg;
reg   [0:0] brmerge4_reg_3640_pp0_iter40_reg;
wire   [7:0] tmp_45_fu_2175_p6;
reg   [7:0] tmp_45_reg_3644;
wire   [7:0] h_fir_1_val_1_fu_2189_p6;
reg   [7:0] h_fir_1_val_1_reg_3649;
wire   [7:0] h_fir_1_val_2_fu_2203_p6;
reg   [7:0] h_fir_1_val_2_reg_3654;
wire   [7:0] tmp_47_fu_2231_p6;
reg   [7:0] tmp_47_reg_3659;
wire   [7:0] h_fir_2_val_1_fu_2245_p6;
reg   [7:0] h_fir_2_val_1_reg_3664;
wire   [7:0] h_fir_2_val_2_fu_2259_p6;
reg   [7:0] h_fir_2_val_2_reg_3669;
wire   [7:0] tmp_50_fu_2297_p6;
reg   [7:0] tmp_50_reg_3674;
wire   [7:0] h_fir_3_val_1_fu_2311_p6;
reg   [7:0] h_fir_3_val_1_reg_3679;
wire   [7:0] h_fir_3_val_2_fu_2325_p6;
reg   [7:0] h_fir_3_val_2_reg_3684;
wire   [25:0] grp_fu_2877_p3;
reg  signed [25:0] t_V_5_reg_3689;
reg    ap_enable_reg_pp0_iter37;
reg   [20:0] hcoeffs_2_load_reg_3694;
reg   [20:0] hcoeffs_1_load_reg_3699;
reg   [16:0] hcoeffs_0_load_reg_3704;
wire   [25:0] grp_fu_2885_p3;
reg  signed [25:0] t_V_5_1_reg_3709;
wire   [25:0] grp_fu_2893_p3;
reg  signed [25:0] t_V_5_2_reg_3714;
reg   [11:0] linebuf_val_val_0_0_s_reg_3719;
reg   [11:0] linebuf_val_val_0_0_s_reg_3719_pp0_iter39_reg;
reg   [11:0] linebuf_val_val_0_1_s_reg_3725;
reg   [11:0] linebuf_val_val_0_1_s_reg_3725_pp0_iter39_reg;
reg   [11:0] linebuf_val_val_0_2_s_reg_3731;
reg   [11:0] linebuf_val_val_0_2_s_reg_3731_pp0_iter39_reg;
reg   [11:0] linebuf_val_val_1_0_s_reg_3737;
reg   [11:0] linebuf_val_val_1_0_s_reg_3737_pp0_iter39_reg;
reg   [11:0] linebuf_val_val_1_1_s_reg_3743;
reg   [11:0] linebuf_val_val_1_1_s_reg_3743_pp0_iter39_reg;
reg   [11:0] linebuf_val_val_1_2_s_reg_3749;
reg   [11:0] linebuf_val_val_1_2_s_reg_3749_pp0_iter39_reg;
reg   [11:0] linebuf_val_val_2_0_s_reg_3755;
reg   [11:0] linebuf_val_val_2_0_s_reg_3755_pp0_iter39_reg;
reg   [11:0] linebuf_val_val_2_1_s_reg_3761;
reg   [11:0] linebuf_val_val_2_1_s_reg_3761_pp0_iter39_reg;
reg   [11:0] linebuf_val_val_2_2_s_reg_3767;
reg   [11:0] linebuf_val_val_2_2_s_reg_3767_pp0_iter39_reg;
reg   [11:0] linebuf_val_val_3_0_s_reg_3773;
reg   [11:0] linebuf_val_val_3_0_s_reg_3773_pp0_iter39_reg;
reg   [11:0] linebuf_val_val_3_1_s_reg_3779;
reg   [11:0] linebuf_val_val_3_1_s_reg_3779_pp0_iter39_reg;
reg   [11:0] linebuf_val_val_3_2_s_reg_3785;
reg   [11:0] linebuf_val_val_3_2_s_reg_3785_pp0_iter39_reg;
wire  signed [29:0] grp_fu_2918_p3;
reg   [29:0] t_V_5_0_3_reg_3791;
reg    ap_enable_reg_pp0_iter38;
wire  signed [29:0] grp_fu_2943_p3;
reg   [29:0] t_V_5_1_3_reg_3796;
wire  signed [29:0] grp_fu_2968_p3;
reg   [29:0] t_V_5_2_3_reg_3801;
reg   [16:0] vcoeffs_3_load_reg_3826;
reg   [20:0] vcoeffs_2_load_reg_3831;
reg   [20:0] vcoeffs_1_load_reg_3836;
reg   [16:0] vcoeffs_0_load_reg_3841;
reg   [16:0] vcoeffs_0_load_reg_3841_pp0_iter40_reg;
reg   [7:0] v_fir_3_val_2_load_reg_3846;
reg   [7:0] temp_out_0_val_1_1_1_reg_3851;
reg   [7:0] temp_out_0_val_0_1_1_reg_3856;
wire  signed [29:0] grp_fu_2994_p3;
reg  signed [29:0] t_V_7_0_2_reg_3861;
reg    ap_enable_reg_pp0_iter40;
wire  signed [29:0] grp_fu_3020_p3;
reg  signed [29:0] t_V_7_1_2_reg_3866;
wire  signed [29:0] grp_fu_3046_p3;
reg  signed [29:0] t_V_7_2_2_reg_3871;
wire   [7:0] pix_out_val_0_1_sr_cast_fu_1065_ap_return;
reg   [7:0] pix_out_val_0_1_reg_3876;
wire   [7:0] pix_out_val_1_1_sr_cast_fu_1070_ap_return;
reg   [7:0] pix_out_val_1_1_reg_3881;
wire   [7:0] tmp_64_sr_cast_fu_1075_ap_return;
reg   [7:0] tmp_64_reg_3886;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter35;
reg    ap_condition_pp0_exit_iter36_state87;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter41;
wire   [11:0] linebuf_val_val_0_0_address0;
reg    linebuf_val_val_0_0_ce0;
wire   [7:0] linebuf_val_val_0_0_q0;
reg    linebuf_val_val_0_0_ce1;
reg    linebuf_val_val_0_0_we1;
wire   [11:0] linebuf_val_val_0_1_address0;
reg    linebuf_val_val_0_1_ce0;
wire   [7:0] linebuf_val_val_0_1_q0;
reg    linebuf_val_val_0_1_ce1;
reg    linebuf_val_val_0_1_we1;
wire   [11:0] linebuf_val_val_0_2_address0;
reg    linebuf_val_val_0_2_ce0;
wire   [7:0] linebuf_val_val_0_2_q0;
reg    linebuf_val_val_0_2_ce1;
reg    linebuf_val_val_0_2_we1;
wire   [11:0] linebuf_val_val_1_0_address0;
reg    linebuf_val_val_1_0_ce0;
wire   [7:0] linebuf_val_val_1_0_q0;
reg    linebuf_val_val_1_0_ce1;
reg    linebuf_val_val_1_0_we1;
wire   [7:0] linebuf_val_val_1_0_d1;
wire   [11:0] linebuf_val_val_1_1_address0;
reg    linebuf_val_val_1_1_ce0;
wire   [7:0] linebuf_val_val_1_1_q0;
reg    linebuf_val_val_1_1_ce1;
reg    linebuf_val_val_1_1_we1;
wire   [7:0] linebuf_val_val_1_1_d1;
wire   [11:0] linebuf_val_val_1_2_address0;
reg    linebuf_val_val_1_2_ce0;
wire   [7:0] linebuf_val_val_1_2_q0;
reg    linebuf_val_val_1_2_ce1;
reg    linebuf_val_val_1_2_we1;
wire   [7:0] linebuf_val_val_1_2_d1;
wire   [11:0] linebuf_val_val_2_0_address0;
reg    linebuf_val_val_2_0_ce0;
wire   [7:0] linebuf_val_val_2_0_q0;
reg    linebuf_val_val_2_0_ce1;
reg    linebuf_val_val_2_0_we1;
wire   [7:0] linebuf_val_val_2_0_d1;
wire   [11:0] linebuf_val_val_2_1_address0;
reg    linebuf_val_val_2_1_ce0;
wire   [7:0] linebuf_val_val_2_1_q0;
reg    linebuf_val_val_2_1_ce1;
reg    linebuf_val_val_2_1_we1;
wire   [7:0] linebuf_val_val_2_1_d1;
wire   [11:0] linebuf_val_val_2_2_address0;
reg    linebuf_val_val_2_2_ce0;
wire   [7:0] linebuf_val_val_2_2_q0;
reg    linebuf_val_val_2_2_ce1;
reg    linebuf_val_val_2_2_we1;
wire   [7:0] linebuf_val_val_2_2_d1;
wire   [11:0] linebuf_val_val_3_0_address0;
reg    linebuf_val_val_3_0_ce0;
wire   [7:0] linebuf_val_val_3_0_q0;
reg    linebuf_val_val_3_0_ce1;
reg    linebuf_val_val_3_0_we1;
wire   [11:0] linebuf_val_val_3_1_address0;
reg    linebuf_val_val_3_1_ce0;
wire   [7:0] linebuf_val_val_3_1_q0;
reg    linebuf_val_val_3_1_ce1;
reg    linebuf_val_val_3_1_we1;
wire   [11:0] linebuf_val_val_3_2_address0;
reg    linebuf_val_val_3_2_ce0;
wire   [7:0] linebuf_val_val_3_2_q0;
reg    linebuf_val_val_3_2_ce1;
reg    linebuf_val_val_3_2_we1;
wire    pix_out_val_0_sr_cast_fu_1047_ap_ready;
wire   [7:0] pix_out_val_0_sr_cast_fu_1047_ap_return;
wire    pix_out_val_1_sr_cast_fu_1053_ap_ready;
wire   [7:0] pix_out_val_1_sr_cast_fu_1053_ap_return;
wire    temp_out_0_val_2_sr_cast_fu_1059_ap_ready;
wire   [7:0] temp_out_0_val_2_sr_cast_fu_1059_ap_return;
wire    pix_out_val_0_1_sr_cast_fu_1065_ap_ready;
wire    pix_out_val_1_1_sr_cast_fu_1070_ap_ready;
wire    tmp_64_sr_cast_fu_1075_ap_ready;
reg   [12:0] p_Val2_8_reg_829;
wire    ap_CS_fsm_state94;
reg   [12:0] ap_phi_mux_p_Val2_10_phi_fu_844_p4;
reg   [15:0] ap_phi_mux_rows_rw_4_phi_fu_866_p4;
wire   [15:0] rows_rw_fu_1581_p3;
wire   [15:0] ap_phi_reg_pp0_iter34_rows_rw_4_reg_863;
wire   [15:0] rows_rw_1_fu_1537_p1;
reg   [0:0] ap_phi_mux_row_rd_en_3_phi_fu_875_p4;
wire   [0:0] ap_phi_reg_pp0_iter34_row_rd_en_3_reg_872;
wire   [0:0] not_s_fu_1542_p2;
wire   [0:0] ap_phi_reg_pp0_iter0_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter1_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter2_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter3_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter4_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter5_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter6_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter7_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter8_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter9_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter10_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter11_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter12_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter13_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter14_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter15_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter16_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter17_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter18_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter19_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter20_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter21_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter22_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter23_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter24_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter25_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter26_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter27_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter28_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter29_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter30_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter31_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter32_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter33_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter34_row_wr_en_3_reg_883;
reg   [0:0] ap_phi_reg_pp0_iter35_row_wr_en_3_reg_883;
wire   [0:0] ap_phi_reg_pp0_iter0_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter1_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter2_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter3_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter4_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter5_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter6_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter7_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter8_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter9_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter10_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter11_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter12_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter13_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter14_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter15_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter16_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter17_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter18_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter19_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter20_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter21_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter22_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter23_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter24_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter25_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter26_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter27_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter28_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter29_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter30_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter31_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter32_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter33_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter34_col_rd_en_1_reg_894;
reg   [0:0] ap_phi_reg_pp0_iter35_col_rd_en_1_reg_894;
wire   [0:0] ap_phi_reg_pp0_iter0_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter1_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter2_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter3_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter4_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter5_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter6_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter7_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter8_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter9_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter10_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter11_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter12_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter13_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter14_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter15_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter16_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter17_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter18_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter19_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter20_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter21_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter22_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter23_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter24_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter25_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter26_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter27_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter28_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter29_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter30_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter31_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter32_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter33_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter34_col_wr_en_1_reg_906;
reg   [0:0] ap_phi_reg_pp0_iter35_col_wr_en_1_reg_906;
reg   [7:0] ap_phi_mux_temp_out_3_val_2_s_phi_fu_921_p4;
wire   [7:0] ap_phi_reg_pp0_iter39_temp_out_3_val_2_s_reg_918;
reg   [7:0] ap_phi_mux_temp_out_3_val_1_s_phi_fu_932_p4;
wire   [7:0] ap_phi_reg_pp0_iter39_temp_out_3_val_1_s_reg_929;
reg   [7:0] ap_phi_mux_temp_out_3_val_0_s_phi_fu_943_p4;
wire   [7:0] ap_phi_reg_pp0_iter39_temp_out_3_val_0_s_reg_940;
reg   [7:0] ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4;
wire   [7:0] ap_phi_reg_pp0_iter39_temp_out_2_val_2_2_reg_951;
reg   [7:0] ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4;
wire   [7:0] ap_phi_reg_pp0_iter39_temp_out_2_val_1_2_reg_962;
reg   [7:0] ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4;
wire   [7:0] ap_phi_reg_pp0_iter39_temp_out_2_val_0_2_reg_973;
reg   [7:0] ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4;
wire   [7:0] ap_phi_reg_pp0_iter39_temp_out_1_val_2_2_reg_984;
reg   [7:0] ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4;
wire   [7:0] ap_phi_reg_pp0_iter39_temp_out_1_val_1_2_reg_995;
reg   [7:0] ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4;
wire   [7:0] ap_phi_reg_pp0_iter39_temp_out_1_val_0_2_reg_1006;
reg   [7:0] ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4;
wire   [7:0] ap_phi_reg_pp0_iter39_temp_out_0_val_0_reg_1017;
reg   [7:0] ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4;
wire   [7:0] ap_phi_reg_pp0_iter39_temp_out_0_val_1_reg_1027;
reg   [7:0] ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4;
wire   [7:0] ap_phi_reg_pp0_iter39_temp_out_0_val_2_4_reg_1037;
wire   [29:0] grp_fu_3054_p3;
wire   [29:0] grp_fu_3062_p3;
wire   [29:0] grp_fu_3070_p3;
wire   [63:0] tmp_51_fu_1972_p1;
wire   [63:0] tmp_40_fu_2355_p1;
wire   [63:0] tmp_59_fu_2428_p1;
reg    ap_block_pp0_stage0_01001;
reg   [0:0] row_wr_en_fu_238;
reg   [0:0] row_rd_en_fu_242;
reg   [15:0] cols_rw_fu_246;
wire   [15:0] cols_rw_1_dcol_2_fu_1634_p3;
wire   [15:0] cols_rw_1_dcol_fu_1725_p3;
reg   [15:0] drow_fu_250;
reg   [3:0] v_phase_V_1_fu_254;
reg   [31:0] h_phase_acc_V_2_fu_258;
wire   [31:0] h_phase_acc_V_1_fu_1863_p3;
reg   [31:0] v_phase_acc_V_2_fu_262;
wire   [31:0] v_phase_acc_V_1_fu_2043_p3;
reg   [7:0] h_shreg_val_0_val_3_fu_266;
wire   [7:0] h_shreg_val_0_val_3_7_fu_1900_p3;
reg   [7:0] h_shreg_val_0_val_3_1_fu_270;
reg   [7:0] h_shreg_val_0_val_3_2_fu_274;
reg   [7:0] v_fir_3_val_2_fu_278;
reg   [7:0] temp_out_0_val_1_1_fu_282;
reg   [7:0] temp_out_0_val_0_1_fu_286;
reg   [7:0] v_fir_2_val_2_1_fu_290;
wire   [7:0] v_fir_2_val_2_fu_2510_p3;
reg   [7:0] v_fir_2_val_1_1_fu_294;
wire   [7:0] v_fir_2_val_1_fu_2503_p3;
reg   [7:0] v_fir_2_val_0_1_fu_298;
wire   [7:0] v_fir_2_val_0_fu_2496_p3;
reg   [7:0] v_fir_1_val_2_1_fu_302;
wire   [7:0] v_fir_1_val_2_fu_2489_p3;
reg   [7:0] v_fir_1_val_1_1_fu_306;
wire   [7:0] v_fir_1_val_1_fu_2482_p3;
reg   [7:0] v_fir_0_val_0_1_fu_310;
wire   [7:0] v_fir_0_val_0_fu_2436_p6;
reg   [7:0] v_fir_0_val_1_1_fu_314;
wire   [7:0] v_fir_0_val_1_fu_2449_p6;
reg   [7:0] v_fir_0_val_2_1_fu_318;
wire   [7:0] v_fir_0_val_2_fu_2462_p6;
reg   [7:0] v_fir_1_val_0_1_fu_322;
wire   [7:0] v_fir_1_val_0_fu_2475_p3;
reg   [7:0] h_shreg_val_0_val_0_fu_326;
reg   [7:0] h_shreg_val_0_val_0_1_fu_330;
reg   [7:0] h_shreg_val_0_val_0_2_fu_334;
reg   [7:0] h_shreg_val_0_val_0_3_fu_338;
reg   [7:0] h_shreg_val_0_val_0_4_fu_342;
reg   [7:0] h_shreg_val_0_val_0_5_fu_346;
reg   [7:0] h_shreg_val_0_val_1_fu_350;
reg   [7:0] h_shreg_val_0_val_1_1_fu_354;
reg   [7:0] h_shreg_val_0_val_1_2_fu_358;
reg   [7:0] h_shreg_val_0_val_2_fu_362;
wire   [7:0] h_shreg_val_0_val_3_6_fu_1893_p3;
reg   [7:0] h_shreg_val_0_val_2_1_fu_366;
wire   [7:0] sel_SEBB1_fu_1886_p3;
reg   [7:0] h_shreg_val_0_val_2_2_fu_370;
wire   [7:0] sel_SEBB_fu_1879_p3;
reg   [7:0] temp_out_0_val_0_2_fu_374;
reg   [7:0] temp_out_0_val_1_2_fu_378;
reg   [7:0] v_fir_3_val_2_1_fu_382;
reg   [7:0] temp_out_1_val_0_fu_386;
reg   [7:0] temp_out_1_val_1_fu_390;
reg   [7:0] temp_out_1_val_2_fu_394;
reg   [7:0] temp_out_2_val_0_fu_398;
reg   [7:0] temp_out_2_val_1_fu_402;
reg   [7:0] temp_out_2_val_2_fu_406;
reg   [7:0] temp_out_3_val_0_fu_410;
reg   [7:0] temp_out_3_val_1_fu_414;
reg   [7:0] temp_out_3_val_2_fu_418;
wire   [7:0] tmp_56_fu_2724_p6;
wire   [7:0] tmp_57_fu_2738_p6;
wire   [7:0] tmp_58_fu_2752_p6;
wire  signed [10:0] rows_in_cast_fu_1116_p0;
wire  signed [10:0] cols_in_cast_fu_1120_p0;
wire  signed [10:0] tmp_1_fu_1124_p1;
wire  signed [26:0] tmp_1_fu_1124_p3;
wire   [44:0] grp_fu_1144_p0;
wire  signed [10:0] tmp_3_fu_1150_p1;
wire  signed [26:0] tmp_3_fu_1150_p3;
wire   [44:0] grp_fu_1170_p0;
wire  signed [12:0] rows_in_cast_fu_1116_p1;
wire   [0:0] tmp_4_fu_1176_p2;
wire  signed [12:0] cols_in_cast_fu_1120_p1;
wire   [0:0] tmp_8_fu_1190_p2;
wire   [31:0] grp_fu_1144_p2;
wire   [31:0] grp_fu_1170_p2;
wire   [47:0] r_V_fu_1227_p3;
wire   [47:0] ret_V_fu_1235_p2;
wire   [31:0] tmp_9_fu_1241_p4;
wire   [0:0] p_Result_s_fu_1251_p3;
wire   [31:0] ret_V_1_fu_1259_p2;
wire   [47:0] r_V_2_fu_1273_p3;
wire   [47:0] ret_V_2_fu_1281_p2;
wire   [31:0] tmp_s_fu_1287_p4;
wire   [0:0] p_Result_2_fu_1297_p3;
wire   [31:0] ret_V_4_fu_1305_p2;
wire   [15:0] tmp_fu_1337_p4;
wire   [15:0] tmp_11_fu_1357_p4;
wire   [12:0] tmp_12_fu_1377_p2;
wire   [13:0] i_op_assign_cast_fu_1386_p1;
wire   [12:0] r_V_3_fu_1405_p0;
wire  signed [31:0] r_V_3_fu_1405_p1;
wire   [28:0] t_V_fu_1418_p3;
wire   [11:0] tmp_17_fu_1435_p4;
wire   [0:0] slt_fu_1463_p2;
wire   [0:0] icmp2_fu_1445_p2;
wire   [0:0] rev_fu_1468_p2;
wire   [30:0] grp_fu_1513_p0;
wire   [28:0] t_V_1_fu_1517_p3;
wire   [30:0] grp_fu_1529_p0;
wire   [15:0] grp_fu_1513_p2;
wire   [15:0] tmp_23_fu_1549_p1;
wire   [15:0] tmp_25_fu_1558_p4;
wire   [0:0] tmp_24_fu_1552_p2;
wire   [15:0] tmp_26_fu_1567_p2;
wire   [15:0] tmp_27_fu_1573_p3;
wire   [15:0] grp_fu_1529_p2;
wire   [15:0] cols_rw_4_fu_1613_p1;
wire   [0:0] tmp_36_fu_1622_p2;
wire   [0:0] tmp_30_not1_fu_1617_p2;
wire   [0:0] or_cond2_fu_1628_p2;
wire   [0:0] tmp_39_not_fu_1642_p2;
wire   [15:0] tmp_31_fu_1666_p1;
wire   [15:0] tmp_30_fu_1676_p4;
wire   [0:0] tmp_29_fu_1670_p2;
wire   [15:0] tmp_32_fu_1686_p2;
wire   [0:0] p_Result_4_fu_1658_p3;
wire   [15:0] tmp_33_fu_1692_p3;
wire   [15:0] cols_rw_3_fu_1700_p3;
wire   [0:0] tmp_34_fu_1713_p2;
wire   [0:0] tmp_30_not_fu_1708_p2;
wire   [0:0] or_cond1_fu_1719_p2;
wire   [0:0] tmp_41_not_fu_1733_p2;
wire   [0:0] tmp_38_fu_1757_p2;
wire   [0:0] slt1_fu_1766_p2;
wire   [0:0] rev1_fu_1770_p2;
wire   [0:0] brmerge1_fu_1847_p2;
wire   [0:0] or_cond_fu_1852_p2;
wire   [31:0] h_phase_acc_V_fu_1858_p2;
wire   [3:0] h_phase_V_fu_1828_p4;
wire   [0:0] notrhs_fu_1983_p2;
wire   [0:0] tmp38_demorgan_fu_1994_p2;
wire   [0:0] tmp13_fu_1989_p2;
wire   [0:0] tmp14_fu_2000_p2;
wire   [0:0] brmerge_fu_2033_p2;
wire   [31:0] v_phase_acc_V_fu_2038_p2;
wire   [1:0] col_assign_fu_2097_p2;
wire   [1:0] tmp_41_fu_2102_p3;
wire   [11:0] tmp_43_fu_2151_p4;
wire   [0:0] icmp3_fu_2161_p2;
wire   [1:0] tmp_44_fu_2167_p3;
wire   [0:0] tmp_103_2_fu_2217_p2;
wire   [1:0] tmp_46_fu_2223_p3;
wire   [10:0] tmp_48_fu_2273_p4;
wire   [0:0] icmp4_fu_2283_p2;
wire   [1:0] tmp_49_fu_2289_p3;
wire   [7:0] tmp_42_fu_2109_p6;
wire   [7:0] h_fir_0_val_1_fu_2123_p6;
wire   [7:0] h_fir_0_val_2_fu_2137_p6;
wire  signed [28:0] grp_fu_2901_p3;
wire  signed [28:0] grp_fu_2926_p3;
wire  signed [28:0] grp_fu_2951_p3;
wire  signed [25:0] grp_fu_2976_p3;
wire  signed [28:0] grp_fu_2985_p3;
wire  signed [25:0] grp_fu_3002_p3;
wire  signed [28:0] grp_fu_3011_p3;
wire  signed [25:0] grp_fu_3028_p3;
wire  signed [28:0] grp_fu_3037_p3;
wire   [16:0] grp_fu_2877_p0;
wire   [24:0] hcoeffs_3_load_cast_fu_2343_p1;
wire   [7:0] grp_fu_2877_p1;
wire   [20:0] grp_fu_2877_p2;
wire   [16:0] grp_fu_2885_p0;
wire   [7:0] grp_fu_2885_p1;
wire   [20:0] grp_fu_2885_p2;
wire   [16:0] grp_fu_2893_p0;
wire   [7:0] grp_fu_2893_p1;
wire   [20:0] grp_fu_2893_p2;
wire  signed [20:0] grp_fu_2901_p0;
wire  signed [28:0] tmp_53_fu_2377_p1;
wire   [7:0] grp_fu_2901_p1;
wire  signed [20:0] grp_fu_2910_p0;
wire  signed [28:0] tmp_113_0_2_cast_cas_fu_2386_p1;
wire   [7:0] grp_fu_2910_p1;
wire   [16:0] grp_fu_2918_p0;
wire   [24:0] hcoeffs_0_load_cast_fu_2392_p1;
wire   [7:0] grp_fu_2918_p1;
wire  signed [29:0] grp_fu_2910_p3;
wire  signed [20:0] grp_fu_2926_p0;
wire   [7:0] grp_fu_2926_p1;
wire  signed [20:0] grp_fu_2935_p0;
wire   [7:0] grp_fu_2935_p1;
wire   [16:0] grp_fu_2943_p0;
wire   [7:0] grp_fu_2943_p1;
wire  signed [29:0] grp_fu_2935_p3;
wire  signed [20:0] grp_fu_2951_p0;
wire   [7:0] grp_fu_2951_p1;
wire  signed [20:0] grp_fu_2960_p0;
wire   [7:0] grp_fu_2960_p1;
wire   [16:0] grp_fu_2968_p0;
wire   [7:0] grp_fu_2968_p1;
wire  signed [29:0] grp_fu_2960_p3;
wire   [16:0] grp_fu_2976_p0;
wire   [24:0] vcoeffs_3_load_cast_fu_2806_p1;
wire   [7:0] grp_fu_2976_p1;
wire   [20:0] grp_fu_2976_p2;
wire  signed [20:0] grp_fu_2985_p0;
wire  signed [28:0] tmp_61_fu_2816_p1;
wire   [7:0] grp_fu_2985_p1;
wire  signed [20:0] grp_fu_2994_p0;
wire  signed [28:0] tmp_131_0_2_cast_cas_fu_2826_p1;
wire   [7:0] grp_fu_2994_p1;
wire   [16:0] grp_fu_3002_p0;
wire   [7:0] grp_fu_3002_p1;
wire   [20:0] grp_fu_3002_p2;
wire  signed [20:0] grp_fu_3011_p0;
wire   [7:0] grp_fu_3011_p1;
wire  signed [20:0] grp_fu_3020_p0;
wire   [7:0] grp_fu_3020_p1;
wire   [16:0] grp_fu_3028_p0;
wire   [7:0] grp_fu_3028_p1;
wire   [20:0] grp_fu_3028_p2;
wire  signed [20:0] grp_fu_3037_p0;
wire   [7:0] grp_fu_3037_p1;
wire  signed [20:0] grp_fu_3046_p0;
wire   [7:0] grp_fu_3046_p1;
wire   [16:0] grp_fu_3054_p0;
wire   [24:0] vcoeffs_0_load_cast_fu_2868_p1;
wire   [7:0] grp_fu_3054_p1;
wire   [16:0] grp_fu_3062_p0;
wire   [7:0] grp_fu_3062_p1;
wire   [16:0] grp_fu_3070_p0;
wire   [7:0] grp_fu_3070_p1;
reg    grp_fu_1144_ap_start;
wire    grp_fu_1144_ap_done;
reg    grp_fu_1170_ap_start;
wire    grp_fu_1170_ap_done;
reg    grp_fu_1513_ce;
reg    grp_fu_1529_ce;
reg   [51:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [31:0] grp_fu_1529_p00;
wire   [24:0] grp_fu_2877_p10;
wire   [24:0] grp_fu_2885_p10;
wire   [24:0] grp_fu_2893_p10;
wire   [28:0] grp_fu_2901_p10;
wire   [28:0] grp_fu_2910_p10;
wire   [24:0] grp_fu_2918_p10;
wire   [28:0] grp_fu_2926_p10;
wire   [28:0] grp_fu_2935_p10;
wire   [24:0] grp_fu_2943_p10;
wire   [28:0] grp_fu_2951_p10;
wire   [28:0] grp_fu_2960_p10;
wire   [24:0] grp_fu_2968_p10;
wire   [24:0] grp_fu_2976_p10;
wire   [28:0] grp_fu_2985_p10;
wire   [28:0] grp_fu_2994_p10;
wire   [24:0] grp_fu_3002_p10;
wire   [28:0] grp_fu_3011_p10;
wire   [28:0] grp_fu_3020_p10;
wire   [24:0] grp_fu_3028_p10;
wire   [28:0] grp_fu_3037_p10;
wire   [28:0] grp_fu_3046_p10;
wire   [24:0] grp_fu_3054_p10;
wire   [24:0] grp_fu_3062_p10;
wire   [24:0] grp_fu_3070_p10;
wire   [44:0] r_V_3_fu_1405_p00;
reg    ap_condition_1347;
reg    ap_condition_3347;
reg    ap_condition_633;
reg    ap_condition_1074;
reg    ap_condition_3357;

// power-on initialization
initial begin
#0 ap_CS_fsm = 52'd1;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
end

Resize_opr_bicubibkb #(
    .DataWidth( 17 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
hcoeffs_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hcoeffs_3_address0),
    .ce0(hcoeffs_3_ce0),
    .q0(hcoeffs_3_q0)
);

Resize_opr_bicubicud #(
    .DataWidth( 21 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
hcoeffs_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hcoeffs_2_address0),
    .ce0(hcoeffs_2_ce0),
    .q0(hcoeffs_2_q0)
);

Resize_opr_bicubidEe #(
    .DataWidth( 21 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
hcoeffs_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hcoeffs_1_address0),
    .ce0(hcoeffs_1_ce0),
    .q0(hcoeffs_1_q0)
);

Resize_opr_bicubieOg #(
    .DataWidth( 17 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
hcoeffs_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hcoeffs_0_address0),
    .ce0(hcoeffs_0_ce0),
    .q0(hcoeffs_0_q0)
);

Resize_opr_bicubibkb #(
    .DataWidth( 17 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
vcoeffs_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(vcoeffs_3_address0),
    .ce0(vcoeffs_3_ce0),
    .q0(vcoeffs_3_q0)
);

Resize_opr_bicubicud #(
    .DataWidth( 21 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
vcoeffs_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(vcoeffs_2_address0),
    .ce0(vcoeffs_2_ce0),
    .q0(vcoeffs_2_q0)
);

Resize_opr_bicubidEe #(
    .DataWidth( 21 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
vcoeffs_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(vcoeffs_1_address0),
    .ce0(vcoeffs_1_ce0),
    .q0(vcoeffs_1_q0)
);

Resize_opr_bicubieOg #(
    .DataWidth( 17 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
vcoeffs_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(vcoeffs_0_address0),
    .ce0(vcoeffs_0_ce0),
    .q0(vcoeffs_0_q0)
);

Resize_opr_bicubijbC #(
    .DataWidth( 8 ),
    .AddressRange( 3843 ),
    .AddressWidth( 12 ))
linebuf_val_val_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_val_val_0_0_address0),
    .ce0(linebuf_val_val_0_0_ce0),
    .q0(linebuf_val_val_0_0_q0),
    .address1(linebuf_val_val_0_0_s_reg_3719_pp0_iter39_reg),
    .ce1(linebuf_val_val_0_0_ce1),
    .we1(linebuf_val_val_0_0_we1),
    .d1(temp_out_0_val_0_2_fu_374)
);

Resize_opr_bicubijbC #(
    .DataWidth( 8 ),
    .AddressRange( 3843 ),
    .AddressWidth( 12 ))
linebuf_val_val_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_val_val_0_1_address0),
    .ce0(linebuf_val_val_0_1_ce0),
    .q0(linebuf_val_val_0_1_q0),
    .address1(linebuf_val_val_0_1_s_reg_3725_pp0_iter39_reg),
    .ce1(linebuf_val_val_0_1_ce1),
    .we1(linebuf_val_val_0_1_we1),
    .d1(temp_out_0_val_1_2_fu_378)
);

Resize_opr_bicubijbC #(
    .DataWidth( 8 ),
    .AddressRange( 3843 ),
    .AddressWidth( 12 ))
linebuf_val_val_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_val_val_0_2_address0),
    .ce0(linebuf_val_val_0_2_ce0),
    .q0(linebuf_val_val_0_2_q0),
    .address1(linebuf_val_val_0_2_s_reg_3731_pp0_iter39_reg),
    .ce1(linebuf_val_val_0_2_ce1),
    .we1(linebuf_val_val_0_2_we1),
    .d1(v_fir_3_val_2_1_fu_382)
);

Resize_opr_bicubijbC #(
    .DataWidth( 8 ),
    .AddressRange( 3843 ),
    .AddressWidth( 12 ))
linebuf_val_val_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_val_val_1_0_address0),
    .ce0(linebuf_val_val_1_0_ce0),
    .q0(linebuf_val_val_1_0_q0),
    .address1(linebuf_val_val_1_0_s_reg_3737_pp0_iter39_reg),
    .ce1(linebuf_val_val_1_0_ce1),
    .we1(linebuf_val_val_1_0_we1),
    .d1(linebuf_val_val_1_0_d1)
);

Resize_opr_bicubijbC #(
    .DataWidth( 8 ),
    .AddressRange( 3843 ),
    .AddressWidth( 12 ))
linebuf_val_val_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_val_val_1_1_address0),
    .ce0(linebuf_val_val_1_1_ce0),
    .q0(linebuf_val_val_1_1_q0),
    .address1(linebuf_val_val_1_1_s_reg_3743_pp0_iter39_reg),
    .ce1(linebuf_val_val_1_1_ce1),
    .we1(linebuf_val_val_1_1_we1),
    .d1(linebuf_val_val_1_1_d1)
);

Resize_opr_bicubijbC #(
    .DataWidth( 8 ),
    .AddressRange( 3843 ),
    .AddressWidth( 12 ))
linebuf_val_val_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_val_val_1_2_address0),
    .ce0(linebuf_val_val_1_2_ce0),
    .q0(linebuf_val_val_1_2_q0),
    .address1(linebuf_val_val_1_2_s_reg_3749_pp0_iter39_reg),
    .ce1(linebuf_val_val_1_2_ce1),
    .we1(linebuf_val_val_1_2_we1),
    .d1(linebuf_val_val_1_2_d1)
);

Resize_opr_bicubijbC #(
    .DataWidth( 8 ),
    .AddressRange( 3843 ),
    .AddressWidth( 12 ))
linebuf_val_val_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_val_val_2_0_address0),
    .ce0(linebuf_val_val_2_0_ce0),
    .q0(linebuf_val_val_2_0_q0),
    .address1(linebuf_val_val_2_0_s_reg_3755_pp0_iter39_reg),
    .ce1(linebuf_val_val_2_0_ce1),
    .we1(linebuf_val_val_2_0_we1),
    .d1(linebuf_val_val_2_0_d1)
);

Resize_opr_bicubijbC #(
    .DataWidth( 8 ),
    .AddressRange( 3843 ),
    .AddressWidth( 12 ))
linebuf_val_val_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_val_val_2_1_address0),
    .ce0(linebuf_val_val_2_1_ce0),
    .q0(linebuf_val_val_2_1_q0),
    .address1(linebuf_val_val_2_1_s_reg_3761_pp0_iter39_reg),
    .ce1(linebuf_val_val_2_1_ce1),
    .we1(linebuf_val_val_2_1_we1),
    .d1(linebuf_val_val_2_1_d1)
);

Resize_opr_bicubijbC #(
    .DataWidth( 8 ),
    .AddressRange( 3843 ),
    .AddressWidth( 12 ))
linebuf_val_val_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_val_val_2_2_address0),
    .ce0(linebuf_val_val_2_2_ce0),
    .q0(linebuf_val_val_2_2_q0),
    .address1(linebuf_val_val_2_2_s_reg_3767_pp0_iter39_reg),
    .ce1(linebuf_val_val_2_2_ce1),
    .we1(linebuf_val_val_2_2_we1),
    .d1(linebuf_val_val_2_2_d1)
);

Resize_opr_bicubijbC #(
    .DataWidth( 8 ),
    .AddressRange( 3843 ),
    .AddressWidth( 12 ))
linebuf_val_val_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_val_val_3_0_address0),
    .ce0(linebuf_val_val_3_0_ce0),
    .q0(linebuf_val_val_3_0_q0),
    .address1(linebuf_val_val_3_0_s_reg_3773_pp0_iter39_reg),
    .ce1(linebuf_val_val_3_0_ce1),
    .we1(linebuf_val_val_3_0_we1),
    .d1(tmp_56_fu_2724_p6)
);

Resize_opr_bicubijbC #(
    .DataWidth( 8 ),
    .AddressRange( 3843 ),
    .AddressWidth( 12 ))
linebuf_val_val_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_val_val_3_1_address0),
    .ce0(linebuf_val_val_3_1_ce0),
    .q0(linebuf_val_val_3_1_q0),
    .address1(linebuf_val_val_3_1_s_reg_3779_pp0_iter39_reg),
    .ce1(linebuf_val_val_3_1_ce1),
    .we1(linebuf_val_val_3_1_we1),
    .d1(tmp_57_fu_2738_p6)
);

Resize_opr_bicubijbC #(
    .DataWidth( 8 ),
    .AddressRange( 3843 ),
    .AddressWidth( 12 ))
linebuf_val_val_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_val_val_3_2_address0),
    .ce0(linebuf_val_val_3_2_ce0),
    .q0(linebuf_val_val_3_2_q0),
    .address1(linebuf_val_val_3_2_s_reg_3785_pp0_iter39_reg),
    .ce1(linebuf_val_val_3_2_ce1),
    .we1(linebuf_val_val_3_2_we1),
    .d1(tmp_58_fu_2752_p6)
);

sr_cast pix_out_val_0_sr_cast_fu_1047(
    .ap_ready(pix_out_val_0_sr_cast_fu_1047_ap_ready),
    .v_V(t_V_5_0_3_reg_3791),
    .ap_return(pix_out_val_0_sr_cast_fu_1047_ap_return)
);

sr_cast pix_out_val_1_sr_cast_fu_1053(
    .ap_ready(pix_out_val_1_sr_cast_fu_1053_ap_ready),
    .v_V(t_V_5_1_3_reg_3796),
    .ap_return(pix_out_val_1_sr_cast_fu_1053_ap_return)
);

sr_cast temp_out_0_val_2_sr_cast_fu_1059(
    .ap_ready(temp_out_0_val_2_sr_cast_fu_1059_ap_ready),
    .v_V(t_V_5_2_3_reg_3801),
    .ap_return(temp_out_0_val_2_sr_cast_fu_1059_ap_return)
);

sr_cast pix_out_val_0_1_sr_cast_fu_1065(
    .ap_ready(pix_out_val_0_1_sr_cast_fu_1065_ap_ready),
    .v_V(grp_fu_3054_p3),
    .ap_return(pix_out_val_0_1_sr_cast_fu_1065_ap_return)
);

sr_cast pix_out_val_1_1_sr_cast_fu_1070(
    .ap_ready(pix_out_val_1_1_sr_cast_fu_1070_ap_ready),
    .v_V(grp_fu_3062_p3),
    .ap_return(pix_out_val_1_1_sr_cast_fu_1070_ap_return)
);

sr_cast tmp_64_sr_cast_fu_1075(
    .ap_ready(tmp_64_sr_cast_fu_1075_ap_ready),
    .v_V(grp_fu_3070_p3),
    .ap_return(tmp_64_sr_cast_fu_1075_ap_return)
);

my_hls_resize_sdivdy #(
    .ID( 1 ),
    .NUM_STAGE( 49 ),
    .din0_WIDTH( 45 ),
    .din1_WIDTH( 27 ),
    .dout_WIDTH( 32 ))
my_hls_resize_sdivdy_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1144_ap_start),
    .done(grp_fu_1144_ap_done),
    .din0(grp_fu_1144_p0),
    .din1(tmp_1_fu_1124_p3),
    .ce(1'b1),
    .dout(grp_fu_1144_p2)
);

my_hls_resize_sdivdy #(
    .ID( 1 ),
    .NUM_STAGE( 49 ),
    .din0_WIDTH( 45 ),
    .din1_WIDTH( 27 ),
    .dout_WIDTH( 32 ))
my_hls_resize_sdivdy_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1170_ap_start),
    .done(grp_fu_1170_ap_done),
    .din0(grp_fu_1170_p0),
    .din1(tmp_3_fu_1150_p3),
    .ce(1'b1),
    .dout(grp_fu_1170_p2)
);

my_hls_resize_sdiwdI #(
    .ID( 1 ),
    .NUM_STAGE( 35 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 16 ))
my_hls_resize_sdiwdI_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1513_p0),
    .din1(row_ratio_V_reg_3408),
    .ce(grp_fu_1513_ce),
    .dout(grp_fu_1513_p2)
);

my_hls_resize_sdiwdI #(
    .ID( 1 ),
    .NUM_STAGE( 35 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 16 ))
my_hls_resize_sdiwdI_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1529_p0),
    .din1(col_ratio_V_reg_3413),
    .ce(grp_fu_1529_ce),
    .dout(grp_fu_1529_p2)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U24(
    .din0(h_shreg_val_0_val_0_fu_326),
    .din1(h_shreg_val_0_val_0_3_fu_338),
    .din2(h_shreg_val_0_val_1_fu_350),
    .din3(h_shreg_val_0_val_2_fu_362),
    .din4(tmp_41_fu_2102_p3),
    .dout(tmp_42_fu_2109_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U25(
    .din0(h_shreg_val_0_val_0_1_fu_330),
    .din1(h_shreg_val_0_val_0_4_fu_342),
    .din2(h_shreg_val_0_val_1_1_fu_354),
    .din3(h_shreg_val_0_val_2_1_fu_366),
    .din4(tmp_41_fu_2102_p3),
    .dout(h_fir_0_val_1_fu_2123_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U26(
    .din0(h_shreg_val_0_val_0_2_fu_334),
    .din1(h_shreg_val_0_val_0_5_fu_346),
    .din2(h_shreg_val_0_val_1_2_fu_358),
    .din3(h_shreg_val_0_val_2_2_fu_370),
    .din4(tmp_41_fu_2102_p3),
    .dout(h_fir_0_val_2_fu_2137_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U27(
    .din0(h_shreg_val_0_val_0_fu_326),
    .din1(h_shreg_val_0_val_0_3_fu_338),
    .din2(h_shreg_val_0_val_1_fu_350),
    .din3(h_shreg_val_0_val_2_fu_362),
    .din4(tmp_44_fu_2167_p3),
    .dout(tmp_45_fu_2175_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U28(
    .din0(h_shreg_val_0_val_0_1_fu_330),
    .din1(h_shreg_val_0_val_0_4_fu_342),
    .din2(h_shreg_val_0_val_1_1_fu_354),
    .din3(h_shreg_val_0_val_2_1_fu_366),
    .din4(tmp_44_fu_2167_p3),
    .dout(h_fir_1_val_1_fu_2189_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U29(
    .din0(h_shreg_val_0_val_0_2_fu_334),
    .din1(h_shreg_val_0_val_0_5_fu_346),
    .din2(h_shreg_val_0_val_1_2_fu_358),
    .din3(h_shreg_val_0_val_2_2_fu_370),
    .din4(tmp_44_fu_2167_p3),
    .dout(h_fir_1_val_2_fu_2203_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U30(
    .din0(h_shreg_val_0_val_0_fu_326),
    .din1(h_shreg_val_0_val_0_3_fu_338),
    .din2(h_shreg_val_0_val_1_fu_350),
    .din3(h_shreg_val_0_val_2_fu_362),
    .din4(tmp_46_fu_2223_p3),
    .dout(tmp_47_fu_2231_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U31(
    .din0(h_shreg_val_0_val_0_1_fu_330),
    .din1(h_shreg_val_0_val_0_4_fu_342),
    .din2(h_shreg_val_0_val_1_1_fu_354),
    .din3(h_shreg_val_0_val_2_1_fu_366),
    .din4(tmp_46_fu_2223_p3),
    .dout(h_fir_2_val_1_fu_2245_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U32(
    .din0(h_shreg_val_0_val_0_2_fu_334),
    .din1(h_shreg_val_0_val_0_5_fu_346),
    .din2(h_shreg_val_0_val_1_2_fu_358),
    .din3(h_shreg_val_0_val_2_2_fu_370),
    .din4(tmp_46_fu_2223_p3),
    .dout(h_fir_2_val_2_fu_2259_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U33(
    .din0(h_shreg_val_0_val_0_fu_326),
    .din1(h_shreg_val_0_val_0_3_fu_338),
    .din2(h_shreg_val_0_val_1_fu_350),
    .din3(h_shreg_val_0_val_2_fu_362),
    .din4(tmp_49_fu_2289_p3),
    .dout(tmp_50_fu_2297_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U34(
    .din0(h_shreg_val_0_val_0_1_fu_330),
    .din1(h_shreg_val_0_val_0_4_fu_342),
    .din2(h_shreg_val_0_val_1_1_fu_354),
    .din3(h_shreg_val_0_val_2_1_fu_366),
    .din4(tmp_49_fu_2289_p3),
    .dout(h_fir_3_val_1_fu_2311_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U35(
    .din0(h_shreg_val_0_val_0_2_fu_334),
    .din1(h_shreg_val_0_val_0_5_fu_346),
    .din2(h_shreg_val_0_val_1_2_fu_358),
    .din3(h_shreg_val_0_val_2_2_fu_370),
    .din4(tmp_49_fu_2289_p3),
    .dout(h_fir_3_val_2_fu_2325_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U36(
    .din0(ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4),
    .din1(ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4),
    .din2(ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4),
    .din3(ap_phi_mux_temp_out_3_val_0_s_phi_fu_943_p4),
    .din4(tmp_118_0_t_reg_3531),
    .dout(v_fir_0_val_0_fu_2436_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U37(
    .din0(ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4),
    .din1(ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4),
    .din2(ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4),
    .din3(ap_phi_mux_temp_out_3_val_1_s_phi_fu_932_p4),
    .din4(tmp_118_0_t_reg_3531),
    .dout(v_fir_0_val_1_fu_2449_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U38(
    .din0(ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4),
    .din1(ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4),
    .din2(ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4),
    .din3(ap_phi_mux_temp_out_3_val_2_s_phi_fu_921_p4),
    .din4(tmp_118_0_t_reg_3531),
    .dout(v_fir_0_val_2_fu_2462_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U39(
    .din0(temp_out_0_val_0_2_fu_374),
    .din1(temp_out_1_val_0_fu_386),
    .din2(temp_out_2_val_0_fu_398),
    .din3(temp_out_3_val_0_fu_410),
    .din4(tmp_118_0_t_reg_3531),
    .dout(tmp_56_fu_2724_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U40(
    .din0(temp_out_0_val_1_2_fu_378),
    .din1(temp_out_1_val_1_fu_390),
    .din2(temp_out_2_val_1_fu_402),
    .din3(temp_out_3_val_1_fu_414),
    .din4(tmp_118_0_t_reg_3531),
    .dout(tmp_57_fu_2738_p6)
);

my_hls_resize_muxxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
my_hls_resize_muxxdS_U41(
    .din0(v_fir_3_val_2_1_fu_382),
    .din1(temp_out_1_val_2_fu_394),
    .din2(temp_out_2_val_2_fu_406),
    .din3(temp_out_3_val_2_fu_418),
    .din4(tmp_118_0_t_reg_3531),
    .dout(tmp_58_fu_2752_p6)
);

my_hls_resize_macyd2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 26 ))
my_hls_resize_macyd2_U42(
    .din0(grp_fu_2877_p0),
    .din1(grp_fu_2877_p1),
    .din2(grp_fu_2877_p2),
    .dout(grp_fu_2877_p3)
);

my_hls_resize_macyd2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 26 ))
my_hls_resize_macyd2_U43(
    .din0(grp_fu_2885_p0),
    .din1(grp_fu_2885_p1),
    .din2(grp_fu_2885_p2),
    .dout(grp_fu_2885_p3)
);

my_hls_resize_macyd2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 26 ))
my_hls_resize_macyd2_U44(
    .din0(grp_fu_2893_p0),
    .din1(grp_fu_2893_p1),
    .din2(grp_fu_2893_p2),
    .dout(grp_fu_2893_p3)
);

my_hls_resize_maczec #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 29 ))
my_hls_resize_maczec_U45(
    .din0(grp_fu_2901_p0),
    .din1(grp_fu_2901_p1),
    .din2(t_V_5_reg_3689),
    .dout(grp_fu_2901_p3)
);

my_hls_resize_macAem #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 30 ))
my_hls_resize_macAem_U46(
    .din0(grp_fu_2910_p0),
    .din1(grp_fu_2910_p1),
    .din2(grp_fu_2901_p3),
    .dout(grp_fu_2910_p3)
);

my_hls_resize_macBew #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 30 ))
my_hls_resize_macBew_U47(
    .din0(grp_fu_2918_p0),
    .din1(grp_fu_2918_p1),
    .din2(grp_fu_2910_p3),
    .dout(grp_fu_2918_p3)
);

my_hls_resize_maczec #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 29 ))
my_hls_resize_maczec_U48(
    .din0(grp_fu_2926_p0),
    .din1(grp_fu_2926_p1),
    .din2(t_V_5_1_reg_3709),
    .dout(grp_fu_2926_p3)
);

my_hls_resize_macAem #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 30 ))
my_hls_resize_macAem_U49(
    .din0(grp_fu_2935_p0),
    .din1(grp_fu_2935_p1),
    .din2(grp_fu_2926_p3),
    .dout(grp_fu_2935_p3)
);

my_hls_resize_macBew #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 30 ))
my_hls_resize_macBew_U50(
    .din0(grp_fu_2943_p0),
    .din1(grp_fu_2943_p1),
    .din2(grp_fu_2935_p3),
    .dout(grp_fu_2943_p3)
);

my_hls_resize_maczec #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 29 ))
my_hls_resize_maczec_U51(
    .din0(grp_fu_2951_p0),
    .din1(grp_fu_2951_p1),
    .din2(t_V_5_2_reg_3714),
    .dout(grp_fu_2951_p3)
);

my_hls_resize_macAem #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 30 ))
my_hls_resize_macAem_U52(
    .din0(grp_fu_2960_p0),
    .din1(grp_fu_2960_p1),
    .din2(grp_fu_2951_p3),
    .dout(grp_fu_2960_p3)
);

my_hls_resize_macBew #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 30 ))
my_hls_resize_macBew_U53(
    .din0(grp_fu_2968_p0),
    .din1(grp_fu_2968_p1),
    .din2(grp_fu_2960_p3),
    .dout(grp_fu_2968_p3)
);

my_hls_resize_macyd2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 26 ))
my_hls_resize_macyd2_U54(
    .din0(grp_fu_2976_p0),
    .din1(grp_fu_2976_p1),
    .din2(grp_fu_2976_p2),
    .dout(grp_fu_2976_p3)
);

my_hls_resize_maczec #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 29 ))
my_hls_resize_maczec_U55(
    .din0(grp_fu_2985_p0),
    .din1(grp_fu_2985_p1),
    .din2(grp_fu_2976_p3),
    .dout(grp_fu_2985_p3)
);

my_hls_resize_macAem #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 30 ))
my_hls_resize_macAem_U56(
    .din0(grp_fu_2994_p0),
    .din1(grp_fu_2994_p1),
    .din2(grp_fu_2985_p3),
    .dout(grp_fu_2994_p3)
);

my_hls_resize_macyd2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 26 ))
my_hls_resize_macyd2_U57(
    .din0(grp_fu_3002_p0),
    .din1(grp_fu_3002_p1),
    .din2(grp_fu_3002_p2),
    .dout(grp_fu_3002_p3)
);

my_hls_resize_maczec #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 29 ))
my_hls_resize_maczec_U58(
    .din0(grp_fu_3011_p0),
    .din1(grp_fu_3011_p1),
    .din2(grp_fu_3002_p3),
    .dout(grp_fu_3011_p3)
);

my_hls_resize_macAem #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 30 ))
my_hls_resize_macAem_U59(
    .din0(grp_fu_3020_p0),
    .din1(grp_fu_3020_p1),
    .din2(grp_fu_3011_p3),
    .dout(grp_fu_3020_p3)
);

my_hls_resize_macyd2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 26 ))
my_hls_resize_macyd2_U60(
    .din0(grp_fu_3028_p0),
    .din1(grp_fu_3028_p1),
    .din2(grp_fu_3028_p2),
    .dout(grp_fu_3028_p3)
);

my_hls_resize_maczec #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 29 ))
my_hls_resize_maczec_U61(
    .din0(grp_fu_3037_p0),
    .din1(grp_fu_3037_p1),
    .din2(grp_fu_3028_p3),
    .dout(grp_fu_3037_p3)
);

my_hls_resize_macAem #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 30 ))
my_hls_resize_macAem_U62(
    .din0(grp_fu_3046_p0),
    .din1(grp_fu_3046_p1),
    .din2(grp_fu_3037_p3),
    .dout(grp_fu_3046_p3)
);

my_hls_resize_macBew #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 30 ))
my_hls_resize_macBew_U63(
    .din0(grp_fu_3054_p0),
    .din1(grp_fu_3054_p1),
    .din2(t_V_7_0_2_reg_3861),
    .dout(grp_fu_3054_p3)
);

my_hls_resize_macBew #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 30 ))
my_hls_resize_macBew_U64(
    .din0(grp_fu_3062_p0),
    .din1(grp_fu_3062_p1),
    .din2(t_V_7_1_2_reg_3866),
    .dout(grp_fu_3062_p3)
);

my_hls_resize_macBew #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 30 ))
my_hls_resize_macBew_U65(
    .din0(grp_fu_3070_p0),
    .din1(grp_fu_3070_p1),
    .din2(t_V_7_2_2_reg_3871),
    .dout(grp_fu_3070_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_20_fu_1496_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state50) & (tmp_13_fu_1390_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter36_state87)) begin
                ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter35;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end else if (((1'b1 == ap_CS_fsm_state50) & (tmp_13_fu_1390_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter42 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        if (((icmp1_reg_3460 == 1'd0) & (tmp_20_reg_3557_pp0_iter33_reg == 1'd1))) begin
            ap_phi_reg_pp0_iter35_col_rd_en_1_reg_894 <= not_or_cond1_fu_1648_p2;
        end else if (((tmp_20_reg_3557_pp0_iter33_reg == 1'd1) & (icmp1_reg_3460 == 1'd1))) begin
            ap_phi_reg_pp0_iter35_col_rd_en_1_reg_894 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter35_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter34_col_rd_en_1_reg_894;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        if (((icmp1_reg_3460 == 1'd0) & (tmp_20_reg_3557_pp0_iter33_reg == 1'd1))) begin
            ap_phi_reg_pp0_iter35_col_wr_en_1_reg_906 <= 1'd1;
        end else if (((tmp_20_reg_3557_pp0_iter33_reg == 1'd1) & (icmp1_reg_3460 == 1'd1))) begin
            ap_phi_reg_pp0_iter35_col_wr_en_1_reg_906 <= not_or_cond_fu_1739_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter35_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter34_col_wr_en_1_reg_906;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        if ((1'b1 == ap_condition_1074)) begin
            ap_phi_reg_pp0_iter35_row_wr_en_3_reg_883 <= 1'd1;
        end else if ((1'b1 == ap_condition_633)) begin
            ap_phi_reg_pp0_iter35_row_wr_en_3_reg_883 <= not_1_fu_1589_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter35_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter34_row_wr_en_3_reg_883;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1) & (tmp_20_reg_3557_pp0_iter33_reg == 1'd1) & (icmp1_reg_3460 == 1'd1))) begin
        cols_rw_fu_246 <= cols_rw_1_dcol_fu_1725_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1) & (icmp1_reg_3460 == 1'd0) & (tmp_20_reg_3557_pp0_iter33_reg == 1'd1))) begin
        cols_rw_fu_246 <= cols_rw_1_dcol_2_fu_1634_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_rw_fu_246 <= 16'd65535;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1) & (tmp_22_reg_3566_pp0_iter33_reg == 1'd1) & (tmp_20_reg_3557_pp0_iter33_reg == 1'd1))) begin
        drow_fu_250 <= ap_phi_mux_rows_rw_4_phi_fu_866_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        drow_fu_250 <= 16'd65535;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_3357)) begin
        if ((or_cond3_reg_3603 == 1'd1)) begin
            h_shreg_val_0_val_2_1_fu_366 <= p_src_data_stream_1_V_dout;
        end else if (((or_cond3_reg_3603 == 1'd0) & (or_cond4_reg_3607 == 1'd1))) begin
            h_shreg_val_0_val_2_1_fu_366 <= h_shreg_val_0_val_3_1_fu_270;
        end else if (((or_cond4_reg_3607 == 1'd0) & (or_cond3_reg_3603 == 1'd0))) begin
            h_shreg_val_0_val_2_1_fu_366 <= sel_SEBB1_fu_1886_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_3357)) begin
        if ((or_cond3_reg_3603 == 1'd1)) begin
            h_shreg_val_0_val_2_2_fu_370 <= p_src_data_stream_2_V_dout;
        end else if (((or_cond3_reg_3603 == 1'd0) & (or_cond4_reg_3607 == 1'd1))) begin
            h_shreg_val_0_val_2_2_fu_370 <= h_shreg_val_0_val_3_2_fu_274;
        end else if (((or_cond4_reg_3607 == 1'd0) & (or_cond3_reg_3603 == 1'd0))) begin
            h_shreg_val_0_val_2_2_fu_370 <= sel_SEBB_fu_1879_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_3357)) begin
        if ((or_cond3_reg_3603 == 1'd1)) begin
            h_shreg_val_0_val_2_fu_362 <= p_src_data_stream_0_V_dout;
        end else if (((or_cond3_reg_3603 == 1'd0) & (or_cond4_reg_3607 == 1'd1))) begin
            h_shreg_val_0_val_2_fu_362 <= h_shreg_val_0_val_3_fu_266;
        end else if (((or_cond4_reg_3607 == 1'd0) & (or_cond3_reg_3603 == 1'd0))) begin
            h_shreg_val_0_val_2_fu_362 <= h_shreg_val_0_val_3_6_fu_1893_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_3357)) begin
        if ((or_cond3_reg_3603 == 1'd1)) begin
            h_shreg_val_0_val_3_fu_266 <= p_src_data_stream_0_V_dout;
        end else if (((or_cond4_reg_3607 == 1'd0) & (or_cond3_reg_3603 == 1'd0))) begin
            h_shreg_val_0_val_3_fu_266 <= h_shreg_val_0_val_3_7_fu_1900_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_20_reg_3557 == 1'd1))) begin
        p_Val2_10_reg_840 <= col_reg_3561;
    end else if (((1'b1 == ap_CS_fsm_state50) & (tmp_13_fu_1390_p2 == 1'd1))) begin
        p_Val2_10_reg_840 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        p_Val2_8_reg_829 <= row_reg_3479;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        p_Val2_8_reg_829 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1) & (tmp_20_reg_3557_pp0_iter33_reg == 1'd1))) begin
        r_V_4_reg_852 <= next_mul_fu_1605_p2;
    end else if (((1'b1 == ap_CS_fsm_state50) & (tmp_13_fu_1390_p2 == 1'd1))) begin
        r_V_4_reg_852 <= 45'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        if ((1'b1 == ap_condition_1074)) begin
            row_rd_en_3_reg_872 <= not_s_fu_1542_p2;
        end else if ((1'b1 == ap_condition_633)) begin
            row_rd_en_3_reg_872 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            row_rd_en_3_reg_872 <= ap_phi_reg_pp0_iter34_row_rd_en_3_reg_872;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1) & (tmp_22_reg_3566_pp0_iter36_reg == 1'd1))) begin
        v_phase_acc_V_2_fu_262 <= v_phase_acc_V_1_fu_2043_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        v_phase_acc_V_2_fu_262 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        addconv_reg_3445 <= addconv_fu_1331_p2;
        col_ratio_V_reg_3413 <= col_ratio_V_fu_1223_p1;
        cols_cast_reg_3434 <= cols_cast_fu_1322_p1;
        h_phase_acc_V_4_reg_3423 <= h_phase_acc_V_4_fu_1311_p3;
        icmp1_reg_3460 <= icmp1_fu_1367_p2;
        icmp_reg_3450 <= icmp_fu_1347_p2;
        row_rate_reg_3418 <= row_rate_fu_1265_p3;
        row_ratio_V_reg_3408 <= row_ratio_V_fu_1219_p1;
        rows_cast_cast_reg_3429 <= rows_cast_cast_fu_1319_p1;
        tmp_10_reg_3440 <= tmp_10_fu_1325_p2;
        tmp_18_cast_reg_3455 <= tmp_18_cast_fu_1353_p1;
        tmp_20_cast_reg_3465 <= tmp_20_cast_fu_1373_p1;
        tmp_21_cast_cast_reg_3470 <= tmp_21_cast_cast_fu_1382_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        ap_phi_reg_pp0_iter10_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter9_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter10_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter9_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter10_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter9_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        ap_phi_reg_pp0_iter11_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter10_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter11_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter10_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter11_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter10_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        ap_phi_reg_pp0_iter12_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter11_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter12_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter11_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter12_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter11_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        ap_phi_reg_pp0_iter13_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter12_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter13_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter12_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter13_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter12_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        ap_phi_reg_pp0_iter14_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter13_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter14_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter13_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter14_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter13_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        ap_phi_reg_pp0_iter15_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter14_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter15_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter14_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter15_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter14_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        ap_phi_reg_pp0_iter16_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter15_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter16_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter15_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter16_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter15_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        ap_phi_reg_pp0_iter17_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter16_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter17_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter16_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter17_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter16_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        ap_phi_reg_pp0_iter18_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter17_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter18_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter17_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter18_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter17_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        ap_phi_reg_pp0_iter19_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter18_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter19_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter18_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter19_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter18_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter0_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter1_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter0_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter1_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter0_row_wr_en_3_reg_883;
        col_reg_3561 <= col_fu_1501_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        ap_phi_reg_pp0_iter20_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter19_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter20_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter19_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter20_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter19_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter20 == 1'b1))) begin
        ap_phi_reg_pp0_iter21_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter20_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter21_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter20_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter21_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter20_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        ap_phi_reg_pp0_iter22_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter21_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter22_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter21_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter22_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter21_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter22 == 1'b1))) begin
        ap_phi_reg_pp0_iter23_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter22_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter23_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter22_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter23_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter22_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter23 == 1'b1))) begin
        ap_phi_reg_pp0_iter24_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter23_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter24_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter23_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter24_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter23_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        ap_phi_reg_pp0_iter25_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter24_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter25_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter24_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter25_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter24_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter25 == 1'b1))) begin
        ap_phi_reg_pp0_iter26_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter25_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter26_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter25_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter26_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter25_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter26 == 1'b1))) begin
        ap_phi_reg_pp0_iter27_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter26_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter27_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter26_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter27_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter26_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        ap_phi_reg_pp0_iter28_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter27_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter28_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter27_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter28_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter27_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        ap_phi_reg_pp0_iter29_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter28_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter29_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter28_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter29_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter28_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter1_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter2_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter1_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter2_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter1_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        ap_phi_reg_pp0_iter30_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter29_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter30_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter29_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter30_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter29_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        ap_phi_reg_pp0_iter31_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter30_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter31_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter30_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter31_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter30_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        ap_phi_reg_pp0_iter32_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter31_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter32_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter31_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter32_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter31_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        ap_phi_reg_pp0_iter33_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter32_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter33_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter32_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter33_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter32_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        ap_phi_reg_pp0_iter34_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter33_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter34_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter33_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter34_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter33_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter2_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter3_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter2_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter3_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter2_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_reg_pp0_iter4_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter3_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter4_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter3_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter4_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter3_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_reg_pp0_iter5_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter4_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter5_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter4_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter5_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter4_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_phi_reg_pp0_iter6_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter5_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter6_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter5_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter6_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter5_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ap_phi_reg_pp0_iter7_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter6_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter7_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter6_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter7_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter6_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        ap_phi_reg_pp0_iter8_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter7_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter8_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter7_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter8_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter7_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        ap_phi_reg_pp0_iter9_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter8_col_rd_en_1_reg_894;
        ap_phi_reg_pp0_iter9_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter8_col_wr_en_1_reg_906;
        ap_phi_reg_pp0_iter9_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter8_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_phi_mux_col_wr_en_1_phi_fu_910_p4 == 1'd1) & (tmp_20_reg_3557_pp0_iter34_reg == 1'd1))) begin
        brmerge2_reg_3611 <= brmerge2_fu_1784_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        brmerge2_reg_3611_pp0_iter36_reg <= brmerge2_reg_3611;
        brmerge2_reg_3611_pp0_iter37_reg <= brmerge2_reg_3611_pp0_iter36_reg;
        brmerge2_reg_3611_pp0_iter38_reg <= brmerge2_reg_3611_pp0_iter37_reg;
        brmerge4_reg_3640_pp0_iter37_reg <= brmerge4_reg_3640;
        brmerge4_reg_3640_pp0_iter38_reg <= brmerge4_reg_3640_pp0_iter37_reg;
        brmerge4_reg_3640_pp0_iter39_reg <= brmerge4_reg_3640_pp0_iter38_reg;
        brmerge4_reg_3640_pp0_iter40_reg <= brmerge4_reg_3640_pp0_iter39_reg;
        brmerge4_reg_3640_pp0_iter41_reg <= brmerge4_reg_3640_pp0_iter40_reg;
        col_wr_en_1_reg_906_pp0_iter36_reg <= col_wr_en_1_reg_906;
        col_wr_en_1_reg_906_pp0_iter37_reg <= col_wr_en_1_reg_906_pp0_iter36_reg;
        col_wr_en_1_reg_906_pp0_iter38_reg <= col_wr_en_1_reg_906_pp0_iter37_reg;
        i_op_assign_1_cast_reg_3546_pp0_iter10_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter9_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter11_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter10_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter12_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter11_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter13_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter12_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter14_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter13_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter15_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter14_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter16_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter15_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter17_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter16_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter18_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter17_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter19_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter18_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter20_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter19_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter21_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter20_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter22_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter21_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter23_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter22_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter24_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter23_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter25_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter24_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter26_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter25_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter27_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter26_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter28_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter27_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter29_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter28_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter2_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter1_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter30_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter29_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter31_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter30_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter32_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter31_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter33_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter32_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter34_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter33_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter3_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter2_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter4_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter3_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter5_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter4_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter6_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter5_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter7_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter6_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter8_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter7_reg[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter9_reg[12 : 0] <= i_op_assign_1_cast_reg_3546_pp0_iter8_reg[12 : 0];
        linebuf_val_val_0_0_s_reg_3719_pp0_iter39_reg <= linebuf_val_val_0_0_s_reg_3719;
        linebuf_val_val_0_1_s_reg_3725_pp0_iter39_reg <= linebuf_val_val_0_1_s_reg_3725;
        linebuf_val_val_0_2_s_reg_3731_pp0_iter39_reg <= linebuf_val_val_0_2_s_reg_3731;
        linebuf_val_val_1_0_s_reg_3737_pp0_iter39_reg <= linebuf_val_val_1_0_s_reg_3737;
        linebuf_val_val_1_1_s_reg_3743_pp0_iter39_reg <= linebuf_val_val_1_1_s_reg_3743;
        linebuf_val_val_1_2_s_reg_3749_pp0_iter39_reg <= linebuf_val_val_1_2_s_reg_3749;
        linebuf_val_val_2_0_s_reg_3755_pp0_iter39_reg <= linebuf_val_val_2_0_s_reg_3755;
        linebuf_val_val_2_1_s_reg_3761_pp0_iter39_reg <= linebuf_val_val_2_1_s_reg_3761;
        linebuf_val_val_2_2_s_reg_3767_pp0_iter39_reg <= linebuf_val_val_2_2_s_reg_3767;
        linebuf_val_val_3_0_s_reg_3773_pp0_iter39_reg <= linebuf_val_val_3_0_s_reg_3773;
        linebuf_val_val_3_1_s_reg_3779_pp0_iter39_reg <= linebuf_val_val_3_1_s_reg_3779;
        linebuf_val_val_3_2_s_reg_3785_pp0_iter39_reg <= linebuf_val_val_3_2_s_reg_3785;
        p_Val2_10_reg_840_pp0_iter10_reg <= p_Val2_10_reg_840_pp0_iter9_reg;
        p_Val2_10_reg_840_pp0_iter11_reg <= p_Val2_10_reg_840_pp0_iter10_reg;
        p_Val2_10_reg_840_pp0_iter12_reg <= p_Val2_10_reg_840_pp0_iter11_reg;
        p_Val2_10_reg_840_pp0_iter13_reg <= p_Val2_10_reg_840_pp0_iter12_reg;
        p_Val2_10_reg_840_pp0_iter14_reg <= p_Val2_10_reg_840_pp0_iter13_reg;
        p_Val2_10_reg_840_pp0_iter15_reg <= p_Val2_10_reg_840_pp0_iter14_reg;
        p_Val2_10_reg_840_pp0_iter16_reg <= p_Val2_10_reg_840_pp0_iter15_reg;
        p_Val2_10_reg_840_pp0_iter17_reg <= p_Val2_10_reg_840_pp0_iter16_reg;
        p_Val2_10_reg_840_pp0_iter18_reg <= p_Val2_10_reg_840_pp0_iter17_reg;
        p_Val2_10_reg_840_pp0_iter19_reg <= p_Val2_10_reg_840_pp0_iter18_reg;
        p_Val2_10_reg_840_pp0_iter20_reg <= p_Val2_10_reg_840_pp0_iter19_reg;
        p_Val2_10_reg_840_pp0_iter21_reg <= p_Val2_10_reg_840_pp0_iter20_reg;
        p_Val2_10_reg_840_pp0_iter22_reg <= p_Val2_10_reg_840_pp0_iter21_reg;
        p_Val2_10_reg_840_pp0_iter23_reg <= p_Val2_10_reg_840_pp0_iter22_reg;
        p_Val2_10_reg_840_pp0_iter24_reg <= p_Val2_10_reg_840_pp0_iter23_reg;
        p_Val2_10_reg_840_pp0_iter25_reg <= p_Val2_10_reg_840_pp0_iter24_reg;
        p_Val2_10_reg_840_pp0_iter26_reg <= p_Val2_10_reg_840_pp0_iter25_reg;
        p_Val2_10_reg_840_pp0_iter27_reg <= p_Val2_10_reg_840_pp0_iter26_reg;
        p_Val2_10_reg_840_pp0_iter28_reg <= p_Val2_10_reg_840_pp0_iter27_reg;
        p_Val2_10_reg_840_pp0_iter29_reg <= p_Val2_10_reg_840_pp0_iter28_reg;
        p_Val2_10_reg_840_pp0_iter2_reg <= p_Val2_10_reg_840_pp0_iter1_reg;
        p_Val2_10_reg_840_pp0_iter30_reg <= p_Val2_10_reg_840_pp0_iter29_reg;
        p_Val2_10_reg_840_pp0_iter31_reg <= p_Val2_10_reg_840_pp0_iter30_reg;
        p_Val2_10_reg_840_pp0_iter32_reg <= p_Val2_10_reg_840_pp0_iter31_reg;
        p_Val2_10_reg_840_pp0_iter33_reg <= p_Val2_10_reg_840_pp0_iter32_reg;
        p_Val2_10_reg_840_pp0_iter34_reg <= p_Val2_10_reg_840_pp0_iter33_reg;
        p_Val2_10_reg_840_pp0_iter35_reg <= p_Val2_10_reg_840_pp0_iter34_reg;
        p_Val2_10_reg_840_pp0_iter36_reg <= p_Val2_10_reg_840_pp0_iter35_reg;
        p_Val2_10_reg_840_pp0_iter37_reg <= p_Val2_10_reg_840_pp0_iter36_reg;
        p_Val2_10_reg_840_pp0_iter3_reg <= p_Val2_10_reg_840_pp0_iter2_reg;
        p_Val2_10_reg_840_pp0_iter4_reg <= p_Val2_10_reg_840_pp0_iter3_reg;
        p_Val2_10_reg_840_pp0_iter5_reg <= p_Val2_10_reg_840_pp0_iter4_reg;
        p_Val2_10_reg_840_pp0_iter6_reg <= p_Val2_10_reg_840_pp0_iter5_reg;
        p_Val2_10_reg_840_pp0_iter7_reg <= p_Val2_10_reg_840_pp0_iter6_reg;
        p_Val2_10_reg_840_pp0_iter8_reg <= p_Val2_10_reg_840_pp0_iter7_reg;
        p_Val2_10_reg_840_pp0_iter9_reg <= p_Val2_10_reg_840_pp0_iter8_reg;
        row_rd_en_3_reg_872_pp0_iter35_reg <= row_rd_en_3_reg_872;
        row_rd_en_3_reg_872_pp0_iter36_reg <= row_rd_en_3_reg_872_pp0_iter35_reg;
        tmp_19_reg_3552_pp0_iter10_reg <= tmp_19_reg_3552_pp0_iter9_reg;
        tmp_19_reg_3552_pp0_iter11_reg <= tmp_19_reg_3552_pp0_iter10_reg;
        tmp_19_reg_3552_pp0_iter12_reg <= tmp_19_reg_3552_pp0_iter11_reg;
        tmp_19_reg_3552_pp0_iter13_reg <= tmp_19_reg_3552_pp0_iter12_reg;
        tmp_19_reg_3552_pp0_iter14_reg <= tmp_19_reg_3552_pp0_iter13_reg;
        tmp_19_reg_3552_pp0_iter15_reg <= tmp_19_reg_3552_pp0_iter14_reg;
        tmp_19_reg_3552_pp0_iter16_reg <= tmp_19_reg_3552_pp0_iter15_reg;
        tmp_19_reg_3552_pp0_iter17_reg <= tmp_19_reg_3552_pp0_iter16_reg;
        tmp_19_reg_3552_pp0_iter18_reg <= tmp_19_reg_3552_pp0_iter17_reg;
        tmp_19_reg_3552_pp0_iter19_reg <= tmp_19_reg_3552_pp0_iter18_reg;
        tmp_19_reg_3552_pp0_iter20_reg <= tmp_19_reg_3552_pp0_iter19_reg;
        tmp_19_reg_3552_pp0_iter21_reg <= tmp_19_reg_3552_pp0_iter20_reg;
        tmp_19_reg_3552_pp0_iter22_reg <= tmp_19_reg_3552_pp0_iter21_reg;
        tmp_19_reg_3552_pp0_iter23_reg <= tmp_19_reg_3552_pp0_iter22_reg;
        tmp_19_reg_3552_pp0_iter24_reg <= tmp_19_reg_3552_pp0_iter23_reg;
        tmp_19_reg_3552_pp0_iter25_reg <= tmp_19_reg_3552_pp0_iter24_reg;
        tmp_19_reg_3552_pp0_iter26_reg <= tmp_19_reg_3552_pp0_iter25_reg;
        tmp_19_reg_3552_pp0_iter27_reg <= tmp_19_reg_3552_pp0_iter26_reg;
        tmp_19_reg_3552_pp0_iter28_reg <= tmp_19_reg_3552_pp0_iter27_reg;
        tmp_19_reg_3552_pp0_iter29_reg <= tmp_19_reg_3552_pp0_iter28_reg;
        tmp_19_reg_3552_pp0_iter2_reg <= tmp_19_reg_3552_pp0_iter1_reg;
        tmp_19_reg_3552_pp0_iter30_reg <= tmp_19_reg_3552_pp0_iter29_reg;
        tmp_19_reg_3552_pp0_iter31_reg <= tmp_19_reg_3552_pp0_iter30_reg;
        tmp_19_reg_3552_pp0_iter32_reg <= tmp_19_reg_3552_pp0_iter31_reg;
        tmp_19_reg_3552_pp0_iter33_reg <= tmp_19_reg_3552_pp0_iter32_reg;
        tmp_19_reg_3552_pp0_iter34_reg <= tmp_19_reg_3552_pp0_iter33_reg;
        tmp_19_reg_3552_pp0_iter35_reg <= tmp_19_reg_3552_pp0_iter34_reg;
        tmp_19_reg_3552_pp0_iter36_reg <= tmp_19_reg_3552_pp0_iter35_reg;
        tmp_19_reg_3552_pp0_iter3_reg <= tmp_19_reg_3552_pp0_iter2_reg;
        tmp_19_reg_3552_pp0_iter4_reg <= tmp_19_reg_3552_pp0_iter3_reg;
        tmp_19_reg_3552_pp0_iter5_reg <= tmp_19_reg_3552_pp0_iter4_reg;
        tmp_19_reg_3552_pp0_iter6_reg <= tmp_19_reg_3552_pp0_iter5_reg;
        tmp_19_reg_3552_pp0_iter7_reg <= tmp_19_reg_3552_pp0_iter6_reg;
        tmp_19_reg_3552_pp0_iter8_reg <= tmp_19_reg_3552_pp0_iter7_reg;
        tmp_19_reg_3552_pp0_iter9_reg <= tmp_19_reg_3552_pp0_iter8_reg;
        tmp_20_reg_3557_pp0_iter10_reg <= tmp_20_reg_3557_pp0_iter9_reg;
        tmp_20_reg_3557_pp0_iter11_reg <= tmp_20_reg_3557_pp0_iter10_reg;
        tmp_20_reg_3557_pp0_iter12_reg <= tmp_20_reg_3557_pp0_iter11_reg;
        tmp_20_reg_3557_pp0_iter13_reg <= tmp_20_reg_3557_pp0_iter12_reg;
        tmp_20_reg_3557_pp0_iter14_reg <= tmp_20_reg_3557_pp0_iter13_reg;
        tmp_20_reg_3557_pp0_iter15_reg <= tmp_20_reg_3557_pp0_iter14_reg;
        tmp_20_reg_3557_pp0_iter16_reg <= tmp_20_reg_3557_pp0_iter15_reg;
        tmp_20_reg_3557_pp0_iter17_reg <= tmp_20_reg_3557_pp0_iter16_reg;
        tmp_20_reg_3557_pp0_iter18_reg <= tmp_20_reg_3557_pp0_iter17_reg;
        tmp_20_reg_3557_pp0_iter19_reg <= tmp_20_reg_3557_pp0_iter18_reg;
        tmp_20_reg_3557_pp0_iter20_reg <= tmp_20_reg_3557_pp0_iter19_reg;
        tmp_20_reg_3557_pp0_iter21_reg <= tmp_20_reg_3557_pp0_iter20_reg;
        tmp_20_reg_3557_pp0_iter22_reg <= tmp_20_reg_3557_pp0_iter21_reg;
        tmp_20_reg_3557_pp0_iter23_reg <= tmp_20_reg_3557_pp0_iter22_reg;
        tmp_20_reg_3557_pp0_iter24_reg <= tmp_20_reg_3557_pp0_iter23_reg;
        tmp_20_reg_3557_pp0_iter25_reg <= tmp_20_reg_3557_pp0_iter24_reg;
        tmp_20_reg_3557_pp0_iter26_reg <= tmp_20_reg_3557_pp0_iter25_reg;
        tmp_20_reg_3557_pp0_iter27_reg <= tmp_20_reg_3557_pp0_iter26_reg;
        tmp_20_reg_3557_pp0_iter28_reg <= tmp_20_reg_3557_pp0_iter27_reg;
        tmp_20_reg_3557_pp0_iter29_reg <= tmp_20_reg_3557_pp0_iter28_reg;
        tmp_20_reg_3557_pp0_iter2_reg <= tmp_20_reg_3557_pp0_iter1_reg;
        tmp_20_reg_3557_pp0_iter30_reg <= tmp_20_reg_3557_pp0_iter29_reg;
        tmp_20_reg_3557_pp0_iter31_reg <= tmp_20_reg_3557_pp0_iter30_reg;
        tmp_20_reg_3557_pp0_iter32_reg <= tmp_20_reg_3557_pp0_iter31_reg;
        tmp_20_reg_3557_pp0_iter33_reg <= tmp_20_reg_3557_pp0_iter32_reg;
        tmp_20_reg_3557_pp0_iter34_reg <= tmp_20_reg_3557_pp0_iter33_reg;
        tmp_20_reg_3557_pp0_iter35_reg <= tmp_20_reg_3557_pp0_iter34_reg;
        tmp_20_reg_3557_pp0_iter36_reg <= tmp_20_reg_3557_pp0_iter35_reg;
        tmp_20_reg_3557_pp0_iter37_reg <= tmp_20_reg_3557_pp0_iter36_reg;
        tmp_20_reg_3557_pp0_iter38_reg <= tmp_20_reg_3557_pp0_iter37_reg;
        tmp_20_reg_3557_pp0_iter3_reg <= tmp_20_reg_3557_pp0_iter2_reg;
        tmp_20_reg_3557_pp0_iter4_reg <= tmp_20_reg_3557_pp0_iter3_reg;
        tmp_20_reg_3557_pp0_iter5_reg <= tmp_20_reg_3557_pp0_iter4_reg;
        tmp_20_reg_3557_pp0_iter6_reg <= tmp_20_reg_3557_pp0_iter5_reg;
        tmp_20_reg_3557_pp0_iter7_reg <= tmp_20_reg_3557_pp0_iter6_reg;
        tmp_20_reg_3557_pp0_iter8_reg <= tmp_20_reg_3557_pp0_iter7_reg;
        tmp_20_reg_3557_pp0_iter9_reg <= tmp_20_reg_3557_pp0_iter8_reg;
        tmp_22_reg_3566_pp0_iter10_reg <= tmp_22_reg_3566_pp0_iter9_reg;
        tmp_22_reg_3566_pp0_iter11_reg <= tmp_22_reg_3566_pp0_iter10_reg;
        tmp_22_reg_3566_pp0_iter12_reg <= tmp_22_reg_3566_pp0_iter11_reg;
        tmp_22_reg_3566_pp0_iter13_reg <= tmp_22_reg_3566_pp0_iter12_reg;
        tmp_22_reg_3566_pp0_iter14_reg <= tmp_22_reg_3566_pp0_iter13_reg;
        tmp_22_reg_3566_pp0_iter15_reg <= tmp_22_reg_3566_pp0_iter14_reg;
        tmp_22_reg_3566_pp0_iter16_reg <= tmp_22_reg_3566_pp0_iter15_reg;
        tmp_22_reg_3566_pp0_iter17_reg <= tmp_22_reg_3566_pp0_iter16_reg;
        tmp_22_reg_3566_pp0_iter18_reg <= tmp_22_reg_3566_pp0_iter17_reg;
        tmp_22_reg_3566_pp0_iter19_reg <= tmp_22_reg_3566_pp0_iter18_reg;
        tmp_22_reg_3566_pp0_iter20_reg <= tmp_22_reg_3566_pp0_iter19_reg;
        tmp_22_reg_3566_pp0_iter21_reg <= tmp_22_reg_3566_pp0_iter20_reg;
        tmp_22_reg_3566_pp0_iter22_reg <= tmp_22_reg_3566_pp0_iter21_reg;
        tmp_22_reg_3566_pp0_iter23_reg <= tmp_22_reg_3566_pp0_iter22_reg;
        tmp_22_reg_3566_pp0_iter24_reg <= tmp_22_reg_3566_pp0_iter23_reg;
        tmp_22_reg_3566_pp0_iter25_reg <= tmp_22_reg_3566_pp0_iter24_reg;
        tmp_22_reg_3566_pp0_iter26_reg <= tmp_22_reg_3566_pp0_iter25_reg;
        tmp_22_reg_3566_pp0_iter27_reg <= tmp_22_reg_3566_pp0_iter26_reg;
        tmp_22_reg_3566_pp0_iter28_reg <= tmp_22_reg_3566_pp0_iter27_reg;
        tmp_22_reg_3566_pp0_iter29_reg <= tmp_22_reg_3566_pp0_iter28_reg;
        tmp_22_reg_3566_pp0_iter2_reg <= tmp_22_reg_3566_pp0_iter1_reg;
        tmp_22_reg_3566_pp0_iter30_reg <= tmp_22_reg_3566_pp0_iter29_reg;
        tmp_22_reg_3566_pp0_iter31_reg <= tmp_22_reg_3566_pp0_iter30_reg;
        tmp_22_reg_3566_pp0_iter32_reg <= tmp_22_reg_3566_pp0_iter31_reg;
        tmp_22_reg_3566_pp0_iter33_reg <= tmp_22_reg_3566_pp0_iter32_reg;
        tmp_22_reg_3566_pp0_iter34_reg <= tmp_22_reg_3566_pp0_iter33_reg;
        tmp_22_reg_3566_pp0_iter35_reg <= tmp_22_reg_3566_pp0_iter34_reg;
        tmp_22_reg_3566_pp0_iter36_reg <= tmp_22_reg_3566_pp0_iter35_reg;
        tmp_22_reg_3566_pp0_iter3_reg <= tmp_22_reg_3566_pp0_iter2_reg;
        tmp_22_reg_3566_pp0_iter4_reg <= tmp_22_reg_3566_pp0_iter3_reg;
        tmp_22_reg_3566_pp0_iter5_reg <= tmp_22_reg_3566_pp0_iter4_reg;
        tmp_22_reg_3566_pp0_iter6_reg <= tmp_22_reg_3566_pp0_iter5_reg;
        tmp_22_reg_3566_pp0_iter7_reg <= tmp_22_reg_3566_pp0_iter6_reg;
        tmp_22_reg_3566_pp0_iter8_reg <= tmp_22_reg_3566_pp0_iter7_reg;
        tmp_22_reg_3566_pp0_iter9_reg <= tmp_22_reg_3566_pp0_iter8_reg;
        vcoeffs_0_load_reg_3841_pp0_iter40_reg <= vcoeffs_0_load_reg_3841;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_20_reg_3557_pp0_iter35_reg == 1'd1))) begin
        brmerge4_reg_3640 <= brmerge4_fu_2006_p2;
        tmp_37_reg_3615 <= tmp_37_fu_1841_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter35_col_rd_en_1_reg_894;
        col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter35_col_wr_en_1_reg_906;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_reg_3403 <= cols_fu_1196_p3;
        rows_reg_3397 <= rows_fu_1182_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (brmerge2_reg_3611_pp0_iter36_reg == 1'd1) & (tmp_20_reg_3557_pp0_iter36_reg == 1'd1) & (col_wr_en_1_reg_906_pp0_iter36_reg == 1'd1))) begin
        h_fir_1_val_1_reg_3649 <= h_fir_1_val_1_fu_2189_p6;
        h_fir_1_val_2_reg_3654 <= h_fir_1_val_2_fu_2203_p6;
        h_fir_2_val_1_reg_3664 <= h_fir_2_val_1_fu_2245_p6;
        h_fir_2_val_2_reg_3669 <= h_fir_2_val_2_fu_2259_p6;
        h_fir_3_val_1_reg_3679 <= h_fir_3_val_1_fu_2311_p6;
        h_fir_3_val_2_reg_3684 <= h_fir_3_val_2_fu_2325_p6;
        hcoeffs_0_load_reg_3704 <= hcoeffs_0_q0;
        hcoeffs_1_load_reg_3699 <= hcoeffs_1_q0;
        hcoeffs_2_load_reg_3694 <= hcoeffs_2_q0;
        tmp_45_reg_3644 <= tmp_45_fu_2175_p6;
        tmp_47_reg_3659 <= tmp_47_fu_2231_p6;
        tmp_50_reg_3674 <= tmp_50_fu_2297_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1) & (tmp_20_reg_3557_pp0_iter35_reg == 1'd1))) begin
        h_phase_acc_V_2_fu_258 <= h_phase_acc_V_1_fu_1863_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1) & (row_rd_en_load_1_reg_3599 == 1'd0) & (col_rd_en_1_reg_894 == 1'd1) & (tmp_20_reg_3557_pp0_iter35_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1) & (or_cond3_reg_3603 == 1'd0) & (or_cond4_reg_3607 == 1'd1) & (row_rd_en_load_1_reg_3599 == 1'd1) & (col_rd_en_1_reg_894 == 1'd1) & (tmp_20_reg_3557_pp0_iter35_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1) & (or_cond4_reg_3607 == 1'd0) & (or_cond3_reg_3603 == 1'd0) & (row_rd_en_load_1_reg_3599 == 1'd1) & (col_rd_en_1_reg_894 == 1'd1) & (tmp_20_reg_3557_pp0_iter35_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1) & (or_cond3_reg_3603 == 1'd1) & (row_rd_en_load_1_reg_3599 == 1'd1) & (col_rd_en_1_reg_894 == 1'd1) & (tmp_20_reg_3557_pp0_iter35_reg == 1'd1)))) begin
        h_shreg_val_0_val_0_1_fu_330 <= h_shreg_val_0_val_0_4_fu_342;
        h_shreg_val_0_val_0_2_fu_334 <= h_shreg_val_0_val_0_5_fu_346;
        h_shreg_val_0_val_0_3_fu_338 <= h_shreg_val_0_val_1_fu_350;
        h_shreg_val_0_val_0_4_fu_342 <= h_shreg_val_0_val_1_1_fu_354;
        h_shreg_val_0_val_0_5_fu_346 <= h_shreg_val_0_val_1_2_fu_358;
        h_shreg_val_0_val_0_fu_326 <= h_shreg_val_0_val_0_3_fu_338;
        h_shreg_val_0_val_1_1_fu_354 <= h_shreg_val_0_val_2_1_fu_366;
        h_shreg_val_0_val_1_2_fu_358 <= h_shreg_val_0_val_2_2_fu_370;
        h_shreg_val_0_val_1_fu_350 <= h_shreg_val_0_val_2_fu_362;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1) & (or_cond3_reg_3603 == 1'd1) & (row_rd_en_load_1_reg_3599 == 1'd1) & (col_rd_en_1_reg_894 == 1'd1) & (tmp_20_reg_3557_pp0_iter35_reg == 1'd1))) begin
        h_shreg_val_0_val_3_1_fu_270 <= p_src_data_stream_1_V_dout;
        h_shreg_val_0_val_3_2_fu_274 <= p_src_data_stream_2_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_op_assign_1_cast_reg_3546[12 : 0] <= i_op_assign_1_cast_fu_1488_p1[12 : 0];
        i_op_assign_1_cast_reg_3546_pp0_iter1_reg[12 : 0] <= i_op_assign_1_cast_reg_3546[12 : 0];
        p_Val2_10_reg_840_pp0_iter1_reg <= p_Val2_10_reg_840;
        tmp_19_reg_3552 <= tmp_19_fu_1492_p1;
        tmp_19_reg_3552_pp0_iter1_reg <= tmp_19_reg_3552;
        tmp_20_reg_3557 <= tmp_20_fu_1496_p2;
        tmp_20_reg_3557_pp0_iter1_reg <= tmp_20_reg_3557;
        tmp_22_reg_3566_pp0_iter1_reg <= tmp_22_reg_3566;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_20_reg_3557_pp0_iter37_reg == 1'd1))) begin
        linebuf_val_val_0_0_s_reg_3719 <= tmp_40_fu_2355_p1;
        linebuf_val_val_0_1_s_reg_3725 <= tmp_40_fu_2355_p1;
        linebuf_val_val_0_2_s_reg_3731 <= tmp_40_fu_2355_p1;
        linebuf_val_val_1_0_s_reg_3737 <= tmp_40_fu_2355_p1;
        linebuf_val_val_1_1_s_reg_3743 <= tmp_40_fu_2355_p1;
        linebuf_val_val_1_2_s_reg_3749 <= tmp_40_fu_2355_p1;
        linebuf_val_val_2_0_s_reg_3755 <= tmp_40_fu_2355_p1;
        linebuf_val_val_2_1_s_reg_3761 <= tmp_40_fu_2355_p1;
        linebuf_val_val_2_2_s_reg_3767 <= tmp_40_fu_2355_p1;
        linebuf_val_val_3_0_s_reg_3773 <= tmp_40_fu_2355_p1;
        linebuf_val_val_3_1_s_reg_3779 <= tmp_40_fu_2355_p1;
        linebuf_val_val_3_2_s_reg_3785 <= tmp_40_fu_2355_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) & (tmp_13_fu_1390_p2 == 1'd1))) begin
        notlhs_reg_3526 <= notlhs_fu_1457_p2;
        p_Result_3_reg_3490 <= r_V_3_fu_1405_p2[32'd44];
        r_V_3_reg_3484 <= r_V_3_fu_1405_p2;
        t_V_2_cast_reg_3495[28 : 16] <= t_V_2_cast_fu_1426_p1[28 : 16];
        tmp12_reg_3541 <= tmp12_fu_1482_p2;
        tmp_118_0_t_reg_3531 <= tmp_118_0_t_fu_1474_p3;
        tmp_16_reg_3500 <= tmp_16_fu_1430_p2;
        tmp_18_reg_3510 <= tmp_18_fu_1451_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_phi_mux_col_rd_en_1_phi_fu_898_p4 == 1'd1) & (row_rd_en_load_1_load_fu_1754_p1 == 1'd1) & (tmp_20_reg_3557_pp0_iter34_reg == 1'd1))) begin
        or_cond3_reg_3603 <= or_cond3_fu_1761_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond3_fu_1761_p2 == 1'd0) & (ap_phi_mux_col_rd_en_1_phi_fu_898_p4 == 1'd1) & (row_rd_en_load_1_load_fu_1754_p1 == 1'd1) & (tmp_20_reg_3557_pp0_iter34_reg == 1'd1))) begin
        or_cond4_reg_3607 <= or_cond4_fu_1776_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (brmerge4_reg_3640_pp0_iter40_reg == 1'd0))) begin
        pix_out_val_0_1_reg_3876 <= pix_out_val_0_1_sr_cast_fu_1065_ap_return;
        pix_out_val_1_1_reg_3881 <= pix_out_val_1_1_sr_cast_fu_1070_ap_return;
        tmp_64_reg_3886 <= tmp_64_sr_cast_fu_1075_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1) & (tmp_22_reg_3566_pp0_iter33_reg == 1'd1) & (tmp_20_reg_3557_pp0_iter33_reg == 1'd1))) begin
        row_rd_en_fu_242 <= ap_phi_mux_row_rd_en_3_phi_fu_875_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_phi_mux_col_rd_en_1_phi_fu_898_p4 == 1'd1) & (tmp_20_reg_3557_pp0_iter34_reg == 1'd1))) begin
        row_rd_en_load_1_reg_3599 <= row_rd_en_fu_242;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        row_reg_3479 <= row_fu_1395_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter35 == 1'b1) & (tmp_22_reg_3566_pp0_iter34_reg == 1'd1) & (tmp_20_reg_3557_pp0_iter34_reg == 1'd1))) begin
        row_wr_en_fu_238 <= ap_phi_reg_pp0_iter35_row_wr_en_3_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1) & (brmerge2_reg_3611_pp0_iter37_reg == 1'd1) & (tmp_20_reg_3557_pp0_iter37_reg == 1'd1) & (col_wr_en_1_reg_906_pp0_iter37_reg == 1'd1))) begin
        t_V_5_0_3_reg_3791 <= grp_fu_2918_p3;
        t_V_5_1_3_reg_3796 <= grp_fu_2943_p3;
        t_V_5_2_3_reg_3801 <= grp_fu_2968_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1) & (brmerge2_reg_3611_pp0_iter36_reg == 1'd1) & (tmp_20_reg_3557_pp0_iter36_reg == 1'd1) & (col_wr_en_1_reg_906_pp0_iter36_reg == 1'd1))) begin
        t_V_5_1_reg_3709 <= grp_fu_2885_p3;
        t_V_5_2_reg_3714 <= grp_fu_2893_p3;
        t_V_5_reg_3689 <= grp_fu_2877_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1) & (brmerge4_reg_3640_pp0_iter39_reg == 1'd0))) begin
        t_V_7_0_2_reg_3861 <= grp_fu_2994_p3;
        t_V_7_1_2_reg_3866 <= grp_fu_3020_p3;
        t_V_7_2_2_reg_3871 <= grp_fu_3046_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (brmerge4_reg_3640_pp0_iter39_reg == 1'd0))) begin
        temp_out_0_val_0_1_1_reg_3856 <= temp_out_0_val_0_1_fu_286;
        temp_out_0_val_1_1_1_reg_3851 <= temp_out_0_val_1_1_fu_282;
        v_fir_3_val_2_load_reg_3846 <= v_fir_3_val_2_fu_278;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter39 == 1'b1) & (col_wr_en_1_reg_906_pp0_iter38_reg == 1'd1))) begin
        temp_out_0_val_0_1_fu_286 <= ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4;
        temp_out_0_val_0_2_fu_374 <= ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4;
        temp_out_0_val_1_1_fu_282 <= ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4;
        temp_out_0_val_1_2_fu_378 <= ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4;
        temp_out_1_val_0_fu_386 <= ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4;
        temp_out_1_val_1_fu_390 <= ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4;
        temp_out_1_val_2_fu_394 <= ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4;
        temp_out_2_val_0_fu_398 <= ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4;
        temp_out_2_val_1_fu_402 <= ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4;
        temp_out_2_val_2_fu_406 <= ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4;
        temp_out_3_val_0_fu_410 <= ap_phi_mux_temp_out_3_val_0_s_phi_fu_943_p4;
        temp_out_3_val_1_fu_414 <= ap_phi_mux_temp_out_3_val_1_s_phi_fu_932_p4;
        temp_out_3_val_2_fu_418 <= ap_phi_mux_temp_out_3_val_2_s_phi_fu_921_p4;
        v_fir_0_val_0_1_fu_310 <= v_fir_0_val_0_fu_2436_p6;
        v_fir_0_val_1_1_fu_314 <= v_fir_0_val_1_fu_2449_p6;
        v_fir_0_val_2_1_fu_318 <= v_fir_0_val_2_fu_2462_p6;
        v_fir_1_val_0_1_fu_322 <= v_fir_1_val_0_fu_2475_p3;
        v_fir_1_val_1_1_fu_306 <= v_fir_1_val_1_fu_2482_p3;
        v_fir_1_val_2_1_fu_302 <= v_fir_1_val_2_fu_2489_p3;
        v_fir_2_val_0_1_fu_298 <= v_fir_2_val_0_fu_2496_p3;
        v_fir_2_val_1_1_fu_294 <= v_fir_2_val_1_fu_2503_p3;
        v_fir_2_val_2_1_fu_290 <= v_fir_2_val_2_fu_2510_p3;
        v_fir_3_val_2_1_fu_382 <= ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4;
        v_fir_3_val_2_fu_278 <= ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_20_fu_1496_p2 == 1'd1))) begin
        tmp_22_reg_3566 <= tmp_22_fu_1507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1) & (tmp_22_reg_3566_pp0_iter36_reg == 1'd1))) begin
        v_phase_V_1_fu_254 <= {{v_phase_acc_V_2_fu_262[15:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (brmerge4_reg_3640_pp0_iter38_reg == 1'd0))) begin
        vcoeffs_0_load_reg_3841 <= vcoeffs_0_q0;
        vcoeffs_1_load_reg_3836 <= vcoeffs_1_q0;
        vcoeffs_2_load_reg_3831 <= vcoeffs_2_q0;
        vcoeffs_3_load_reg_3826 <= vcoeffs_3_q0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        ap_condition_pp0_exit_iter36_state87 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter36_state87 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state50) & (tmp_13_fu_1390_p2 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_20_reg_3557 == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_Val2_10_phi_fu_844_p4 = col_reg_3561;
    end else begin
        ap_phi_mux_p_Val2_10_phi_fu_844_p4 = p_Val2_10_reg_840;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1347)) begin
        if ((icmp_reg_3450 == 1'd0)) begin
            ap_phi_mux_row_rd_en_3_phi_fu_875_p4 = not_s_fu_1542_p2;
        end else if ((icmp_reg_3450 == 1'd1)) begin
            ap_phi_mux_row_rd_en_3_phi_fu_875_p4 = 1'd1;
        end else begin
            ap_phi_mux_row_rd_en_3_phi_fu_875_p4 = ap_phi_reg_pp0_iter34_row_rd_en_3_reg_872;
        end
    end else begin
        ap_phi_mux_row_rd_en_3_phi_fu_875_p4 = ap_phi_reg_pp0_iter34_row_rd_en_3_reg_872;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1347)) begin
        if ((icmp_reg_3450 == 1'd0)) begin
            ap_phi_mux_rows_rw_4_phi_fu_866_p4 = rows_rw_1_fu_1537_p1;
        end else if ((icmp_reg_3450 == 1'd1)) begin
            ap_phi_mux_rows_rw_4_phi_fu_866_p4 = rows_rw_fu_1581_p3;
        end else begin
            ap_phi_mux_rows_rw_4_phi_fu_866_p4 = ap_phi_reg_pp0_iter34_rows_rw_4_reg_863;
        end
    end else begin
        ap_phi_mux_rows_rw_4_phi_fu_866_p4 = ap_phi_reg_pp0_iter34_rows_rw_4_reg_863;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3347)) begin
        if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd0)) begin
            ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4 = linebuf_val_val_0_0_q0;
        end else if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd1)) begin
            ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4 = pix_out_val_0_sr_cast_fu_1047_ap_return;
        end else begin
            ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4 = ap_phi_reg_pp0_iter39_temp_out_0_val_0_reg_1017;
        end
    end else begin
        ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4 = ap_phi_reg_pp0_iter39_temp_out_0_val_0_reg_1017;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3347)) begin
        if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd0)) begin
            ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4 = linebuf_val_val_0_1_q0;
        end else if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd1)) begin
            ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4 = pix_out_val_1_sr_cast_fu_1053_ap_return;
        end else begin
            ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4 = ap_phi_reg_pp0_iter39_temp_out_0_val_1_reg_1027;
        end
    end else begin
        ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4 = ap_phi_reg_pp0_iter39_temp_out_0_val_1_reg_1027;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3347)) begin
        if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd0)) begin
            ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4 = linebuf_val_val_0_2_q0;
        end else if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd1)) begin
            ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4 = temp_out_0_val_2_sr_cast_fu_1059_ap_return;
        end else begin
            ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4 = ap_phi_reg_pp0_iter39_temp_out_0_val_2_4_reg_1037;
        end
    end else begin
        ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4 = ap_phi_reg_pp0_iter39_temp_out_0_val_2_4_reg_1037;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3347)) begin
        if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd0)) begin
            ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4 = linebuf_val_val_1_0_q0;
        end else if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd1)) begin
            ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4 = linebuf_val_val_0_0_q0;
        end else begin
            ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4 = ap_phi_reg_pp0_iter39_temp_out_1_val_0_2_reg_1006;
        end
    end else begin
        ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4 = ap_phi_reg_pp0_iter39_temp_out_1_val_0_2_reg_1006;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3347)) begin
        if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd0)) begin
            ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4 = linebuf_val_val_1_1_q0;
        end else if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd1)) begin
            ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4 = linebuf_val_val_0_1_q0;
        end else begin
            ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4 = ap_phi_reg_pp0_iter39_temp_out_1_val_1_2_reg_995;
        end
    end else begin
        ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4 = ap_phi_reg_pp0_iter39_temp_out_1_val_1_2_reg_995;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3347)) begin
        if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd0)) begin
            ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4 = linebuf_val_val_1_2_q0;
        end else if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd1)) begin
            ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4 = linebuf_val_val_0_2_q0;
        end else begin
            ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4 = ap_phi_reg_pp0_iter39_temp_out_1_val_2_2_reg_984;
        end
    end else begin
        ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4 = ap_phi_reg_pp0_iter39_temp_out_1_val_2_2_reg_984;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3347)) begin
        if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd0)) begin
            ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4 = linebuf_val_val_2_0_q0;
        end else if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd1)) begin
            ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4 = linebuf_val_val_1_0_q0;
        end else begin
            ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4 = ap_phi_reg_pp0_iter39_temp_out_2_val_0_2_reg_973;
        end
    end else begin
        ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4 = ap_phi_reg_pp0_iter39_temp_out_2_val_0_2_reg_973;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3347)) begin
        if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd0)) begin
            ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4 = linebuf_val_val_2_1_q0;
        end else if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd1)) begin
            ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4 = linebuf_val_val_1_1_q0;
        end else begin
            ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4 = ap_phi_reg_pp0_iter39_temp_out_2_val_1_2_reg_962;
        end
    end else begin
        ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4 = ap_phi_reg_pp0_iter39_temp_out_2_val_1_2_reg_962;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3347)) begin
        if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd0)) begin
            ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4 = linebuf_val_val_2_2_q0;
        end else if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd1)) begin
            ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4 = linebuf_val_val_1_2_q0;
        end else begin
            ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4 = ap_phi_reg_pp0_iter39_temp_out_2_val_2_2_reg_951;
        end
    end else begin
        ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4 = ap_phi_reg_pp0_iter39_temp_out_2_val_2_2_reg_951;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3347)) begin
        if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd0)) begin
            ap_phi_mux_temp_out_3_val_0_s_phi_fu_943_p4 = linebuf_val_val_3_0_q0;
        end else if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd1)) begin
            ap_phi_mux_temp_out_3_val_0_s_phi_fu_943_p4 = linebuf_val_val_2_0_q0;
        end else begin
            ap_phi_mux_temp_out_3_val_0_s_phi_fu_943_p4 = ap_phi_reg_pp0_iter39_temp_out_3_val_0_s_reg_940;
        end
    end else begin
        ap_phi_mux_temp_out_3_val_0_s_phi_fu_943_p4 = ap_phi_reg_pp0_iter39_temp_out_3_val_0_s_reg_940;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3347)) begin
        if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd0)) begin
            ap_phi_mux_temp_out_3_val_1_s_phi_fu_932_p4 = linebuf_val_val_3_1_q0;
        end else if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd1)) begin
            ap_phi_mux_temp_out_3_val_1_s_phi_fu_932_p4 = linebuf_val_val_2_1_q0;
        end else begin
            ap_phi_mux_temp_out_3_val_1_s_phi_fu_932_p4 = ap_phi_reg_pp0_iter39_temp_out_3_val_1_s_reg_929;
        end
    end else begin
        ap_phi_mux_temp_out_3_val_1_s_phi_fu_932_p4 = ap_phi_reg_pp0_iter39_temp_out_3_val_1_s_reg_929;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3347)) begin
        if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd0)) begin
            ap_phi_mux_temp_out_3_val_2_s_phi_fu_921_p4 = linebuf_val_val_3_2_q0;
        end else if ((brmerge2_reg_3611_pp0_iter38_reg == 1'd1)) begin
            ap_phi_mux_temp_out_3_val_2_s_phi_fu_921_p4 = linebuf_val_val_2_2_q0;
        end else begin
            ap_phi_mux_temp_out_3_val_2_s_phi_fu_921_p4 = ap_phi_reg_pp0_iter39_temp_out_3_val_2_s_reg_918;
        end
    end else begin
        ap_phi_mux_temp_out_3_val_2_s_phi_fu_921_p4 = ap_phi_reg_pp0_iter39_temp_out_3_val_2_s_reg_918;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) & (tmp_13_fu_1390_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_1144_ap_start = 1'b1;
    end else begin
        grp_fu_1144_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_1170_ap_start = 1'b1;
    end else begin
        grp_fu_1170_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1513_ce = 1'b1;
    end else begin
        grp_fu_1513_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1529_ce = 1'b1;
    end else begin
        grp_fu_1529_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        hcoeffs_0_ce0 = 1'b1;
    end else begin
        hcoeffs_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        hcoeffs_1_ce0 = 1'b1;
    end else begin
        hcoeffs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        hcoeffs_2_ce0 = 1'b1;
    end else begin
        hcoeffs_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        hcoeffs_3_ce0 = 1'b1;
    end else begin
        hcoeffs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        linebuf_val_val_0_0_ce0 = 1'b1;
    end else begin
        linebuf_val_val_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_0_0_ce1 = 1'b1;
    end else begin
        linebuf_val_val_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_0_0_we1 = 1'b1;
    end else begin
        linebuf_val_val_0_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        linebuf_val_val_0_1_ce0 = 1'b1;
    end else begin
        linebuf_val_val_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_0_1_ce1 = 1'b1;
    end else begin
        linebuf_val_val_0_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_0_1_we1 = 1'b1;
    end else begin
        linebuf_val_val_0_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        linebuf_val_val_0_2_ce0 = 1'b1;
    end else begin
        linebuf_val_val_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_0_2_ce1 = 1'b1;
    end else begin
        linebuf_val_val_0_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_0_2_we1 = 1'b1;
    end else begin
        linebuf_val_val_0_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        linebuf_val_val_1_0_ce0 = 1'b1;
    end else begin
        linebuf_val_val_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_1_0_ce1 = 1'b1;
    end else begin
        linebuf_val_val_1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_1_0_we1 = 1'b1;
    end else begin
        linebuf_val_val_1_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        linebuf_val_val_1_1_ce0 = 1'b1;
    end else begin
        linebuf_val_val_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_1_1_ce1 = 1'b1;
    end else begin
        linebuf_val_val_1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_1_1_we1 = 1'b1;
    end else begin
        linebuf_val_val_1_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        linebuf_val_val_1_2_ce0 = 1'b1;
    end else begin
        linebuf_val_val_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_1_2_ce1 = 1'b1;
    end else begin
        linebuf_val_val_1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_1_2_we1 = 1'b1;
    end else begin
        linebuf_val_val_1_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        linebuf_val_val_2_0_ce0 = 1'b1;
    end else begin
        linebuf_val_val_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_2_0_ce1 = 1'b1;
    end else begin
        linebuf_val_val_2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_2_0_we1 = 1'b1;
    end else begin
        linebuf_val_val_2_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        linebuf_val_val_2_1_ce0 = 1'b1;
    end else begin
        linebuf_val_val_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_2_1_ce1 = 1'b1;
    end else begin
        linebuf_val_val_2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_2_1_we1 = 1'b1;
    end else begin
        linebuf_val_val_2_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        linebuf_val_val_2_2_ce0 = 1'b1;
    end else begin
        linebuf_val_val_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_2_2_ce1 = 1'b1;
    end else begin
        linebuf_val_val_2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_2_2_we1 = 1'b1;
    end else begin
        linebuf_val_val_2_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        linebuf_val_val_3_0_ce0 = 1'b1;
    end else begin
        linebuf_val_val_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_3_0_ce1 = 1'b1;
    end else begin
        linebuf_val_val_3_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_3_0_we1 = 1'b1;
    end else begin
        linebuf_val_val_3_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        linebuf_val_val_3_1_ce0 = 1'b1;
    end else begin
        linebuf_val_val_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_3_1_ce1 = 1'b1;
    end else begin
        linebuf_val_val_3_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_3_1_we1 = 1'b1;
    end else begin
        linebuf_val_val_3_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        linebuf_val_val_3_2_ce0 = 1'b1;
    end else begin
        linebuf_val_val_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_3_2_ce1 = 1'b1;
    end else begin
        linebuf_val_val_3_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        linebuf_val_val_3_2_we1 = 1'b1;
    end else begin
        linebuf_val_val_3_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter42 == 1'b1) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        p_dst_data_stream_0_V_blk_n = p_dst_data_stream_0_V_full_n;
    end else begin
        p_dst_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter42 == 1'b1) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0))) begin
        p_dst_data_stream_0_V_write = 1'b1;
    end else begin
        p_dst_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter42 == 1'b1) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        p_dst_data_stream_1_V_blk_n = p_dst_data_stream_1_V_full_n;
    end else begin
        p_dst_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter42 == 1'b1) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0))) begin
        p_dst_data_stream_1_V_write = 1'b1;
    end else begin
        p_dst_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter42 == 1'b1) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        p_dst_data_stream_2_V_blk_n = p_dst_data_stream_2_V_full_n;
    end else begin
        p_dst_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter42 == 1'b1) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0))) begin
        p_dst_data_stream_2_V_write = 1'b1;
    end else begin
        p_dst_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter36 == 1'b1) & (or_cond3_reg_3603 == 1'd1) & (row_rd_en_load_1_reg_3599 == 1'd1) & (col_rd_en_1_reg_894 == 1'd1) & (tmp_20_reg_3557_pp0_iter35_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        p_src_data_stream_0_V_blk_n = p_src_data_stream_0_V_empty_n;
    end else begin
        p_src_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op536_read_state87 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        p_src_data_stream_0_V_read = 1'b1;
    end else begin
        p_src_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter36 == 1'b1) & (or_cond3_reg_3603 == 1'd1) & (row_rd_en_load_1_reg_3599 == 1'd1) & (col_rd_en_1_reg_894 == 1'd1) & (tmp_20_reg_3557_pp0_iter35_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        p_src_data_stream_1_V_blk_n = p_src_data_stream_1_V_empty_n;
    end else begin
        p_src_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op537_read_state87 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        p_src_data_stream_1_V_read = 1'b1;
    end else begin
        p_src_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter36 == 1'b1) & (or_cond3_reg_3603 == 1'd1) & (row_rd_en_load_1_reg_3599 == 1'd1) & (col_rd_en_1_reg_894 == 1'd1) & (tmp_20_reg_3557_pp0_iter35_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        p_src_data_stream_2_V_blk_n = p_src_data_stream_2_V_empty_n;
    end else begin
        p_src_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op538_read_state87 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        p_src_data_stream_2_V_read = 1'b1;
    end else begin
        p_src_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        vcoeffs_0_ce0 = 1'b1;
    end else begin
        vcoeffs_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        vcoeffs_1_ce0 = 1'b1;
    end else begin
        vcoeffs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        vcoeffs_2_ce0 = 1'b1;
    end else begin
        vcoeffs_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        vcoeffs_3_ce0 = 1'b1;
    end else begin
        vcoeffs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if (((1'b1 == ap_CS_fsm_state50) & (tmp_13_fu_1390_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter35 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b1)) & ~((ap_enable_reg_pp0_iter41 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter42 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter41 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter42 == 1'b1)) | ((ap_enable_reg_pp0_iter35 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign addconv_fu_1331_p2 = ($signed(14'd3) + $signed(cols_cast_fu_1322_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd51];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter42 == 1'b1) & (((p_dst_data_stream_2_V_full_n == 1'b0) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0)) | ((p_dst_data_stream_1_V_full_n == 1'b0) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0)) | ((p_dst_data_stream_0_V_full_n == 1'b0) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0)))) | ((ap_enable_reg_pp0_iter36 == 1'b1) & (((ap_predicate_op538_read_state87 == 1'b1) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((ap_predicate_op537_read_state87 == 1'b1) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((ap_predicate_op536_read_state87 == 1'b1) & (p_src_data_stream_0_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter42 == 1'b1) & (((p_dst_data_stream_2_V_full_n == 1'b0) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0)) | ((p_dst_data_stream_1_V_full_n == 1'b0) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0)) | ((p_dst_data_stream_0_V_full_n == 1'b0) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0)))) | ((ap_enable_reg_pp0_iter36 == 1'b1) & (((ap_predicate_op538_read_state87 == 1'b1) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((ap_predicate_op537_read_state87 == 1'b1) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((ap_predicate_op536_read_state87 == 1'b1) & (p_src_data_stream_0_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter42 == 1'b1) & (((p_dst_data_stream_2_V_full_n == 1'b0) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0)) | ((p_dst_data_stream_1_V_full_n == 1'b0) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0)) | ((p_dst_data_stream_0_V_full_n == 1'b0) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0)))) | ((ap_enable_reg_pp0_iter36 == 1'b1) & (((ap_predicate_op538_read_state87 == 1'b1) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((ap_predicate_op537_read_state87 == 1'b1) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((ap_predicate_op536_read_state87 == 1'b1) & (p_src_data_stream_0_V_empty_n == 1'b0)))));
end

assign ap_block_state51_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state87_pp0_stage0_iter36 = (((ap_predicate_op538_read_state87 == 1'b1) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((ap_predicate_op537_read_state87 == 1'b1) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((ap_predicate_op536_read_state87 == 1'b1) & (p_src_data_stream_0_V_empty_n == 1'b0)));
end

assign ap_block_state88_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state93_pp0_stage0_iter42 = (((p_dst_data_stream_2_V_full_n == 1'b0) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0)) | ((p_dst_data_stream_1_V_full_n == 1'b0) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0)) | ((p_dst_data_stream_0_V_full_n == 1'b0) & (brmerge4_reg_3640_pp0_iter41_reg == 1'd0)));
end

always @ (*) begin
    ap_condition_1074 = ((icmp_reg_3450 == 1'd0) & (tmp_22_reg_3566_pp0_iter33_reg == 1'd1) & (tmp_20_reg_3557_pp0_iter33_reg == 1'd1));
end

always @ (*) begin
    ap_condition_1347 = ((ap_enable_reg_pp0_iter34 == 1'b1) & (tmp_22_reg_3566_pp0_iter33_reg == 1'd1) & (tmp_20_reg_3557_pp0_iter33_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_3347 = ((ap_enable_reg_pp0_iter39 == 1'b1) & (tmp_20_reg_3557_pp0_iter38_reg == 1'd1) & (col_wr_en_1_reg_906_pp0_iter38_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_3357 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1) & (row_rd_en_load_1_reg_3599 == 1'd1) & (col_rd_en_1_reg_894 == 1'd1) & (tmp_20_reg_3557_pp0_iter35_reg == 1'd1));
end

always @ (*) begin
    ap_condition_633 = ((tmp_22_reg_3566_pp0_iter33_reg == 1'd1) & (tmp_20_reg_3557_pp0_iter33_reg == 1'd1) & (icmp_reg_3450 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_mux_col_rd_en_1_phi_fu_898_p4 = ap_phi_reg_pp0_iter35_col_rd_en_1_reg_894;

assign ap_phi_mux_col_wr_en_1_phi_fu_910_p4 = ap_phi_reg_pp0_iter35_col_wr_en_1_reg_906;

assign ap_phi_reg_pp0_iter0_col_rd_en_1_reg_894 = 'bx;

assign ap_phi_reg_pp0_iter0_col_wr_en_1_reg_906 = 'bx;

assign ap_phi_reg_pp0_iter0_row_wr_en_3_reg_883 = 'bx;

assign ap_phi_reg_pp0_iter34_row_rd_en_3_reg_872 = 'bx;

assign ap_phi_reg_pp0_iter34_rows_rw_4_reg_863 = 'bx;

assign ap_phi_reg_pp0_iter39_temp_out_0_val_0_reg_1017 = 'bx;

assign ap_phi_reg_pp0_iter39_temp_out_0_val_1_reg_1027 = 'bx;

assign ap_phi_reg_pp0_iter39_temp_out_0_val_2_4_reg_1037 = 'bx;

assign ap_phi_reg_pp0_iter39_temp_out_1_val_0_2_reg_1006 = 'bx;

assign ap_phi_reg_pp0_iter39_temp_out_1_val_1_2_reg_995 = 'bx;

assign ap_phi_reg_pp0_iter39_temp_out_1_val_2_2_reg_984 = 'bx;

assign ap_phi_reg_pp0_iter39_temp_out_2_val_0_2_reg_973 = 'bx;

assign ap_phi_reg_pp0_iter39_temp_out_2_val_1_2_reg_962 = 'bx;

assign ap_phi_reg_pp0_iter39_temp_out_2_val_2_2_reg_951 = 'bx;

assign ap_phi_reg_pp0_iter39_temp_out_3_val_0_s_reg_940 = 'bx;

assign ap_phi_reg_pp0_iter39_temp_out_3_val_1_s_reg_929 = 'bx;

assign ap_phi_reg_pp0_iter39_temp_out_3_val_2_s_reg_918 = 'bx;

always @ (*) begin
    ap_predicate_op536_read_state87 = ((or_cond3_reg_3603 == 1'd1) & (row_rd_en_load_1_reg_3599 == 1'd1) & (col_rd_en_1_reg_894 == 1'd1) & (tmp_20_reg_3557_pp0_iter35_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op537_read_state87 = ((or_cond3_reg_3603 == 1'd1) & (row_rd_en_load_1_reg_3599 == 1'd1) & (col_rd_en_1_reg_894 == 1'd1) & (tmp_20_reg_3557_pp0_iter35_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op538_read_state87 = ((or_cond3_reg_3603 == 1'd1) & (row_rd_en_load_1_reg_3599 == 1'd1) & (col_rd_en_1_reg_894 == 1'd1) & (tmp_20_reg_3557_pp0_iter35_reg == 1'd1));
end

assign brmerge1_fu_1847_p2 = (icmp1_reg_3460 | col_rd_en_1_reg_894);

assign brmerge2_fu_1784_p2 = (tmp12_reg_3541 | row_rd_en_fu_242);

assign brmerge4_fu_2006_p2 = (tmp14_fu_2000_p2 | tmp13_fu_1989_p2);

assign brmerge_fu_2033_p2 = (row_rd_en_3_reg_872_pp0_iter36_reg | icmp_reg_3450);

assign col_assign_fu_2097_p2 = (tmp_19_reg_3552_pp0_iter36_reg ^ 2'd3);

assign col_fu_1501_p2 = (13'd1 + ap_phi_mux_p_Val2_10_phi_fu_844_p4);

assign col_ratio_V_fu_1223_p1 = grp_fu_1170_p2[31:0];

assign cols_cast_fu_1322_p1 = $signed(cols_reg_3403);

assign cols_fu_1196_p3 = ((tmp_8_fu_1190_p2[0:0] === 1'b1) ? cols_in_cast_fu_1120_p1 : p_dst_cols_V_read);

assign cols_in_cast_fu_1120_p0 = p_src_cols_V_read;

assign cols_in_cast_fu_1120_p1 = cols_in_cast_fu_1120_p0;

assign cols_rw_1_dcol_2_fu_1634_p3 = ((or_cond2_fu_1628_p2[0:0] === 1'b1) ? cols_rw_fu_246 : cols_rw_4_fu_1613_p1);

assign cols_rw_1_dcol_fu_1725_p3 = ((or_cond1_fu_1719_p2[0:0] === 1'b1) ? cols_rw_fu_246 : cols_rw_3_fu_1700_p3);

assign cols_rw_3_fu_1700_p3 = ((p_Result_4_fu_1658_p3[0:0] === 1'b1) ? tmp_33_fu_1692_p3 : tmp_30_fu_1676_p4);

assign cols_rw_4_fu_1613_p1 = grp_fu_1529_p2[15:0];

assign grp_fu_1144_p0 = {{p_dst_rows_V_read}, {32'd0}};

assign grp_fu_1170_p0 = {{p_dst_cols_V_read}, {32'd0}};

assign grp_fu_1513_p0 = t_V_2_cast_reg_3495;

assign grp_fu_1529_p0 = grp_fu_1529_p00;

assign grp_fu_1529_p00 = t_V_1_fu_1517_p3;

assign grp_fu_2877_p0 = hcoeffs_3_load_cast_fu_2343_p1;

assign grp_fu_2877_p1 = grp_fu_2877_p10;

assign grp_fu_2877_p10 = tmp_42_fu_2109_p6;

assign grp_fu_2877_p2 = 26'd524288;

assign grp_fu_2885_p0 = hcoeffs_3_load_cast_fu_2343_p1;

assign grp_fu_2885_p1 = grp_fu_2885_p10;

assign grp_fu_2885_p10 = h_fir_0_val_1_fu_2123_p6;

assign grp_fu_2885_p2 = 26'd524288;

assign grp_fu_2893_p0 = hcoeffs_3_load_cast_fu_2343_p1;

assign grp_fu_2893_p1 = grp_fu_2893_p10;

assign grp_fu_2893_p10 = h_fir_0_val_2_fu_2137_p6;

assign grp_fu_2893_p2 = 26'd524288;

assign grp_fu_2901_p0 = tmp_53_fu_2377_p1;

assign grp_fu_2901_p1 = grp_fu_2901_p10;

assign grp_fu_2901_p10 = tmp_45_reg_3644;

assign grp_fu_2910_p0 = tmp_113_0_2_cast_cas_fu_2386_p1;

assign grp_fu_2910_p1 = grp_fu_2910_p10;

assign grp_fu_2910_p10 = tmp_47_reg_3659;

assign grp_fu_2918_p0 = hcoeffs_0_load_cast_fu_2392_p1;

assign grp_fu_2918_p1 = grp_fu_2918_p10;

assign grp_fu_2918_p10 = tmp_50_reg_3674;

assign grp_fu_2926_p0 = tmp_53_fu_2377_p1;

assign grp_fu_2926_p1 = grp_fu_2926_p10;

assign grp_fu_2926_p10 = h_fir_1_val_1_reg_3649;

assign grp_fu_2935_p0 = tmp_113_0_2_cast_cas_fu_2386_p1;

assign grp_fu_2935_p1 = grp_fu_2935_p10;

assign grp_fu_2935_p10 = h_fir_2_val_1_reg_3664;

assign grp_fu_2943_p0 = hcoeffs_0_load_cast_fu_2392_p1;

assign grp_fu_2943_p1 = grp_fu_2943_p10;

assign grp_fu_2943_p10 = h_fir_3_val_1_reg_3679;

assign grp_fu_2951_p0 = tmp_53_fu_2377_p1;

assign grp_fu_2951_p1 = grp_fu_2951_p10;

assign grp_fu_2951_p10 = h_fir_1_val_2_reg_3654;

assign grp_fu_2960_p0 = tmp_113_0_2_cast_cas_fu_2386_p1;

assign grp_fu_2960_p1 = grp_fu_2960_p10;

assign grp_fu_2960_p10 = h_fir_2_val_2_reg_3669;

assign grp_fu_2968_p0 = hcoeffs_0_load_cast_fu_2392_p1;

assign grp_fu_2968_p1 = grp_fu_2968_p10;

assign grp_fu_2968_p10 = h_fir_3_val_2_reg_3684;

assign grp_fu_2976_p0 = vcoeffs_3_load_cast_fu_2806_p1;

assign grp_fu_2976_p1 = grp_fu_2976_p10;

assign grp_fu_2976_p10 = v_fir_0_val_0_1_fu_310;

assign grp_fu_2976_p2 = 26'd524288;

assign grp_fu_2985_p0 = tmp_61_fu_2816_p1;

assign grp_fu_2985_p1 = grp_fu_2985_p10;

assign grp_fu_2985_p10 = v_fir_1_val_0_1_fu_322;

assign grp_fu_2994_p0 = tmp_131_0_2_cast_cas_fu_2826_p1;

assign grp_fu_2994_p1 = grp_fu_2994_p10;

assign grp_fu_2994_p10 = v_fir_2_val_0_1_fu_298;

assign grp_fu_3002_p0 = vcoeffs_3_load_cast_fu_2806_p1;

assign grp_fu_3002_p1 = grp_fu_3002_p10;

assign grp_fu_3002_p10 = v_fir_0_val_1_1_fu_314;

assign grp_fu_3002_p2 = 26'd524288;

assign grp_fu_3011_p0 = tmp_61_fu_2816_p1;

assign grp_fu_3011_p1 = grp_fu_3011_p10;

assign grp_fu_3011_p10 = v_fir_1_val_1_1_fu_306;

assign grp_fu_3020_p0 = tmp_131_0_2_cast_cas_fu_2826_p1;

assign grp_fu_3020_p1 = grp_fu_3020_p10;

assign grp_fu_3020_p10 = v_fir_2_val_1_1_fu_294;

assign grp_fu_3028_p0 = vcoeffs_3_load_cast_fu_2806_p1;

assign grp_fu_3028_p1 = grp_fu_3028_p10;

assign grp_fu_3028_p10 = v_fir_0_val_2_1_fu_318;

assign grp_fu_3028_p2 = 26'd524288;

assign grp_fu_3037_p0 = tmp_61_fu_2816_p1;

assign grp_fu_3037_p1 = grp_fu_3037_p10;

assign grp_fu_3037_p10 = v_fir_1_val_2_1_fu_302;

assign grp_fu_3046_p0 = tmp_131_0_2_cast_cas_fu_2826_p1;

assign grp_fu_3046_p1 = grp_fu_3046_p10;

assign grp_fu_3046_p10 = v_fir_2_val_2_1_fu_290;

assign grp_fu_3054_p0 = vcoeffs_0_load_cast_fu_2868_p1;

assign grp_fu_3054_p1 = grp_fu_3054_p10;

assign grp_fu_3054_p10 = temp_out_0_val_0_1_1_reg_3856;

assign grp_fu_3062_p0 = vcoeffs_0_load_cast_fu_2868_p1;

assign grp_fu_3062_p1 = grp_fu_3062_p10;

assign grp_fu_3062_p10 = temp_out_0_val_1_1_1_reg_3851;

assign grp_fu_3070_p0 = vcoeffs_0_load_cast_fu_2868_p1;

assign grp_fu_3070_p1 = grp_fu_3070_p10;

assign grp_fu_3070_p10 = v_fir_3_val_2_load_reg_3846;

assign h_phase_V_fu_1828_p4 = {{h_phase_acc_V_2_fu_258[15:12]}};

assign h_phase_acc_V_1_fu_1863_p3 = ((or_cond_fu_1852_p2[0:0] === 1'b1) ? h_phase_acc_V_fu_1858_p2 : h_phase_acc_V_4_reg_3423);

assign h_phase_acc_V_4_fu_1311_p3 = ((p_Result_2_fu_1297_p3[0:0] === 1'b1) ? ret_V_4_fu_1305_p2 : tmp_s_fu_1287_p4);

assign h_phase_acc_V_fu_1858_p2 = (h_phase_acc_V_2_fu_258 + h_phase_acc_V_4_reg_3423);

assign h_shreg_val_0_val_3_6_fu_1893_p3 = ((tmp_16_reg_3500[0:0] === 1'b1) ? h_shreg_val_0_val_2_fu_362 : 8'd0);

assign h_shreg_val_0_val_3_7_fu_1900_p3 = ((tmp_16_reg_3500[0:0] === 1'b1) ? h_shreg_val_0_val_3_fu_266 : 8'd0);

assign hcoeffs_0_address0 = tmp_51_fu_1972_p1;

assign hcoeffs_0_load_cast_fu_2392_p1 = hcoeffs_0_load_reg_3704;

assign hcoeffs_1_address0 = tmp_51_fu_1972_p1;

assign hcoeffs_2_address0 = tmp_51_fu_1972_p1;

assign hcoeffs_3_address0 = tmp_51_fu_1972_p1;

assign hcoeffs_3_load_cast_fu_2343_p1 = hcoeffs_3_q0;

assign i_op_assign_1_cast_fu_1488_p1 = ap_phi_mux_p_Val2_10_phi_fu_844_p4;

assign i_op_assign_cast_fu_1386_p1 = p_Val2_8_reg_829;

assign icmp1_fu_1367_p2 = (($signed(tmp_11_fu_1357_p4) < $signed(16'd1)) ? 1'b1 : 1'b0);

assign icmp2_fu_1445_p2 = ((tmp_17_fu_1435_p4 == 12'd0) ? 1'b1 : 1'b0);

assign icmp3_fu_2161_p2 = ((tmp_43_fu_2151_p4 != 12'd0) ? 1'b1 : 1'b0);

assign icmp4_fu_2283_p2 = ((tmp_48_fu_2273_p4 != 11'd0) ? 1'b1 : 1'b0);

assign icmp_fu_1347_p2 = (($signed(tmp_fu_1337_p4) < $signed(16'd1)) ? 1'b1 : 1'b0);

assign linebuf_val_val_0_0_address0 = tmp_40_fu_2355_p1;

assign linebuf_val_val_0_1_address0 = tmp_40_fu_2355_p1;

assign linebuf_val_val_0_2_address0 = tmp_40_fu_2355_p1;

assign linebuf_val_val_1_0_address0 = tmp_40_fu_2355_p1;

assign linebuf_val_val_1_0_d1 = ((tmp_18_reg_3510[0:0] === 1'b1) ? temp_out_1_val_0_fu_386 : temp_out_0_val_0_2_fu_374);

assign linebuf_val_val_1_1_address0 = tmp_40_fu_2355_p1;

assign linebuf_val_val_1_1_d1 = ((tmp_18_reg_3510[0:0] === 1'b1) ? temp_out_1_val_1_fu_390 : temp_out_0_val_1_2_fu_378);

assign linebuf_val_val_1_2_address0 = tmp_40_fu_2355_p1;

assign linebuf_val_val_1_2_d1 = ((tmp_18_reg_3510[0:0] === 1'b1) ? temp_out_1_val_2_fu_394 : v_fir_3_val_2_1_fu_382);

assign linebuf_val_val_2_0_address0 = tmp_40_fu_2355_p1;

assign linebuf_val_val_2_0_d1 = ((tmp_18_reg_3510[0:0] === 1'b1) ? temp_out_2_val_0_fu_398 : temp_out_0_val_0_2_fu_374);

assign linebuf_val_val_2_1_address0 = tmp_40_fu_2355_p1;

assign linebuf_val_val_2_1_d1 = ((tmp_18_reg_3510[0:0] === 1'b1) ? temp_out_2_val_1_fu_402 : temp_out_0_val_1_2_fu_378);

assign linebuf_val_val_2_2_address0 = tmp_40_fu_2355_p1;

assign linebuf_val_val_2_2_d1 = ((tmp_18_reg_3510[0:0] === 1'b1) ? temp_out_2_val_2_fu_406 : v_fir_3_val_2_1_fu_382);

assign linebuf_val_val_3_0_address0 = tmp_40_fu_2355_p1;

assign linebuf_val_val_3_1_address0 = tmp_40_fu_2355_p1;

assign linebuf_val_val_3_2_address0 = tmp_40_fu_2355_p1;

assign next_mul_fu_1605_p2 = ($signed(r_V_4_reg_852) + $signed(tmp_20_cast_reg_3465));

assign not_1_fu_1589_p2 = ((drow_fu_250 != rows_rw_fu_1581_p3) ? 1'b1 : 1'b0);

assign not_or_cond1_fu_1648_p2 = (tmp_39_not_fu_1642_p2 | tmp_22_reg_3566_pp0_iter33_reg);

assign not_or_cond_fu_1739_p2 = (tmp_41_not_fu_1733_p2 | tmp_22_reg_3566_pp0_iter33_reg);

assign not_s_fu_1542_p2 = ((drow_fu_250 != rows_rw_1_fu_1537_p1) ? 1'b1 : 1'b0);

assign notlhs_fu_1457_p2 = ((p_Val2_8_reg_829 < 13'd3) ? 1'b1 : 1'b0);

assign notrhs_fu_1983_p2 = ((p_Val2_10_reg_840_pp0_iter35_reg < 13'd3) ? 1'b1 : 1'b0);

assign or_cond1_fu_1719_p2 = (tmp_34_fu_1713_p2 & tmp_30_not_fu_1708_p2);

assign or_cond2_fu_1628_p2 = (tmp_36_fu_1622_p2 & tmp_30_not1_fu_1617_p2);

assign or_cond3_fu_1761_p2 = (tmp_38_fu_1757_p2 & tmp_16_reg_3500);

assign or_cond4_fu_1776_p2 = (tmp_16_reg_3500 & rev1_fu_1770_p2);

assign or_cond_fu_1852_p2 = (tmp_37_fu_1841_p2 & brmerge1_fu_1847_p2);

assign p_Result_2_fu_1297_p3 = ret_V_2_fu_1281_p2[32'd47];

assign p_Result_4_fu_1658_p3 = r_V_4_reg_852[32'd44];

assign p_Result_s_fu_1251_p3 = ret_V_fu_1235_p2[32'd47];

assign p_dst_data_stream_0_V_din = pix_out_val_0_1_reg_3876;

assign p_dst_data_stream_1_V_din = pix_out_val_1_1_reg_3881;

assign p_dst_data_stream_2_V_din = tmp_64_reg_3886;

assign r_V_2_fu_1273_p3 = {{col_ratio_V_fu_1223_p1}, {16'd0}};

assign r_V_3_fu_1405_p0 = r_V_3_fu_1405_p00;

assign r_V_3_fu_1405_p00 = p_Val2_8_reg_829;

assign r_V_3_fu_1405_p1 = tmp_18_cast_reg_3455;

assign r_V_3_fu_1405_p2 = ($signed({{1'b0}, {r_V_3_fu_1405_p0}}) * $signed(r_V_3_fu_1405_p1));

assign r_V_fu_1227_p3 = {{row_ratio_V_fu_1219_p1}, {16'd0}};

assign ret_V_1_fu_1259_p2 = (32'd1 + tmp_9_fu_1241_p4);

assign ret_V_2_fu_1281_p2 = (r_V_2_fu_1273_p3 | 48'd32768);

assign ret_V_4_fu_1305_p2 = (32'd1 + tmp_s_fu_1287_p4);

assign ret_V_fu_1235_p2 = (r_V_fu_1227_p3 | 48'd32768);

assign rev1_fu_1770_p2 = (slt1_fu_1766_p2 ^ 1'd1);

assign rev_fu_1468_p2 = (slt_fu_1463_p2 ^ 1'd1);

assign row_fu_1395_p2 = (p_Val2_8_reg_829 + 13'd1);

assign row_rate_fu_1265_p3 = ((p_Result_s_fu_1251_p3[0:0] === 1'b1) ? ret_V_1_fu_1259_p2 : tmp_9_fu_1241_p4);

assign row_ratio_V_fu_1219_p1 = grp_fu_1144_p2[31:0];

assign row_rd_en_load_1_load_fu_1754_p1 = row_rd_en_fu_242;

assign rows_cast_cast_fu_1319_p1 = rows_reg_3397;

assign rows_fu_1182_p3 = ((tmp_4_fu_1176_p2[0:0] === 1'b1) ? rows_in_cast_fu_1116_p1 : p_dst_rows_V_read);

assign rows_in_cast_fu_1116_p0 = p_src_rows_V_read;

assign rows_in_cast_fu_1116_p1 = rows_in_cast_fu_1116_p0;

assign rows_rw_1_fu_1537_p1 = grp_fu_1513_p2[15:0];

assign rows_rw_fu_1581_p3 = ((p_Result_3_reg_3490[0:0] === 1'b1) ? tmp_27_fu_1573_p3 : tmp_25_fu_1558_p4);

assign sel_SEBB1_fu_1886_p3 = ((tmp_16_reg_3500[0:0] === 1'b1) ? h_shreg_val_0_val_2_1_fu_366 : h_shreg_val_0_val_3_1_fu_270);

assign sel_SEBB_fu_1879_p3 = ((tmp_16_reg_3500[0:0] === 1'b1) ? h_shreg_val_0_val_2_2_fu_370 : h_shreg_val_0_val_3_2_fu_274);

assign slt1_fu_1766_p2 = (($signed(i_op_assign_1_cast_reg_3546_pp0_iter34_reg) < $signed(cols_cast_reg_3434)) ? 1'b1 : 1'b0);

assign slt_fu_1463_p2 = (($signed(i_op_assign_cast_fu_1386_p1) < $signed(tmp_21_cast_cast_reg_3470)) ? 1'b1 : 1'b0);

assign t_V_1_fu_1517_p3 = {{ap_phi_mux_p_Val2_10_phi_fu_844_p4}, {16'd0}};

assign t_V_2_cast_fu_1426_p1 = t_V_fu_1418_p3;

assign t_V_fu_1418_p3 = {{p_Val2_8_reg_829}, {16'd0}};

assign tmp12_fu_1482_p2 = (rev_fu_1468_p2 | icmp2_fu_1445_p2);

assign tmp13_fu_1989_p2 = (notrhs_fu_1983_p2 | notlhs_reg_3526);

assign tmp14_fu_2000_p2 = (tmp38_demorgan_fu_1994_p2 ^ 1'd1);

assign tmp38_demorgan_fu_1994_p2 = (row_wr_en_fu_238 & col_wr_en_1_reg_906);

assign tmp_103_2_fu_2217_p2 = ((p_Val2_10_reg_840_pp0_iter36_reg > 13'd2) ? 1'b1 : 1'b0);

assign tmp_10_fu_1325_p2 = ($signed(14'd3) + $signed(rows_cast_cast_fu_1319_p1));

assign tmp_113_0_2_cast_cas_fu_2386_p1 = $signed(hcoeffs_1_load_reg_3699);

assign tmp_118_0_t_fu_1474_p3 = ((tmp_18_fu_1451_p2[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign tmp_11_fu_1357_p4 = {{h_phase_acc_V_4_fu_1311_p3[31:16]}};

assign tmp_12_fu_1377_p2 = ($signed(13'd8190) + $signed(rows_reg_3397));

assign tmp_131_0_2_cast_cas_fu_2826_p1 = $signed(vcoeffs_1_load_reg_3836);

assign tmp_13_fu_1390_p2 = (($signed(i_op_assign_cast_fu_1386_p1) < $signed(tmp_10_reg_3440)) ? 1'b1 : 1'b0);

assign tmp_16_fu_1430_p2 = (($signed(i_op_assign_cast_fu_1386_p1) < $signed(rows_cast_cast_reg_3429)) ? 1'b1 : 1'b0);

assign tmp_17_fu_1435_p4 = {{p_Val2_8_reg_829[12:1]}};

assign tmp_18_cast_fu_1353_p1 = row_ratio_V_fu_1219_p1;

assign tmp_18_fu_1451_p2 = ((p_Val2_8_reg_829 != 13'd0) ? 1'b1 : 1'b0);

assign tmp_19_fu_1492_p1 = ap_phi_mux_p_Val2_10_phi_fu_844_p4[1:0];

assign tmp_1_fu_1124_p1 = p_src_rows_V_read;

assign tmp_1_fu_1124_p3 = {{tmp_1_fu_1124_p1}, {16'd0}};

assign tmp_20_cast_fu_1373_p1 = col_ratio_V_fu_1223_p1;

assign tmp_20_fu_1496_p2 = (($signed(i_op_assign_1_cast_fu_1488_p1) < $signed(addconv_reg_3445)) ? 1'b1 : 1'b0);

assign tmp_21_cast_cast_fu_1382_p1 = $signed(tmp_12_fu_1377_p2);

assign tmp_22_fu_1507_p2 = ((ap_phi_mux_p_Val2_10_phi_fu_844_p4 == 13'd0) ? 1'b1 : 1'b0);

assign tmp_23_fu_1549_p1 = r_V_3_reg_3484[15:0];

assign tmp_24_fu_1552_p2 = ((tmp_23_fu_1549_p1 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_25_fu_1558_p4 = {{r_V_3_reg_3484[31:16]}};

assign tmp_26_fu_1567_p2 = (16'd1 + tmp_25_fu_1558_p4);

assign tmp_27_fu_1573_p3 = ((tmp_24_fu_1552_p2[0:0] === 1'b1) ? tmp_25_fu_1558_p4 : tmp_26_fu_1567_p2);

assign tmp_29_fu_1670_p2 = ((tmp_31_fu_1666_p1 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_30_fu_1676_p4 = {{r_V_4_reg_852[31:16]}};

assign tmp_30_not1_fu_1617_p2 = (tmp_22_reg_3566_pp0_iter33_reg ^ 1'd1);

assign tmp_30_not_fu_1708_p2 = (tmp_22_reg_3566_pp0_iter33_reg ^ 1'd1);

assign tmp_31_fu_1666_p1 = r_V_4_reg_852[15:0];

assign tmp_32_fu_1686_p2 = (16'd1 + tmp_30_fu_1676_p4);

assign tmp_33_fu_1692_p3 = ((tmp_29_fu_1670_p2[0:0] === 1'b1) ? tmp_30_fu_1676_p4 : tmp_32_fu_1686_p2);

assign tmp_34_fu_1713_p2 = ((cols_rw_fu_246 == cols_rw_3_fu_1700_p3) ? 1'b1 : 1'b0);

assign tmp_36_fu_1622_p2 = ((cols_rw_fu_246 == cols_rw_4_fu_1613_p1) ? 1'b1 : 1'b0);

assign tmp_37_fu_1841_p2 = ((p_Val2_10_reg_840_pp0_iter35_reg != 13'd0) ? 1'b1 : 1'b0);

assign tmp_38_fu_1757_p2 = (($signed(i_op_assign_1_cast_reg_3546_pp0_iter34_reg) < $signed(cols_cast_reg_3434)) ? 1'b1 : 1'b0);

assign tmp_39_not_fu_1642_p2 = (tmp_36_fu_1622_p2 ^ 1'd1);

assign tmp_3_fu_1150_p1 = p_src_cols_V_read;

assign tmp_3_fu_1150_p3 = {{tmp_3_fu_1150_p1}, {16'd0}};

assign tmp_40_fu_2355_p1 = p_Val2_10_reg_840_pp0_iter37_reg;

assign tmp_41_fu_2102_p3 = ((tmp_37_reg_3615[0:0] === 1'b1) ? 2'd0 : col_assign_fu_2097_p2);

assign tmp_41_not_fu_1733_p2 = (tmp_34_fu_1713_p2 ^ 1'd1);

assign tmp_43_fu_2151_p4 = {{p_Val2_10_reg_840_pp0_iter36_reg[12:1]}};

assign tmp_44_fu_2167_p3 = ((icmp3_fu_2161_p2[0:0] === 1'b1) ? 2'd1 : col_assign_fu_2097_p2);

assign tmp_46_fu_2223_p3 = ((tmp_103_2_fu_2217_p2[0:0] === 1'b1) ? 2'd2 : col_assign_fu_2097_p2);

assign tmp_48_fu_2273_p4 = {{p_Val2_10_reg_840_pp0_iter36_reg[12:2]}};

assign tmp_49_fu_2289_p3 = ((icmp4_fu_2283_p2[0:0] === 1'b1) ? 2'd3 : col_assign_fu_2097_p2);

assign tmp_4_fu_1176_p2 = (($signed(rows_in_cast_fu_1116_p1) > $signed(p_dst_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_51_fu_1972_p1 = h_phase_V_fu_1828_p4;

assign tmp_53_fu_2377_p1 = $signed(hcoeffs_2_load_reg_3694);

assign tmp_59_fu_2428_p1 = v_phase_V_1_fu_254;

assign tmp_61_fu_2816_p1 = $signed(vcoeffs_2_load_reg_3831);

assign tmp_8_fu_1190_p2 = (($signed(cols_in_cast_fu_1120_p1) > $signed(p_dst_cols_V_read)) ? 1'b1 : 1'b0);

assign tmp_9_fu_1241_p4 = {{ret_V_fu_1235_p2[47:16]}};

assign tmp_fu_1337_p4 = {{row_rate_fu_1265_p3[31:16]}};

assign tmp_s_fu_1287_p4 = {{ret_V_2_fu_1281_p2[47:16]}};

assign v_fir_1_val_0_fu_2475_p3 = ((tmp_18_reg_3510[0:0] === 1'b1) ? ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4 : ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4);

assign v_fir_1_val_1_fu_2482_p3 = ((tmp_18_reg_3510[0:0] === 1'b1) ? ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4 : ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4);

assign v_fir_1_val_2_fu_2489_p3 = ((tmp_18_reg_3510[0:0] === 1'b1) ? ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4 : ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4);

assign v_fir_2_val_0_fu_2496_p3 = ((tmp_18_reg_3510[0:0] === 1'b1) ? ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4 : ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4);

assign v_fir_2_val_1_fu_2503_p3 = ((tmp_18_reg_3510[0:0] === 1'b1) ? ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4 : ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4);

assign v_fir_2_val_2_fu_2510_p3 = ((tmp_18_reg_3510[0:0] === 1'b1) ? ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4 : ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4);

assign v_phase_acc_V_1_fu_2043_p3 = ((brmerge_fu_2033_p2[0:0] === 1'b1) ? v_phase_acc_V_fu_2038_p2 : v_phase_acc_V_2_fu_262);

assign v_phase_acc_V_fu_2038_p2 = (v_phase_acc_V_2_fu_262 + row_rate_reg_3418);

assign vcoeffs_0_address0 = tmp_59_fu_2428_p1;

assign vcoeffs_0_load_cast_fu_2868_p1 = vcoeffs_0_load_reg_3841_pp0_iter40_reg;

assign vcoeffs_1_address0 = tmp_59_fu_2428_p1;

assign vcoeffs_2_address0 = tmp_59_fu_2428_p1;

assign vcoeffs_3_address0 = tmp_59_fu_2428_p1;

assign vcoeffs_3_load_cast_fu_2806_p1 = vcoeffs_3_load_reg_3826;

always @ (posedge ap_clk) begin
    t_V_2_cast_reg_3495[15:0] <= 16'b0000000000000000;
    t_V_2_cast_reg_3495[31:29] <= 3'b000;
    i_op_assign_1_cast_reg_3546[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter1_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter2_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter3_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter4_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter5_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter6_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter7_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter8_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter9_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter10_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter11_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter12_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter13_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter14_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter15_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter16_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter17_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter18_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter19_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter20_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter21_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter22_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter23_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter24_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter25_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter26_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter27_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter28_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter29_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter30_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter31_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter32_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter33_reg[13] <= 1'b0;
    i_op_assign_1_cast_reg_3546_pp0_iter34_reg[13] <= 1'b0;
end

endmodule //Resize_opr_bicubic
