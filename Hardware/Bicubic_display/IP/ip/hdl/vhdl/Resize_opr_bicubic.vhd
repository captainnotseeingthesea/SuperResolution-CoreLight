-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Resize_opr_bicubic is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (10 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (10 downto 0);
    p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_0_V_read : OUT STD_LOGIC;
    p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_1_V_read : OUT STD_LOGIC;
    p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_2_V_read : OUT STD_LOGIC;
    p_dst_rows_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
    p_dst_cols_V_read : IN STD_LOGIC_VECTOR (12 downto 0);
    p_dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_0_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_0_V_write : OUT STD_LOGIC;
    p_dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_1_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_1_V_write : OUT STD_LOGIC;
    p_dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_2_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_2_V_write : OUT STD_LOGIC );
end;


architecture behav of Resize_opr_bicubic is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (51 downto 0) := "0000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (51 downto 0) := "0000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (51 downto 0) := "0000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (51 downto 0) := "0000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (51 downto 0) := "0000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (51 downto 0) := "0000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (51 downto 0) := "0001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (51 downto 0) := "0010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (51 downto 0) := "0100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (51 downto 0) := "1000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv45_0 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv48_8000 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000001000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv14_3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv13_1FFE : STD_LOGIC_VECTOR (12 downto 0) := "1111111111110";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv26_80000 : STD_LOGIC_VECTOR (25 downto 0) := "00000010000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal hcoeffs_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal hcoeffs_3_ce0 : STD_LOGIC;
    signal hcoeffs_3_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal hcoeffs_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal hcoeffs_2_ce0 : STD_LOGIC;
    signal hcoeffs_2_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal hcoeffs_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal hcoeffs_1_ce0 : STD_LOGIC;
    signal hcoeffs_1_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal hcoeffs_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal hcoeffs_0_ce0 : STD_LOGIC;
    signal hcoeffs_0_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal vcoeffs_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal vcoeffs_3_ce0 : STD_LOGIC;
    signal vcoeffs_3_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal vcoeffs_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal vcoeffs_2_ce0 : STD_LOGIC;
    signal vcoeffs_2_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal vcoeffs_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal vcoeffs_1_ce0 : STD_LOGIC;
    signal vcoeffs_1_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal vcoeffs_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal vcoeffs_0_ce0 : STD_LOGIC;
    signal vcoeffs_0_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_src_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter36 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_20_reg_3557 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_rd_en_load_1_reg_3599 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_3603 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_src_data_stream_1_V_blk_n : STD_LOGIC;
    signal p_src_data_stream_2_V_blk_n : STD_LOGIC;
    signal p_dst_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter42 : STD_LOGIC := '0';
    signal brmerge4_reg_3640 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge4_reg_3640_pp0_iter41_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_1_V_blk_n : STD_LOGIC;
    signal p_dst_data_stream_2_V_blk_n : STD_LOGIC;
    signal p_Val2_10_reg_840 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state51_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state52_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state53_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state54_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state55_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state56_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state57_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state58_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state59_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state60_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state61_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state62_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state63_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state64_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state65_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state66_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state67_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state68_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state69_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state70_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state71_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state72_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state73_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state74_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state75_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state76_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state77_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state78_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state79_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state80_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state81_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state82_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state83_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_state84_pp0_stage0_iter33 : BOOLEAN;
    signal ap_block_state85_pp0_stage0_iter34 : BOOLEAN;
    signal ap_block_state86_pp0_stage0_iter35 : BOOLEAN;
    signal ap_predicate_op536_read_state87 : BOOLEAN;
    signal ap_predicate_op537_read_state87 : BOOLEAN;
    signal ap_predicate_op538_read_state87 : BOOLEAN;
    signal ap_block_state87_pp0_stage0_iter36 : BOOLEAN;
    signal ap_block_state88_pp0_stage0_iter37 : BOOLEAN;
    signal ap_block_state89_pp0_stage0_iter38 : BOOLEAN;
    signal ap_block_state90_pp0_stage0_iter39 : BOOLEAN;
    signal ap_block_state91_pp0_stage0_iter40 : BOOLEAN;
    signal ap_block_state92_pp0_stage0_iter41 : BOOLEAN;
    signal ap_block_state93_pp0_stage0_iter42 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_Val2_10_reg_840_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter7_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter8_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter9_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter10_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter11_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter12_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter13_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter14_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter15_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter16_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter17_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter18_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter19_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter20_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter21_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter22_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter23_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter24_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter25_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter26_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter27_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter28_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter29_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter30_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter31_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter32_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter33_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter34_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter35_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter36_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_840_pp0_iter37_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_4_reg_852 : STD_LOGIC_VECTOR (44 downto 0);
    signal row_rd_en_3_reg_872 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_rd_en_3_reg_872_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal row_rd_en_3_reg_872_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_en_1_reg_906_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_en_1_reg_906_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_en_1_reg_906_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal rows_fu_1182_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal rows_reg_3397 : STD_LOGIC_VECTOR (12 downto 0);
    signal cols_fu_1196_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal cols_reg_3403 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ratio_V_fu_1219_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_ratio_V_reg_3408 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal col_ratio_V_fu_1223_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_ratio_V_reg_3413 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_rate_fu_1265_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_rate_reg_3418 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_phase_acc_V_4_fu_1311_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_phase_acc_V_4_reg_3423 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_cast_cast_fu_1319_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal rows_cast_cast_reg_3429 : STD_LOGIC_VECTOR (13 downto 0);
    signal cols_cast_fu_1322_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal cols_cast_reg_3434 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_10_fu_1325_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_10_reg_3440 : STD_LOGIC_VECTOR (13 downto 0);
    signal addconv_fu_1331_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal addconv_reg_3445 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_fu_1347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_3450 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_cast_fu_1353_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_18_cast_reg_3455 : STD_LOGIC_VECTOR (44 downto 0);
    signal icmp1_fu_1367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_reg_3460 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_cast_fu_1373_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_20_cast_reg_3465 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_21_cast_cast_fu_1382_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_21_cast_cast_reg_3470 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_13_fu_1390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal row_fu_1395_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_reg_3479 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_3_fu_1405_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_3_reg_3484 : STD_LOGIC_VECTOR (44 downto 0);
    signal p_Result_3_reg_3490 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_cast_fu_1426_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_2_cast_reg_3495 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_1430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_3500 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_3510 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_1457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_reg_3526 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_118_0_t_fu_1474_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_118_0_t_reg_3531 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp12_fu_1482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp12_reg_3541 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_op_assign_1_cast_fu_1488_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter4_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter5_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter6_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter7_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter8_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter9_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter10_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter11_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter12_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter13_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter14_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter15_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter16_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter17_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter18_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter19_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter20_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter21_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter22_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter23_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter24_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter25_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter26_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter27_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter28_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter29_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter30_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter31_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter32_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter33_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal i_op_assign_1_cast_reg_3546_pp0_iter34_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_19_fu_1492_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter11_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter12_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter13_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter14_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter15_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter16_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter17_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter18_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter19_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter20_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter21_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter22_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter23_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter24_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter25_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter26_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter27_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter28_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter29_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter30_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter31_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter32_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter33_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter34_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter35_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_3552_pp0_iter36_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_fu_1496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_3557_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_fu_1501_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_reg_3561 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_22_fu_1507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_3566_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_1_fu_1589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal next_mul_fu_1605_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal ap_enable_reg_pp0_iter34 : STD_LOGIC := '0';
    signal not_or_cond1_fu_1648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_or_cond_fu_1739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_rd_en_load_1_load_fu_1754_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_col_rd_en_1_phi_fu_898_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_1761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_1776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3607 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_fu_1784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_reg_3611 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_col_wr_en_1_phi_fu_910_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_reg_3611_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_reg_3611_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_reg_3611_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_1841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_3615 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge4_fu_2006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge4_reg_3640_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge4_reg_3640_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge4_reg_3640_pp0_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge4_reg_3640_pp0_iter40_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_2175_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_45_reg_3644 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_fir_1_val_1_fu_2189_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_fir_1_val_1_reg_3649 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_fir_1_val_2_fu_2203_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_fir_1_val_2_reg_3654 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_fu_2231_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_reg_3659 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_fir_2_val_1_fu_2245_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_fir_2_val_1_reg_3664 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_fir_2_val_2_fu_2259_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_fir_2_val_2_reg_3669 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_50_fu_2297_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_50_reg_3674 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_fir_3_val_1_fu_2311_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_fir_3_val_1_reg_3679 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_fir_3_val_2_fu_2325_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_fir_3_val_2_reg_3684 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2877_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal t_V_5_reg_3689 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_enable_reg_pp0_iter37 : STD_LOGIC := '0';
    signal hcoeffs_2_load_reg_3694 : STD_LOGIC_VECTOR (20 downto 0);
    signal hcoeffs_1_load_reg_3699 : STD_LOGIC_VECTOR (20 downto 0);
    signal hcoeffs_0_load_reg_3704 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2885_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal t_V_5_1_reg_3709 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2893_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal t_V_5_2_reg_3714 : STD_LOGIC_VECTOR (25 downto 0);
    signal linebuf_val_val_0_0_s_reg_3719 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_0_0_s_reg_3719_pp0_iter39_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_0_1_s_reg_3725 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_0_1_s_reg_3725_pp0_iter39_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_0_2_s_reg_3731 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_0_2_s_reg_3731_pp0_iter39_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_1_0_s_reg_3737 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_1_0_s_reg_3737_pp0_iter39_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_1_1_s_reg_3743 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_1_1_s_reg_3743_pp0_iter39_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_1_2_s_reg_3749 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_1_2_s_reg_3749_pp0_iter39_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_2_0_s_reg_3755 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_2_0_s_reg_3755_pp0_iter39_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_2_1_s_reg_3761 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_2_1_s_reg_3761_pp0_iter39_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_2_2_s_reg_3767 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_2_2_s_reg_3767_pp0_iter39_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_3_0_s_reg_3773 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_3_0_s_reg_3773_pp0_iter39_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_3_1_s_reg_3779 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_3_1_s_reg_3779_pp0_iter39_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_3_2_s_reg_3785 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_3_2_s_reg_3785_pp0_iter39_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2918_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal t_V_5_0_3_reg_3791 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_enable_reg_pp0_iter38 : STD_LOGIC := '0';
    signal grp_fu_2943_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal t_V_5_1_3_reg_3796 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_2968_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal t_V_5_2_3_reg_3801 : STD_LOGIC_VECTOR (29 downto 0);
    signal vcoeffs_3_load_reg_3826 : STD_LOGIC_VECTOR (16 downto 0);
    signal vcoeffs_2_load_reg_3831 : STD_LOGIC_VECTOR (20 downto 0);
    signal vcoeffs_1_load_reg_3836 : STD_LOGIC_VECTOR (20 downto 0);
    signal vcoeffs_0_load_reg_3841 : STD_LOGIC_VECTOR (16 downto 0);
    signal vcoeffs_0_load_reg_3841_pp0_iter40_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal v_fir_3_val_2_load_reg_3846 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_out_0_val_1_1_1_reg_3851 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_out_0_val_0_1_1_reg_3856 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2994_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal t_V_7_0_2_reg_3861 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_enable_reg_pp0_iter40 : STD_LOGIC := '0';
    signal grp_fu_3020_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal t_V_7_1_2_reg_3866 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_3046_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal t_V_7_2_2_reg_3871 : STD_LOGIC_VECTOR (29 downto 0);
    signal pix_out_val_0_1_sr_cast_fu_1065_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_out_val_0_1_reg_3876 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_out_val_1_1_sr_cast_fu_1070_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_out_val_1_1_reg_3881 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_64_sr_cast_fu_1075_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_64_reg_3886 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter35 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter36_state87 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter39 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter41 : STD_LOGIC := '0';
    signal linebuf_val_val_0_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_0_0_ce0 : STD_LOGIC;
    signal linebuf_val_val_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_0_0_ce1 : STD_LOGIC;
    signal linebuf_val_val_0_0_we1 : STD_LOGIC;
    signal linebuf_val_val_0_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_0_1_ce0 : STD_LOGIC;
    signal linebuf_val_val_0_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_0_1_ce1 : STD_LOGIC;
    signal linebuf_val_val_0_1_we1 : STD_LOGIC;
    signal linebuf_val_val_0_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_0_2_ce0 : STD_LOGIC;
    signal linebuf_val_val_0_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_0_2_ce1 : STD_LOGIC;
    signal linebuf_val_val_0_2_we1 : STD_LOGIC;
    signal linebuf_val_val_1_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_1_0_ce0 : STD_LOGIC;
    signal linebuf_val_val_1_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_1_0_ce1 : STD_LOGIC;
    signal linebuf_val_val_1_0_we1 : STD_LOGIC;
    signal linebuf_val_val_1_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_1_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_1_1_ce0 : STD_LOGIC;
    signal linebuf_val_val_1_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_1_1_ce1 : STD_LOGIC;
    signal linebuf_val_val_1_1_we1 : STD_LOGIC;
    signal linebuf_val_val_1_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_1_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_1_2_ce0 : STD_LOGIC;
    signal linebuf_val_val_1_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_1_2_ce1 : STD_LOGIC;
    signal linebuf_val_val_1_2_we1 : STD_LOGIC;
    signal linebuf_val_val_1_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_2_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_2_0_ce0 : STD_LOGIC;
    signal linebuf_val_val_2_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_2_0_ce1 : STD_LOGIC;
    signal linebuf_val_val_2_0_we1 : STD_LOGIC;
    signal linebuf_val_val_2_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_2_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_2_1_ce0 : STD_LOGIC;
    signal linebuf_val_val_2_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_2_1_ce1 : STD_LOGIC;
    signal linebuf_val_val_2_1_we1 : STD_LOGIC;
    signal linebuf_val_val_2_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_2_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_2_2_ce0 : STD_LOGIC;
    signal linebuf_val_val_2_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_2_2_ce1 : STD_LOGIC;
    signal linebuf_val_val_2_2_we1 : STD_LOGIC;
    signal linebuf_val_val_2_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_3_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_3_0_ce0 : STD_LOGIC;
    signal linebuf_val_val_3_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_3_0_ce1 : STD_LOGIC;
    signal linebuf_val_val_3_0_we1 : STD_LOGIC;
    signal linebuf_val_val_3_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_3_1_ce0 : STD_LOGIC;
    signal linebuf_val_val_3_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_3_1_ce1 : STD_LOGIC;
    signal linebuf_val_val_3_1_we1 : STD_LOGIC;
    signal linebuf_val_val_3_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_val_val_3_2_ce0 : STD_LOGIC;
    signal linebuf_val_val_3_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal linebuf_val_val_3_2_ce1 : STD_LOGIC;
    signal linebuf_val_val_3_2_we1 : STD_LOGIC;
    signal pix_out_val_0_sr_cast_fu_1047_ap_ready : STD_LOGIC;
    signal pix_out_val_0_sr_cast_fu_1047_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_out_val_1_sr_cast_fu_1053_ap_ready : STD_LOGIC;
    signal pix_out_val_1_sr_cast_fu_1053_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_out_0_val_2_sr_cast_fu_1059_ap_ready : STD_LOGIC;
    signal temp_out_0_val_2_sr_cast_fu_1059_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_out_val_0_1_sr_cast_fu_1065_ap_ready : STD_LOGIC;
    signal pix_out_val_1_1_sr_cast_fu_1070_ap_ready : STD_LOGIC;
    signal tmp_64_sr_cast_fu_1075_ap_ready : STD_LOGIC;
    signal p_Val2_8_reg_829 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state94 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal ap_phi_mux_p_Val2_10_phi_fu_844_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_rows_rw_4_phi_fu_866_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal rows_rw_fu_1581_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter34_rows_rw_4_reg_863 : STD_LOGIC_VECTOR (15 downto 0);
    signal rows_rw_1_fu_1537_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_row_rd_en_3_phi_fu_875_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter34_row_rd_en_3_reg_872 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_s_fu_1542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter6_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter7_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter8_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter9_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter10_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter11_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter12_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter13_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter14_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter15_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter16_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter17_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter18_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter19_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter20_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter21_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter22_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter23_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter24_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter25_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter26_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter27_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter28_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter29_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter30_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter31_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter32_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter33_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter34_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter35_row_wr_en_3_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter6_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter7_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter8_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter9_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter10_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter11_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter12_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter13_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter14_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter15_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter16_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter17_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter18_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter19_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter20_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter21_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter22_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter23_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter24_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter25_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter26_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter27_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter28_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter29_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter30_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter31_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter32_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter33_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter34_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter35_col_rd_en_1_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter6_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter7_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter8_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter9_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter10_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter11_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter12_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter13_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter14_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter15_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter16_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter17_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter18_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter19_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter20_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter21_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter22_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter23_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter24_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter25_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter26_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter27_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter28_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter29_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter30_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter31_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter32_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter33_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter34_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter35_col_wr_en_1_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_temp_out_3_val_2_s_phi_fu_921_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter39_temp_out_3_val_2_s_reg_918 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_temp_out_3_val_1_s_phi_fu_932_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter39_temp_out_3_val_1_s_reg_929 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_temp_out_3_val_0_s_phi_fu_943_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter39_temp_out_3_val_0_s_reg_940 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter39_temp_out_2_val_2_2_reg_951 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter39_temp_out_2_val_1_2_reg_962 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter39_temp_out_2_val_0_2_reg_973 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter39_temp_out_1_val_2_2_reg_984 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter39_temp_out_1_val_1_2_reg_995 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter39_temp_out_1_val_0_2_reg_1006 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter39_temp_out_0_val_0_reg_1017 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter39_temp_out_0_val_1_reg_1027 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter39_temp_out_0_val_2_4_reg_1037 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3054_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_3062_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_3070_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_51_fu_1972_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_2355_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_fu_2428_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal row_wr_en_fu_238 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_rd_en_fu_242 : STD_LOGIC_VECTOR (0 downto 0);
    signal cols_rw_fu_246 : STD_LOGIC_VECTOR (15 downto 0);
    signal cols_rw_1_dcol_2_fu_1634_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal cols_rw_1_dcol_fu_1725_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal drow_fu_250 : STD_LOGIC_VECTOR (15 downto 0);
    signal v_phase_V_1_fu_254 : STD_LOGIC_VECTOR (3 downto 0);
    signal h_phase_acc_V_2_fu_258 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_phase_acc_V_1_fu_1863_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_phase_acc_V_2_fu_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_phase_acc_V_1_fu_2043_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_shreg_val_0_val_3_fu_266 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_shreg_val_0_val_3_7_fu_1900_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_shreg_val_0_val_3_1_fu_270 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_shreg_val_0_val_3_2_fu_274 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_3_val_2_fu_278 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_out_0_val_1_1_fu_282 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_out_0_val_0_1_fu_286 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_2_val_2_1_fu_290 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_2_val_2_fu_2510_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_2_val_1_1_fu_294 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_2_val_1_fu_2503_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_2_val_0_1_fu_298 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_2_val_0_fu_2496_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_1_val_2_1_fu_302 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_1_val_2_fu_2489_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_1_val_1_1_fu_306 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_1_val_1_fu_2482_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_0_val_0_1_fu_310 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_0_val_0_fu_2436_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_0_val_1_1_fu_314 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_0_val_1_fu_2449_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_0_val_2_1_fu_318 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_0_val_2_fu_2462_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_1_val_0_1_fu_322 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_1_val_0_fu_2475_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_shreg_val_0_val_0_fu_326 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_shreg_val_0_val_0_1_fu_330 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_shreg_val_0_val_0_2_fu_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_shreg_val_0_val_0_3_fu_338 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_shreg_val_0_val_0_4_fu_342 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_shreg_val_0_val_0_5_fu_346 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_shreg_val_0_val_1_fu_350 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_shreg_val_0_val_1_1_fu_354 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_shreg_val_0_val_1_2_fu_358 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_shreg_val_0_val_2_fu_362 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_shreg_val_0_val_3_6_fu_1893_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_shreg_val_0_val_2_1_fu_366 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_SEBB1_fu_1886_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_shreg_val_0_val_2_2_fu_370 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_SEBB_fu_1879_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_out_0_val_0_2_fu_374 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_out_0_val_1_2_fu_378 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_fir_3_val_2_1_fu_382 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_out_1_val_0_fu_386 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_out_1_val_1_fu_390 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_out_1_val_2_fu_394 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_out_2_val_0_fu_398 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_out_2_val_1_fu_402 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_out_2_val_2_fu_406 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_out_3_val_0_fu_410 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_out_3_val_1_fu_414 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_out_3_val_2_fu_418 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_56_fu_2724_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_fu_2738_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_58_fu_2752_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal rows_in_cast_fu_1116_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal cols_in_cast_fu_1120_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_fu_1124_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_fu_1124_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1144_p0 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_3_fu_1150_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_3_fu_1150_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1170_p0 : STD_LOGIC_VECTOR (44 downto 0);
    signal rows_in_cast_fu_1116_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_4_fu_1176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cols_in_cast_fu_1120_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_fu_1190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1144_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1170_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_fu_1227_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal ret_V_fu_1235_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_9_fu_1241_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_1251_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_1_fu_1259_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_2_fu_1273_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal ret_V_2_fu_1281_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_s_fu_1287_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_2_fu_1297_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_4_fu_1305_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1337_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_1357_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_fu_1377_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_op_assign_cast_fu_1386_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_3_fu_1405_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_3_fu_1405_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_fu_1418_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_17_fu_1435_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal slt_fu_1463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp2_fu_1445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_1468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1513_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal t_V_1_fu_1517_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_1529_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1513_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_fu_1549_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_25_fu_1558_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_fu_1552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_1567_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_fu_1573_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1529_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cols_rw_4_fu_1613_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_fu_1622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_not1_fu_1617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_1628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_not_fu_1642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1666_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_fu_1676_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_fu_1670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1686_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_4_fu_1658_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1692_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal cols_rw_3_fu_1700_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_fu_1713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_not_fu_1708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_1719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_not_fu_1733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_1757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal slt1_fu_1766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_1770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_fu_1847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_1852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_phase_acc_V_fu_1858_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_phase_V_fu_1828_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal notrhs_fu_1983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp38_demorgan_fu_1994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp13_fu_1989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp14_fu_2000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_2033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_phase_acc_V_fu_2038_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_fu_2097_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_41_fu_2102_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_43_fu_2151_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp3_fu_2161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_2167_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_103_2_fu_2217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_2223_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_48_fu_2273_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp4_fu_2283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_2289_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_42_fu_2109_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_fir_0_val_1_fu_2123_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_fir_0_val_2_fu_2137_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2901_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2926_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2951_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2976_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2985_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3002_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_3011_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3028_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_3037_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2877_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal hcoeffs_3_load_cast_fu_2343_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_2877_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2877_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2885_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2885_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2885_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2893_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2893_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2893_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2901_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_53_fu_2377_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2901_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2910_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_113_0_2_cast_cas_fu_2386_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2910_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2918_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal hcoeffs_0_load_cast_fu_2392_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_2918_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2910_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_2926_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2926_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2935_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2935_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2943_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2943_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2935_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_2951_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2951_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2960_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2960_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2968_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2968_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2960_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_2976_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal vcoeffs_3_load_cast_fu_2806_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_2976_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2976_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2985_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_61_fu_2816_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2985_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2994_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_131_0_2_cast_cas_fu_2826_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2994_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3002_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3002_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3002_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_3011_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_3011_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3020_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_3020_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3028_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3028_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3028_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_3037_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_3037_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3046_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_3046_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3054_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal vcoeffs_0_load_cast_fu_2868_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_3054_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3062_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3062_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3070_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3070_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1144_ap_start : STD_LOGIC;
    signal grp_fu_1144_ap_done : STD_LOGIC;
    signal grp_fu_1170_ap_start : STD_LOGIC;
    signal grp_fu_1170_ap_done : STD_LOGIC;
    signal grp_fu_1513_ce : STD_LOGIC;
    signal grp_fu_1529_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1529_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2877_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_2885_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_2893_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_2901_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2910_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2918_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_2926_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2935_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2943_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_2951_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2960_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2968_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_2976_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_2985_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2994_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3002_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_3011_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3020_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3028_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_3037_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3046_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3054_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_3062_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_3070_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_3_fu_1405_p00 : STD_LOGIC_VECTOR (44 downto 0);
    signal ap_condition_1347 : BOOLEAN;
    signal ap_condition_3347 : BOOLEAN;
    signal ap_condition_633 : BOOLEAN;
    signal ap_condition_1074 : BOOLEAN;
    signal ap_condition_3357 : BOOLEAN;

    component sr_cast IS
    port (
        ap_ready : OUT STD_LOGIC;
        v_V : IN STD_LOGIC_VECTOR (29 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component my_hls_resize_sdivdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (44 downto 0);
        din1 : IN STD_LOGIC_VECTOR (26 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component my_hls_resize_sdiwdI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component my_hls_resize_muxxdS IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component my_hls_resize_macyd2 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component my_hls_resize_maczec IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (20 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component my_hls_resize_macAem IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (20 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component my_hls_resize_macBew IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (29 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component Resize_opr_bicubibkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component Resize_opr_bicubicud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component Resize_opr_bicubidEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component Resize_opr_bicubieOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component Resize_opr_bicubijbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    hcoeffs_3_U : component Resize_opr_bicubibkb
    generic map (
        DataWidth => 17,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hcoeffs_3_address0,
        ce0 => hcoeffs_3_ce0,
        q0 => hcoeffs_3_q0);

    hcoeffs_2_U : component Resize_opr_bicubicud
    generic map (
        DataWidth => 21,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hcoeffs_2_address0,
        ce0 => hcoeffs_2_ce0,
        q0 => hcoeffs_2_q0);

    hcoeffs_1_U : component Resize_opr_bicubidEe
    generic map (
        DataWidth => 21,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hcoeffs_1_address0,
        ce0 => hcoeffs_1_ce0,
        q0 => hcoeffs_1_q0);

    hcoeffs_0_U : component Resize_opr_bicubieOg
    generic map (
        DataWidth => 17,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hcoeffs_0_address0,
        ce0 => hcoeffs_0_ce0,
        q0 => hcoeffs_0_q0);

    vcoeffs_3_U : component Resize_opr_bicubibkb
    generic map (
        DataWidth => 17,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => vcoeffs_3_address0,
        ce0 => vcoeffs_3_ce0,
        q0 => vcoeffs_3_q0);

    vcoeffs_2_U : component Resize_opr_bicubicud
    generic map (
        DataWidth => 21,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => vcoeffs_2_address0,
        ce0 => vcoeffs_2_ce0,
        q0 => vcoeffs_2_q0);

    vcoeffs_1_U : component Resize_opr_bicubidEe
    generic map (
        DataWidth => 21,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => vcoeffs_1_address0,
        ce0 => vcoeffs_1_ce0,
        q0 => vcoeffs_1_q0);

    vcoeffs_0_U : component Resize_opr_bicubieOg
    generic map (
        DataWidth => 17,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => vcoeffs_0_address0,
        ce0 => vcoeffs_0_ce0,
        q0 => vcoeffs_0_q0);

    linebuf_val_val_0_0_U : component Resize_opr_bicubijbC
    generic map (
        DataWidth => 8,
        AddressRange => 3843,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linebuf_val_val_0_0_address0,
        ce0 => linebuf_val_val_0_0_ce0,
        q0 => linebuf_val_val_0_0_q0,
        address1 => linebuf_val_val_0_0_s_reg_3719_pp0_iter39_reg,
        ce1 => linebuf_val_val_0_0_ce1,
        we1 => linebuf_val_val_0_0_we1,
        d1 => temp_out_0_val_0_2_fu_374);

    linebuf_val_val_0_1_U : component Resize_opr_bicubijbC
    generic map (
        DataWidth => 8,
        AddressRange => 3843,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linebuf_val_val_0_1_address0,
        ce0 => linebuf_val_val_0_1_ce0,
        q0 => linebuf_val_val_0_1_q0,
        address1 => linebuf_val_val_0_1_s_reg_3725_pp0_iter39_reg,
        ce1 => linebuf_val_val_0_1_ce1,
        we1 => linebuf_val_val_0_1_we1,
        d1 => temp_out_0_val_1_2_fu_378);

    linebuf_val_val_0_2_U : component Resize_opr_bicubijbC
    generic map (
        DataWidth => 8,
        AddressRange => 3843,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linebuf_val_val_0_2_address0,
        ce0 => linebuf_val_val_0_2_ce0,
        q0 => linebuf_val_val_0_2_q0,
        address1 => linebuf_val_val_0_2_s_reg_3731_pp0_iter39_reg,
        ce1 => linebuf_val_val_0_2_ce1,
        we1 => linebuf_val_val_0_2_we1,
        d1 => v_fir_3_val_2_1_fu_382);

    linebuf_val_val_1_0_U : component Resize_opr_bicubijbC
    generic map (
        DataWidth => 8,
        AddressRange => 3843,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linebuf_val_val_1_0_address0,
        ce0 => linebuf_val_val_1_0_ce0,
        q0 => linebuf_val_val_1_0_q0,
        address1 => linebuf_val_val_1_0_s_reg_3737_pp0_iter39_reg,
        ce1 => linebuf_val_val_1_0_ce1,
        we1 => linebuf_val_val_1_0_we1,
        d1 => linebuf_val_val_1_0_d1);

    linebuf_val_val_1_1_U : component Resize_opr_bicubijbC
    generic map (
        DataWidth => 8,
        AddressRange => 3843,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linebuf_val_val_1_1_address0,
        ce0 => linebuf_val_val_1_1_ce0,
        q0 => linebuf_val_val_1_1_q0,
        address1 => linebuf_val_val_1_1_s_reg_3743_pp0_iter39_reg,
        ce1 => linebuf_val_val_1_1_ce1,
        we1 => linebuf_val_val_1_1_we1,
        d1 => linebuf_val_val_1_1_d1);

    linebuf_val_val_1_2_U : component Resize_opr_bicubijbC
    generic map (
        DataWidth => 8,
        AddressRange => 3843,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linebuf_val_val_1_2_address0,
        ce0 => linebuf_val_val_1_2_ce0,
        q0 => linebuf_val_val_1_2_q0,
        address1 => linebuf_val_val_1_2_s_reg_3749_pp0_iter39_reg,
        ce1 => linebuf_val_val_1_2_ce1,
        we1 => linebuf_val_val_1_2_we1,
        d1 => linebuf_val_val_1_2_d1);

    linebuf_val_val_2_0_U : component Resize_opr_bicubijbC
    generic map (
        DataWidth => 8,
        AddressRange => 3843,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linebuf_val_val_2_0_address0,
        ce0 => linebuf_val_val_2_0_ce0,
        q0 => linebuf_val_val_2_0_q0,
        address1 => linebuf_val_val_2_0_s_reg_3755_pp0_iter39_reg,
        ce1 => linebuf_val_val_2_0_ce1,
        we1 => linebuf_val_val_2_0_we1,
        d1 => linebuf_val_val_2_0_d1);

    linebuf_val_val_2_1_U : component Resize_opr_bicubijbC
    generic map (
        DataWidth => 8,
        AddressRange => 3843,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linebuf_val_val_2_1_address0,
        ce0 => linebuf_val_val_2_1_ce0,
        q0 => linebuf_val_val_2_1_q0,
        address1 => linebuf_val_val_2_1_s_reg_3761_pp0_iter39_reg,
        ce1 => linebuf_val_val_2_1_ce1,
        we1 => linebuf_val_val_2_1_we1,
        d1 => linebuf_val_val_2_1_d1);

    linebuf_val_val_2_2_U : component Resize_opr_bicubijbC
    generic map (
        DataWidth => 8,
        AddressRange => 3843,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linebuf_val_val_2_2_address0,
        ce0 => linebuf_val_val_2_2_ce0,
        q0 => linebuf_val_val_2_2_q0,
        address1 => linebuf_val_val_2_2_s_reg_3767_pp0_iter39_reg,
        ce1 => linebuf_val_val_2_2_ce1,
        we1 => linebuf_val_val_2_2_we1,
        d1 => linebuf_val_val_2_2_d1);

    linebuf_val_val_3_0_U : component Resize_opr_bicubijbC
    generic map (
        DataWidth => 8,
        AddressRange => 3843,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linebuf_val_val_3_0_address0,
        ce0 => linebuf_val_val_3_0_ce0,
        q0 => linebuf_val_val_3_0_q0,
        address1 => linebuf_val_val_3_0_s_reg_3773_pp0_iter39_reg,
        ce1 => linebuf_val_val_3_0_ce1,
        we1 => linebuf_val_val_3_0_we1,
        d1 => tmp_56_fu_2724_p6);

    linebuf_val_val_3_1_U : component Resize_opr_bicubijbC
    generic map (
        DataWidth => 8,
        AddressRange => 3843,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linebuf_val_val_3_1_address0,
        ce0 => linebuf_val_val_3_1_ce0,
        q0 => linebuf_val_val_3_1_q0,
        address1 => linebuf_val_val_3_1_s_reg_3779_pp0_iter39_reg,
        ce1 => linebuf_val_val_3_1_ce1,
        we1 => linebuf_val_val_3_1_we1,
        d1 => tmp_57_fu_2738_p6);

    linebuf_val_val_3_2_U : component Resize_opr_bicubijbC
    generic map (
        DataWidth => 8,
        AddressRange => 3843,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linebuf_val_val_3_2_address0,
        ce0 => linebuf_val_val_3_2_ce0,
        q0 => linebuf_val_val_3_2_q0,
        address1 => linebuf_val_val_3_2_s_reg_3785_pp0_iter39_reg,
        ce1 => linebuf_val_val_3_2_ce1,
        we1 => linebuf_val_val_3_2_we1,
        d1 => tmp_58_fu_2752_p6);

    pix_out_val_0_sr_cast_fu_1047 : component sr_cast
    port map (
        ap_ready => pix_out_val_0_sr_cast_fu_1047_ap_ready,
        v_V => t_V_5_0_3_reg_3791,
        ap_return => pix_out_val_0_sr_cast_fu_1047_ap_return);

    pix_out_val_1_sr_cast_fu_1053 : component sr_cast
    port map (
        ap_ready => pix_out_val_1_sr_cast_fu_1053_ap_ready,
        v_V => t_V_5_1_3_reg_3796,
        ap_return => pix_out_val_1_sr_cast_fu_1053_ap_return);

    temp_out_0_val_2_sr_cast_fu_1059 : component sr_cast
    port map (
        ap_ready => temp_out_0_val_2_sr_cast_fu_1059_ap_ready,
        v_V => t_V_5_2_3_reg_3801,
        ap_return => temp_out_0_val_2_sr_cast_fu_1059_ap_return);

    pix_out_val_0_1_sr_cast_fu_1065 : component sr_cast
    port map (
        ap_ready => pix_out_val_0_1_sr_cast_fu_1065_ap_ready,
        v_V => grp_fu_3054_p3,
        ap_return => pix_out_val_0_1_sr_cast_fu_1065_ap_return);

    pix_out_val_1_1_sr_cast_fu_1070 : component sr_cast
    port map (
        ap_ready => pix_out_val_1_1_sr_cast_fu_1070_ap_ready,
        v_V => grp_fu_3062_p3,
        ap_return => pix_out_val_1_1_sr_cast_fu_1070_ap_return);

    tmp_64_sr_cast_fu_1075 : component sr_cast
    port map (
        ap_ready => tmp_64_sr_cast_fu_1075_ap_ready,
        v_V => grp_fu_3070_p3,
        ap_return => tmp_64_sr_cast_fu_1075_ap_return);

    my_hls_resize_sdivdy_U20 : component my_hls_resize_sdivdy
    generic map (
        ID => 1,
        NUM_STAGE => 49,
        din0_WIDTH => 45,
        din1_WIDTH => 27,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_1144_ap_start,
        done => grp_fu_1144_ap_done,
        din0 => grp_fu_1144_p0,
        din1 => tmp_1_fu_1124_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_1144_p2);

    my_hls_resize_sdivdy_U21 : component my_hls_resize_sdivdy
    generic map (
        ID => 1,
        NUM_STAGE => 49,
        din0_WIDTH => 45,
        din1_WIDTH => 27,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_1170_ap_start,
        done => grp_fu_1170_ap_done,
        din0 => grp_fu_1170_p0,
        din1 => tmp_3_fu_1150_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_1170_p2);

    my_hls_resize_sdiwdI_U22 : component my_hls_resize_sdiwdI
    generic map (
        ID => 1,
        NUM_STAGE => 35,
        din0_WIDTH => 31,
        din1_WIDTH => 32,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1513_p0,
        din1 => row_ratio_V_reg_3408,
        ce => grp_fu_1513_ce,
        dout => grp_fu_1513_p2);

    my_hls_resize_sdiwdI_U23 : component my_hls_resize_sdiwdI
    generic map (
        ID => 1,
        NUM_STAGE => 35,
        din0_WIDTH => 31,
        din1_WIDTH => 32,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1529_p0,
        din1 => col_ratio_V_reg_3413,
        ce => grp_fu_1529_ce,
        dout => grp_fu_1529_p2);

    my_hls_resize_muxxdS_U24 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => h_shreg_val_0_val_0_fu_326,
        din1 => h_shreg_val_0_val_0_3_fu_338,
        din2 => h_shreg_val_0_val_1_fu_350,
        din3 => h_shreg_val_0_val_2_fu_362,
        din4 => tmp_41_fu_2102_p3,
        dout => tmp_42_fu_2109_p6);

    my_hls_resize_muxxdS_U25 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => h_shreg_val_0_val_0_1_fu_330,
        din1 => h_shreg_val_0_val_0_4_fu_342,
        din2 => h_shreg_val_0_val_1_1_fu_354,
        din3 => h_shreg_val_0_val_2_1_fu_366,
        din4 => tmp_41_fu_2102_p3,
        dout => h_fir_0_val_1_fu_2123_p6);

    my_hls_resize_muxxdS_U26 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => h_shreg_val_0_val_0_2_fu_334,
        din1 => h_shreg_val_0_val_0_5_fu_346,
        din2 => h_shreg_val_0_val_1_2_fu_358,
        din3 => h_shreg_val_0_val_2_2_fu_370,
        din4 => tmp_41_fu_2102_p3,
        dout => h_fir_0_val_2_fu_2137_p6);

    my_hls_resize_muxxdS_U27 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => h_shreg_val_0_val_0_fu_326,
        din1 => h_shreg_val_0_val_0_3_fu_338,
        din2 => h_shreg_val_0_val_1_fu_350,
        din3 => h_shreg_val_0_val_2_fu_362,
        din4 => tmp_44_fu_2167_p3,
        dout => tmp_45_fu_2175_p6);

    my_hls_resize_muxxdS_U28 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => h_shreg_val_0_val_0_1_fu_330,
        din1 => h_shreg_val_0_val_0_4_fu_342,
        din2 => h_shreg_val_0_val_1_1_fu_354,
        din3 => h_shreg_val_0_val_2_1_fu_366,
        din4 => tmp_44_fu_2167_p3,
        dout => h_fir_1_val_1_fu_2189_p6);

    my_hls_resize_muxxdS_U29 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => h_shreg_val_0_val_0_2_fu_334,
        din1 => h_shreg_val_0_val_0_5_fu_346,
        din2 => h_shreg_val_0_val_1_2_fu_358,
        din3 => h_shreg_val_0_val_2_2_fu_370,
        din4 => tmp_44_fu_2167_p3,
        dout => h_fir_1_val_2_fu_2203_p6);

    my_hls_resize_muxxdS_U30 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => h_shreg_val_0_val_0_fu_326,
        din1 => h_shreg_val_0_val_0_3_fu_338,
        din2 => h_shreg_val_0_val_1_fu_350,
        din3 => h_shreg_val_0_val_2_fu_362,
        din4 => tmp_46_fu_2223_p3,
        dout => tmp_47_fu_2231_p6);

    my_hls_resize_muxxdS_U31 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => h_shreg_val_0_val_0_1_fu_330,
        din1 => h_shreg_val_0_val_0_4_fu_342,
        din2 => h_shreg_val_0_val_1_1_fu_354,
        din3 => h_shreg_val_0_val_2_1_fu_366,
        din4 => tmp_46_fu_2223_p3,
        dout => h_fir_2_val_1_fu_2245_p6);

    my_hls_resize_muxxdS_U32 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => h_shreg_val_0_val_0_2_fu_334,
        din1 => h_shreg_val_0_val_0_5_fu_346,
        din2 => h_shreg_val_0_val_1_2_fu_358,
        din3 => h_shreg_val_0_val_2_2_fu_370,
        din4 => tmp_46_fu_2223_p3,
        dout => h_fir_2_val_2_fu_2259_p6);

    my_hls_resize_muxxdS_U33 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => h_shreg_val_0_val_0_fu_326,
        din1 => h_shreg_val_0_val_0_3_fu_338,
        din2 => h_shreg_val_0_val_1_fu_350,
        din3 => h_shreg_val_0_val_2_fu_362,
        din4 => tmp_49_fu_2289_p3,
        dout => tmp_50_fu_2297_p6);

    my_hls_resize_muxxdS_U34 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => h_shreg_val_0_val_0_1_fu_330,
        din1 => h_shreg_val_0_val_0_4_fu_342,
        din2 => h_shreg_val_0_val_1_1_fu_354,
        din3 => h_shreg_val_0_val_2_1_fu_366,
        din4 => tmp_49_fu_2289_p3,
        dout => h_fir_3_val_1_fu_2311_p6);

    my_hls_resize_muxxdS_U35 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => h_shreg_val_0_val_0_2_fu_334,
        din1 => h_shreg_val_0_val_0_5_fu_346,
        din2 => h_shreg_val_0_val_1_2_fu_358,
        din3 => h_shreg_val_0_val_2_2_fu_370,
        din4 => tmp_49_fu_2289_p3,
        dout => h_fir_3_val_2_fu_2325_p6);

    my_hls_resize_muxxdS_U36 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4,
        din1 => ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4,
        din2 => ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4,
        din3 => ap_phi_mux_temp_out_3_val_0_s_phi_fu_943_p4,
        din4 => tmp_118_0_t_reg_3531,
        dout => v_fir_0_val_0_fu_2436_p6);

    my_hls_resize_muxxdS_U37 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4,
        din1 => ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4,
        din2 => ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4,
        din3 => ap_phi_mux_temp_out_3_val_1_s_phi_fu_932_p4,
        din4 => tmp_118_0_t_reg_3531,
        dout => v_fir_0_val_1_fu_2449_p6);

    my_hls_resize_muxxdS_U38 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4,
        din1 => ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4,
        din2 => ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4,
        din3 => ap_phi_mux_temp_out_3_val_2_s_phi_fu_921_p4,
        din4 => tmp_118_0_t_reg_3531,
        dout => v_fir_0_val_2_fu_2462_p6);

    my_hls_resize_muxxdS_U39 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => temp_out_0_val_0_2_fu_374,
        din1 => temp_out_1_val_0_fu_386,
        din2 => temp_out_2_val_0_fu_398,
        din3 => temp_out_3_val_0_fu_410,
        din4 => tmp_118_0_t_reg_3531,
        dout => tmp_56_fu_2724_p6);

    my_hls_resize_muxxdS_U40 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => temp_out_0_val_1_2_fu_378,
        din1 => temp_out_1_val_1_fu_390,
        din2 => temp_out_2_val_1_fu_402,
        din3 => temp_out_3_val_1_fu_414,
        din4 => tmp_118_0_t_reg_3531,
        dout => tmp_57_fu_2738_p6);

    my_hls_resize_muxxdS_U41 : component my_hls_resize_muxxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => v_fir_3_val_2_1_fu_382,
        din1 => temp_out_1_val_2_fu_394,
        din2 => temp_out_2_val_2_fu_406,
        din3 => temp_out_3_val_2_fu_418,
        din4 => tmp_118_0_t_reg_3531,
        dout => tmp_58_fu_2752_p6);

    my_hls_resize_macyd2_U42 : component my_hls_resize_macyd2
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 8,
        din2_WIDTH => 21,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2877_p0,
        din1 => grp_fu_2877_p1,
        din2 => grp_fu_2877_p2,
        dout => grp_fu_2877_p3);

    my_hls_resize_macyd2_U43 : component my_hls_resize_macyd2
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 8,
        din2_WIDTH => 21,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2885_p0,
        din1 => grp_fu_2885_p1,
        din2 => grp_fu_2885_p2,
        dout => grp_fu_2885_p3);

    my_hls_resize_macyd2_U44 : component my_hls_resize_macyd2
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 8,
        din2_WIDTH => 21,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2893_p0,
        din1 => grp_fu_2893_p1,
        din2 => grp_fu_2893_p2,
        dout => grp_fu_2893_p3);

    my_hls_resize_maczec_U45 : component my_hls_resize_maczec
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 29)
    port map (
        din0 => grp_fu_2901_p0,
        din1 => grp_fu_2901_p1,
        din2 => t_V_5_reg_3689,
        dout => grp_fu_2901_p3);

    my_hls_resize_macAem_U46 : component my_hls_resize_macAem
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 8,
        din2_WIDTH => 29,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_2910_p0,
        din1 => grp_fu_2910_p1,
        din2 => grp_fu_2901_p3,
        dout => grp_fu_2910_p3);

    my_hls_resize_macBew_U47 : component my_hls_resize_macBew
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 8,
        din2_WIDTH => 30,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_2918_p0,
        din1 => grp_fu_2918_p1,
        din2 => grp_fu_2910_p3,
        dout => grp_fu_2918_p3);

    my_hls_resize_maczec_U48 : component my_hls_resize_maczec
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 29)
    port map (
        din0 => grp_fu_2926_p0,
        din1 => grp_fu_2926_p1,
        din2 => t_V_5_1_reg_3709,
        dout => grp_fu_2926_p3);

    my_hls_resize_macAem_U49 : component my_hls_resize_macAem
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 8,
        din2_WIDTH => 29,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_2935_p0,
        din1 => grp_fu_2935_p1,
        din2 => grp_fu_2926_p3,
        dout => grp_fu_2935_p3);

    my_hls_resize_macBew_U50 : component my_hls_resize_macBew
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 8,
        din2_WIDTH => 30,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_2943_p0,
        din1 => grp_fu_2943_p1,
        din2 => grp_fu_2935_p3,
        dout => grp_fu_2943_p3);

    my_hls_resize_maczec_U51 : component my_hls_resize_maczec
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 29)
    port map (
        din0 => grp_fu_2951_p0,
        din1 => grp_fu_2951_p1,
        din2 => t_V_5_2_reg_3714,
        dout => grp_fu_2951_p3);

    my_hls_resize_macAem_U52 : component my_hls_resize_macAem
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 8,
        din2_WIDTH => 29,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_2960_p0,
        din1 => grp_fu_2960_p1,
        din2 => grp_fu_2951_p3,
        dout => grp_fu_2960_p3);

    my_hls_resize_macBew_U53 : component my_hls_resize_macBew
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 8,
        din2_WIDTH => 30,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_2968_p0,
        din1 => grp_fu_2968_p1,
        din2 => grp_fu_2960_p3,
        dout => grp_fu_2968_p3);

    my_hls_resize_macyd2_U54 : component my_hls_resize_macyd2
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 8,
        din2_WIDTH => 21,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2976_p0,
        din1 => grp_fu_2976_p1,
        din2 => grp_fu_2976_p2,
        dout => grp_fu_2976_p3);

    my_hls_resize_maczec_U55 : component my_hls_resize_maczec
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 29)
    port map (
        din0 => grp_fu_2985_p0,
        din1 => grp_fu_2985_p1,
        din2 => grp_fu_2976_p3,
        dout => grp_fu_2985_p3);

    my_hls_resize_macAem_U56 : component my_hls_resize_macAem
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 8,
        din2_WIDTH => 29,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_2994_p0,
        din1 => grp_fu_2994_p1,
        din2 => grp_fu_2985_p3,
        dout => grp_fu_2994_p3);

    my_hls_resize_macyd2_U57 : component my_hls_resize_macyd2
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 8,
        din2_WIDTH => 21,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_3002_p0,
        din1 => grp_fu_3002_p1,
        din2 => grp_fu_3002_p2,
        dout => grp_fu_3002_p3);

    my_hls_resize_maczec_U58 : component my_hls_resize_maczec
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 29)
    port map (
        din0 => grp_fu_3011_p0,
        din1 => grp_fu_3011_p1,
        din2 => grp_fu_3002_p3,
        dout => grp_fu_3011_p3);

    my_hls_resize_macAem_U59 : component my_hls_resize_macAem
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 8,
        din2_WIDTH => 29,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_3020_p0,
        din1 => grp_fu_3020_p1,
        din2 => grp_fu_3011_p3,
        dout => grp_fu_3020_p3);

    my_hls_resize_macyd2_U60 : component my_hls_resize_macyd2
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 8,
        din2_WIDTH => 21,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_3028_p0,
        din1 => grp_fu_3028_p1,
        din2 => grp_fu_3028_p2,
        dout => grp_fu_3028_p3);

    my_hls_resize_maczec_U61 : component my_hls_resize_maczec
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 29)
    port map (
        din0 => grp_fu_3037_p0,
        din1 => grp_fu_3037_p1,
        din2 => grp_fu_3028_p3,
        dout => grp_fu_3037_p3);

    my_hls_resize_macAem_U62 : component my_hls_resize_macAem
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 8,
        din2_WIDTH => 29,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_3046_p0,
        din1 => grp_fu_3046_p1,
        din2 => grp_fu_3037_p3,
        dout => grp_fu_3046_p3);

    my_hls_resize_macBew_U63 : component my_hls_resize_macBew
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 8,
        din2_WIDTH => 30,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_3054_p0,
        din1 => grp_fu_3054_p1,
        din2 => t_V_7_0_2_reg_3861,
        dout => grp_fu_3054_p3);

    my_hls_resize_macBew_U64 : component my_hls_resize_macBew
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 8,
        din2_WIDTH => 30,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_3062_p0,
        din1 => grp_fu_3062_p1,
        din2 => t_V_7_1_2_reg_3866,
        dout => grp_fu_3062_p3);

    my_hls_resize_macBew_U65 : component my_hls_resize_macBew
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 8,
        din2_WIDTH => 30,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_3070_p0,
        din1 => grp_fu_3070_p1,
        din2 => t_V_7_2_2_reg_3871,
        dout => grp_fu_3070_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_fu_1496_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state50) and (tmp_13_fu_1390_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter34 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter35 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter36 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter37 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter36_state87)) then 
                        ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter35;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter38 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter39 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter40 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter41 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter42 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state50) and (tmp_13_fu_1390_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter42 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter35_col_rd_en_1_reg_894_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1))) then
                if (((icmp1_reg_3460 = ap_const_lv1_0) and (tmp_20_reg_3557_pp0_iter33_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter35_col_rd_en_1_reg_894 <= not_or_cond1_fu_1648_p2;
                elsif (((tmp_20_reg_3557_pp0_iter33_reg = ap_const_lv1_1) and (icmp1_reg_3460 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter35_col_rd_en_1_reg_894 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter35_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter34_col_rd_en_1_reg_894;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter35_col_wr_en_1_reg_906_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1))) then
                if (((icmp1_reg_3460 = ap_const_lv1_0) and (tmp_20_reg_3557_pp0_iter33_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter35_col_wr_en_1_reg_906 <= ap_const_lv1_1;
                elsif (((tmp_20_reg_3557_pp0_iter33_reg = ap_const_lv1_1) and (icmp1_reg_3460 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter35_col_wr_en_1_reg_906 <= not_or_cond_fu_1739_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter35_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter34_col_wr_en_1_reg_906;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter35_row_wr_en_3_reg_883_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1))) then
                if ((ap_const_boolean_1 = ap_condition_1074)) then 
                    ap_phi_reg_pp0_iter35_row_wr_en_3_reg_883 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_condition_633)) then 
                    ap_phi_reg_pp0_iter35_row_wr_en_3_reg_883 <= not_1_fu_1589_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter35_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter34_row_wr_en_3_reg_883;
                end if;
            end if; 
        end if;
    end process;

    cols_rw_fu_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1) and (tmp_20_reg_3557_pp0_iter33_reg = ap_const_lv1_1) and (icmp1_reg_3460 = ap_const_lv1_1))) then 
                cols_rw_fu_246 <= cols_rw_1_dcol_fu_1725_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1) and (icmp1_reg_3460 = ap_const_lv1_0) and (tmp_20_reg_3557_pp0_iter33_reg = ap_const_lv1_1))) then 
                cols_rw_fu_246 <= cols_rw_1_dcol_2_fu_1634_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                cols_rw_fu_246 <= ap_const_lv16_FFFF;
            end if; 
        end if;
    end process;

    drow_fu_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1) and (tmp_22_reg_3566_pp0_iter33_reg = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter33_reg = ap_const_lv1_1))) then 
                drow_fu_250 <= ap_phi_mux_rows_rw_4_phi_fu_866_p4;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                drow_fu_250 <= ap_const_lv16_FFFF;
            end if; 
        end if;
    end process;

    h_shreg_val_0_val_2_1_fu_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_3357)) then
                if ((or_cond3_reg_3603 = ap_const_lv1_1)) then 
                    h_shreg_val_0_val_2_1_fu_366 <= p_src_data_stream_1_V_dout;
                elsif (((or_cond3_reg_3603 = ap_const_lv1_0) and (or_cond4_reg_3607 = ap_const_lv1_1))) then 
                    h_shreg_val_0_val_2_1_fu_366 <= h_shreg_val_0_val_3_1_fu_270;
                elsif (((or_cond4_reg_3607 = ap_const_lv1_0) and (or_cond3_reg_3603 = ap_const_lv1_0))) then 
                    h_shreg_val_0_val_2_1_fu_366 <= sel_SEBB1_fu_1886_p3;
                end if;
            end if; 
        end if;
    end process;

    h_shreg_val_0_val_2_2_fu_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_3357)) then
                if ((or_cond3_reg_3603 = ap_const_lv1_1)) then 
                    h_shreg_val_0_val_2_2_fu_370 <= p_src_data_stream_2_V_dout;
                elsif (((or_cond3_reg_3603 = ap_const_lv1_0) and (or_cond4_reg_3607 = ap_const_lv1_1))) then 
                    h_shreg_val_0_val_2_2_fu_370 <= h_shreg_val_0_val_3_2_fu_274;
                elsif (((or_cond4_reg_3607 = ap_const_lv1_0) and (or_cond3_reg_3603 = ap_const_lv1_0))) then 
                    h_shreg_val_0_val_2_2_fu_370 <= sel_SEBB_fu_1879_p3;
                end if;
            end if; 
        end if;
    end process;

    h_shreg_val_0_val_2_fu_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_3357)) then
                if ((or_cond3_reg_3603 = ap_const_lv1_1)) then 
                    h_shreg_val_0_val_2_fu_362 <= p_src_data_stream_0_V_dout;
                elsif (((or_cond3_reg_3603 = ap_const_lv1_0) and (or_cond4_reg_3607 = ap_const_lv1_1))) then 
                    h_shreg_val_0_val_2_fu_362 <= h_shreg_val_0_val_3_fu_266;
                elsif (((or_cond4_reg_3607 = ap_const_lv1_0) and (or_cond3_reg_3603 = ap_const_lv1_0))) then 
                    h_shreg_val_0_val_2_fu_362 <= h_shreg_val_0_val_3_6_fu_1893_p3;
                end if;
            end if; 
        end if;
    end process;

    h_shreg_val_0_val_3_fu_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_3357)) then
                if ((or_cond3_reg_3603 = ap_const_lv1_1)) then 
                    h_shreg_val_0_val_3_fu_266 <= p_src_data_stream_0_V_dout;
                elsif (((or_cond4_reg_3607 = ap_const_lv1_0) and (or_cond3_reg_3603 = ap_const_lv1_0))) then 
                    h_shreg_val_0_val_3_fu_266 <= h_shreg_val_0_val_3_7_fu_1900_p3;
                end if;
            end if; 
        end if;
    end process;

    p_Val2_10_reg_840_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_reg_3557 = ap_const_lv1_1))) then 
                p_Val2_10_reg_840 <= col_reg_3561;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state50) and (tmp_13_fu_1390_p2 = ap_const_lv1_1))) then 
                p_Val2_10_reg_840 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    p_Val2_8_reg_829_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
                p_Val2_8_reg_829 <= row_reg_3479;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
                p_Val2_8_reg_829 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    r_V_4_reg_852_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1) and (tmp_20_reg_3557_pp0_iter33_reg = ap_const_lv1_1))) then 
                r_V_4_reg_852 <= next_mul_fu_1605_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state50) and (tmp_13_fu_1390_p2 = ap_const_lv1_1))) then 
                r_V_4_reg_852 <= ap_const_lv45_0;
            end if; 
        end if;
    end process;

    row_rd_en_3_reg_872_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1))) then
                if ((ap_const_boolean_1 = ap_condition_1074)) then 
                    row_rd_en_3_reg_872 <= not_s_fu_1542_p2;
                elsif ((ap_const_boolean_1 = ap_condition_633)) then 
                    row_rd_en_3_reg_872 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    row_rd_en_3_reg_872 <= ap_phi_reg_pp0_iter34_row_rd_en_3_reg_872;
                end if;
            end if; 
        end if;
    end process;

    v_phase_acc_V_2_fu_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1) and (tmp_22_reg_3566_pp0_iter36_reg = ap_const_lv1_1))) then 
                v_phase_acc_V_2_fu_262 <= v_phase_acc_V_1_fu_2043_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                v_phase_acc_V_2_fu_262 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state49)) then
                addconv_reg_3445 <= addconv_fu_1331_p2;
                col_ratio_V_reg_3413 <= col_ratio_V_fu_1223_p1;
                cols_cast_reg_3434 <= cols_cast_fu_1322_p1;
                h_phase_acc_V_4_reg_3423 <= h_phase_acc_V_4_fu_1311_p3;
                icmp1_reg_3460 <= icmp1_fu_1367_p2;
                icmp_reg_3450 <= icmp_fu_1347_p2;
                row_rate_reg_3418 <= row_rate_fu_1265_p3;
                row_ratio_V_reg_3408 <= row_ratio_V_fu_1219_p1;
                rows_cast_cast_reg_3429 <= rows_cast_cast_fu_1319_p1;
                tmp_10_reg_3440 <= tmp_10_fu_1325_p2;
                tmp_18_cast_reg_3455 <= tmp_18_cast_fu_1353_p1;
                tmp_20_cast_reg_3465 <= tmp_20_cast_fu_1373_p1;
                tmp_21_cast_cast_reg_3470 <= tmp_21_cast_cast_fu_1382_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter10_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter9_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter10_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter9_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter10_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter9_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter11_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter10_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter11_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter10_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter11_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter10_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter12_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter11_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter12_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter11_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter12_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter11_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter13_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter12_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter13_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter12_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter13_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter12_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter14_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter13_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter14_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter13_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter14_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter13_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter15_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter14_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter15_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter14_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter15_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter14_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter16_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter15_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter16_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter15_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter16_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter15_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter17_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter16_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter17_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter16_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter17_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter16_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter18_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter17_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter18_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter17_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter18_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter17_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter19_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter18_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter19_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter18_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter19_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter18_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter0_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter1_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter0_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter1_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter0_row_wr_en_3_reg_883;
                col_reg_3561 <= col_fu_1501_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter20_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter19_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter20_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter19_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter20_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter19_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter21_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter20_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter21_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter20_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter21_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter20_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter22_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter21_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter22_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter21_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter22_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter21_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter22 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter23_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter22_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter23_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter22_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter23_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter22_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter23 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter24_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter23_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter24_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter23_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter24_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter23_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter25_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter24_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter25_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter24_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter25_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter24_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter25 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter26_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter25_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter26_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter25_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter26_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter25_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter26 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter27_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter26_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter27_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter26_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter27_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter26_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter28_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter27_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter28_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter27_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter28_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter27_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter29_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter28_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter29_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter28_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter29_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter28_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter1_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter2_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter1_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter2_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter1_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter30_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter29_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter30_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter29_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter30_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter29_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter31_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter30_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter31_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter30_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter31_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter30_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter32_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter31_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter32_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter31_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter32_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter31_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter33_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter32_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter33_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter32_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter33_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter32_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter34_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter33_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter34_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter33_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter34_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter33_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter2_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter3_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter2_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter3_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter2_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter4_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter3_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter4_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter3_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter4_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter3_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter5_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter4_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter5_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter4_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter5_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter4_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter6_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter5_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter6_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter5_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter6_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter5_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter7_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter6_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter7_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter6_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter7_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter6_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter8_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter7_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter8_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter7_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter8_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter7_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter9_col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter8_col_rd_en_1_reg_894;
                ap_phi_reg_pp0_iter9_col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter8_col_wr_en_1_reg_906;
                ap_phi_reg_pp0_iter9_row_wr_en_3_reg_883 <= ap_phi_reg_pp0_iter8_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_col_wr_en_1_phi_fu_910_p4 = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter34_reg = ap_const_lv1_1))) then
                brmerge2_reg_3611 <= brmerge2_fu_1784_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                brmerge2_reg_3611_pp0_iter36_reg <= brmerge2_reg_3611;
                brmerge2_reg_3611_pp0_iter37_reg <= brmerge2_reg_3611_pp0_iter36_reg;
                brmerge2_reg_3611_pp0_iter38_reg <= brmerge2_reg_3611_pp0_iter37_reg;
                brmerge4_reg_3640_pp0_iter37_reg <= brmerge4_reg_3640;
                brmerge4_reg_3640_pp0_iter38_reg <= brmerge4_reg_3640_pp0_iter37_reg;
                brmerge4_reg_3640_pp0_iter39_reg <= brmerge4_reg_3640_pp0_iter38_reg;
                brmerge4_reg_3640_pp0_iter40_reg <= brmerge4_reg_3640_pp0_iter39_reg;
                brmerge4_reg_3640_pp0_iter41_reg <= brmerge4_reg_3640_pp0_iter40_reg;
                col_wr_en_1_reg_906_pp0_iter36_reg <= col_wr_en_1_reg_906;
                col_wr_en_1_reg_906_pp0_iter37_reg <= col_wr_en_1_reg_906_pp0_iter36_reg;
                col_wr_en_1_reg_906_pp0_iter38_reg <= col_wr_en_1_reg_906_pp0_iter37_reg;
                    i_op_assign_1_cast_reg_3546_pp0_iter10_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter9_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter11_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter10_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter12_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter11_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter13_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter12_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter14_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter13_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter15_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter14_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter16_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter15_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter17_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter16_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter18_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter17_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter19_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter18_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter20_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter19_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter21_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter20_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter22_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter21_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter23_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter22_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter24_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter23_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter25_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter24_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter26_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter25_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter27_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter26_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter28_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter27_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter29_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter28_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter2_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter1_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter30_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter29_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter31_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter30_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter32_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter31_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter33_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter32_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter34_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter33_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter3_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter2_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter4_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter3_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter5_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter4_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter6_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter5_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter7_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter6_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter8_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter7_reg(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter9_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546_pp0_iter8_reg(12 downto 0);
                linebuf_val_val_0_0_s_reg_3719_pp0_iter39_reg <= linebuf_val_val_0_0_s_reg_3719;
                linebuf_val_val_0_1_s_reg_3725_pp0_iter39_reg <= linebuf_val_val_0_1_s_reg_3725;
                linebuf_val_val_0_2_s_reg_3731_pp0_iter39_reg <= linebuf_val_val_0_2_s_reg_3731;
                linebuf_val_val_1_0_s_reg_3737_pp0_iter39_reg <= linebuf_val_val_1_0_s_reg_3737;
                linebuf_val_val_1_1_s_reg_3743_pp0_iter39_reg <= linebuf_val_val_1_1_s_reg_3743;
                linebuf_val_val_1_2_s_reg_3749_pp0_iter39_reg <= linebuf_val_val_1_2_s_reg_3749;
                linebuf_val_val_2_0_s_reg_3755_pp0_iter39_reg <= linebuf_val_val_2_0_s_reg_3755;
                linebuf_val_val_2_1_s_reg_3761_pp0_iter39_reg <= linebuf_val_val_2_1_s_reg_3761;
                linebuf_val_val_2_2_s_reg_3767_pp0_iter39_reg <= linebuf_val_val_2_2_s_reg_3767;
                linebuf_val_val_3_0_s_reg_3773_pp0_iter39_reg <= linebuf_val_val_3_0_s_reg_3773;
                linebuf_val_val_3_1_s_reg_3779_pp0_iter39_reg <= linebuf_val_val_3_1_s_reg_3779;
                linebuf_val_val_3_2_s_reg_3785_pp0_iter39_reg <= linebuf_val_val_3_2_s_reg_3785;
                p_Val2_10_reg_840_pp0_iter10_reg <= p_Val2_10_reg_840_pp0_iter9_reg;
                p_Val2_10_reg_840_pp0_iter11_reg <= p_Val2_10_reg_840_pp0_iter10_reg;
                p_Val2_10_reg_840_pp0_iter12_reg <= p_Val2_10_reg_840_pp0_iter11_reg;
                p_Val2_10_reg_840_pp0_iter13_reg <= p_Val2_10_reg_840_pp0_iter12_reg;
                p_Val2_10_reg_840_pp0_iter14_reg <= p_Val2_10_reg_840_pp0_iter13_reg;
                p_Val2_10_reg_840_pp0_iter15_reg <= p_Val2_10_reg_840_pp0_iter14_reg;
                p_Val2_10_reg_840_pp0_iter16_reg <= p_Val2_10_reg_840_pp0_iter15_reg;
                p_Val2_10_reg_840_pp0_iter17_reg <= p_Val2_10_reg_840_pp0_iter16_reg;
                p_Val2_10_reg_840_pp0_iter18_reg <= p_Val2_10_reg_840_pp0_iter17_reg;
                p_Val2_10_reg_840_pp0_iter19_reg <= p_Val2_10_reg_840_pp0_iter18_reg;
                p_Val2_10_reg_840_pp0_iter20_reg <= p_Val2_10_reg_840_pp0_iter19_reg;
                p_Val2_10_reg_840_pp0_iter21_reg <= p_Val2_10_reg_840_pp0_iter20_reg;
                p_Val2_10_reg_840_pp0_iter22_reg <= p_Val2_10_reg_840_pp0_iter21_reg;
                p_Val2_10_reg_840_pp0_iter23_reg <= p_Val2_10_reg_840_pp0_iter22_reg;
                p_Val2_10_reg_840_pp0_iter24_reg <= p_Val2_10_reg_840_pp0_iter23_reg;
                p_Val2_10_reg_840_pp0_iter25_reg <= p_Val2_10_reg_840_pp0_iter24_reg;
                p_Val2_10_reg_840_pp0_iter26_reg <= p_Val2_10_reg_840_pp0_iter25_reg;
                p_Val2_10_reg_840_pp0_iter27_reg <= p_Val2_10_reg_840_pp0_iter26_reg;
                p_Val2_10_reg_840_pp0_iter28_reg <= p_Val2_10_reg_840_pp0_iter27_reg;
                p_Val2_10_reg_840_pp0_iter29_reg <= p_Val2_10_reg_840_pp0_iter28_reg;
                p_Val2_10_reg_840_pp0_iter2_reg <= p_Val2_10_reg_840_pp0_iter1_reg;
                p_Val2_10_reg_840_pp0_iter30_reg <= p_Val2_10_reg_840_pp0_iter29_reg;
                p_Val2_10_reg_840_pp0_iter31_reg <= p_Val2_10_reg_840_pp0_iter30_reg;
                p_Val2_10_reg_840_pp0_iter32_reg <= p_Val2_10_reg_840_pp0_iter31_reg;
                p_Val2_10_reg_840_pp0_iter33_reg <= p_Val2_10_reg_840_pp0_iter32_reg;
                p_Val2_10_reg_840_pp0_iter34_reg <= p_Val2_10_reg_840_pp0_iter33_reg;
                p_Val2_10_reg_840_pp0_iter35_reg <= p_Val2_10_reg_840_pp0_iter34_reg;
                p_Val2_10_reg_840_pp0_iter36_reg <= p_Val2_10_reg_840_pp0_iter35_reg;
                p_Val2_10_reg_840_pp0_iter37_reg <= p_Val2_10_reg_840_pp0_iter36_reg;
                p_Val2_10_reg_840_pp0_iter3_reg <= p_Val2_10_reg_840_pp0_iter2_reg;
                p_Val2_10_reg_840_pp0_iter4_reg <= p_Val2_10_reg_840_pp0_iter3_reg;
                p_Val2_10_reg_840_pp0_iter5_reg <= p_Val2_10_reg_840_pp0_iter4_reg;
                p_Val2_10_reg_840_pp0_iter6_reg <= p_Val2_10_reg_840_pp0_iter5_reg;
                p_Val2_10_reg_840_pp0_iter7_reg <= p_Val2_10_reg_840_pp0_iter6_reg;
                p_Val2_10_reg_840_pp0_iter8_reg <= p_Val2_10_reg_840_pp0_iter7_reg;
                p_Val2_10_reg_840_pp0_iter9_reg <= p_Val2_10_reg_840_pp0_iter8_reg;
                row_rd_en_3_reg_872_pp0_iter35_reg <= row_rd_en_3_reg_872;
                row_rd_en_3_reg_872_pp0_iter36_reg <= row_rd_en_3_reg_872_pp0_iter35_reg;
                tmp_19_reg_3552_pp0_iter10_reg <= tmp_19_reg_3552_pp0_iter9_reg;
                tmp_19_reg_3552_pp0_iter11_reg <= tmp_19_reg_3552_pp0_iter10_reg;
                tmp_19_reg_3552_pp0_iter12_reg <= tmp_19_reg_3552_pp0_iter11_reg;
                tmp_19_reg_3552_pp0_iter13_reg <= tmp_19_reg_3552_pp0_iter12_reg;
                tmp_19_reg_3552_pp0_iter14_reg <= tmp_19_reg_3552_pp0_iter13_reg;
                tmp_19_reg_3552_pp0_iter15_reg <= tmp_19_reg_3552_pp0_iter14_reg;
                tmp_19_reg_3552_pp0_iter16_reg <= tmp_19_reg_3552_pp0_iter15_reg;
                tmp_19_reg_3552_pp0_iter17_reg <= tmp_19_reg_3552_pp0_iter16_reg;
                tmp_19_reg_3552_pp0_iter18_reg <= tmp_19_reg_3552_pp0_iter17_reg;
                tmp_19_reg_3552_pp0_iter19_reg <= tmp_19_reg_3552_pp0_iter18_reg;
                tmp_19_reg_3552_pp0_iter20_reg <= tmp_19_reg_3552_pp0_iter19_reg;
                tmp_19_reg_3552_pp0_iter21_reg <= tmp_19_reg_3552_pp0_iter20_reg;
                tmp_19_reg_3552_pp0_iter22_reg <= tmp_19_reg_3552_pp0_iter21_reg;
                tmp_19_reg_3552_pp0_iter23_reg <= tmp_19_reg_3552_pp0_iter22_reg;
                tmp_19_reg_3552_pp0_iter24_reg <= tmp_19_reg_3552_pp0_iter23_reg;
                tmp_19_reg_3552_pp0_iter25_reg <= tmp_19_reg_3552_pp0_iter24_reg;
                tmp_19_reg_3552_pp0_iter26_reg <= tmp_19_reg_3552_pp0_iter25_reg;
                tmp_19_reg_3552_pp0_iter27_reg <= tmp_19_reg_3552_pp0_iter26_reg;
                tmp_19_reg_3552_pp0_iter28_reg <= tmp_19_reg_3552_pp0_iter27_reg;
                tmp_19_reg_3552_pp0_iter29_reg <= tmp_19_reg_3552_pp0_iter28_reg;
                tmp_19_reg_3552_pp0_iter2_reg <= tmp_19_reg_3552_pp0_iter1_reg;
                tmp_19_reg_3552_pp0_iter30_reg <= tmp_19_reg_3552_pp0_iter29_reg;
                tmp_19_reg_3552_pp0_iter31_reg <= tmp_19_reg_3552_pp0_iter30_reg;
                tmp_19_reg_3552_pp0_iter32_reg <= tmp_19_reg_3552_pp0_iter31_reg;
                tmp_19_reg_3552_pp0_iter33_reg <= tmp_19_reg_3552_pp0_iter32_reg;
                tmp_19_reg_3552_pp0_iter34_reg <= tmp_19_reg_3552_pp0_iter33_reg;
                tmp_19_reg_3552_pp0_iter35_reg <= tmp_19_reg_3552_pp0_iter34_reg;
                tmp_19_reg_3552_pp0_iter36_reg <= tmp_19_reg_3552_pp0_iter35_reg;
                tmp_19_reg_3552_pp0_iter3_reg <= tmp_19_reg_3552_pp0_iter2_reg;
                tmp_19_reg_3552_pp0_iter4_reg <= tmp_19_reg_3552_pp0_iter3_reg;
                tmp_19_reg_3552_pp0_iter5_reg <= tmp_19_reg_3552_pp0_iter4_reg;
                tmp_19_reg_3552_pp0_iter6_reg <= tmp_19_reg_3552_pp0_iter5_reg;
                tmp_19_reg_3552_pp0_iter7_reg <= tmp_19_reg_3552_pp0_iter6_reg;
                tmp_19_reg_3552_pp0_iter8_reg <= tmp_19_reg_3552_pp0_iter7_reg;
                tmp_19_reg_3552_pp0_iter9_reg <= tmp_19_reg_3552_pp0_iter8_reg;
                tmp_20_reg_3557_pp0_iter10_reg <= tmp_20_reg_3557_pp0_iter9_reg;
                tmp_20_reg_3557_pp0_iter11_reg <= tmp_20_reg_3557_pp0_iter10_reg;
                tmp_20_reg_3557_pp0_iter12_reg <= tmp_20_reg_3557_pp0_iter11_reg;
                tmp_20_reg_3557_pp0_iter13_reg <= tmp_20_reg_3557_pp0_iter12_reg;
                tmp_20_reg_3557_pp0_iter14_reg <= tmp_20_reg_3557_pp0_iter13_reg;
                tmp_20_reg_3557_pp0_iter15_reg <= tmp_20_reg_3557_pp0_iter14_reg;
                tmp_20_reg_3557_pp0_iter16_reg <= tmp_20_reg_3557_pp0_iter15_reg;
                tmp_20_reg_3557_pp0_iter17_reg <= tmp_20_reg_3557_pp0_iter16_reg;
                tmp_20_reg_3557_pp0_iter18_reg <= tmp_20_reg_3557_pp0_iter17_reg;
                tmp_20_reg_3557_pp0_iter19_reg <= tmp_20_reg_3557_pp0_iter18_reg;
                tmp_20_reg_3557_pp0_iter20_reg <= tmp_20_reg_3557_pp0_iter19_reg;
                tmp_20_reg_3557_pp0_iter21_reg <= tmp_20_reg_3557_pp0_iter20_reg;
                tmp_20_reg_3557_pp0_iter22_reg <= tmp_20_reg_3557_pp0_iter21_reg;
                tmp_20_reg_3557_pp0_iter23_reg <= tmp_20_reg_3557_pp0_iter22_reg;
                tmp_20_reg_3557_pp0_iter24_reg <= tmp_20_reg_3557_pp0_iter23_reg;
                tmp_20_reg_3557_pp0_iter25_reg <= tmp_20_reg_3557_pp0_iter24_reg;
                tmp_20_reg_3557_pp0_iter26_reg <= tmp_20_reg_3557_pp0_iter25_reg;
                tmp_20_reg_3557_pp0_iter27_reg <= tmp_20_reg_3557_pp0_iter26_reg;
                tmp_20_reg_3557_pp0_iter28_reg <= tmp_20_reg_3557_pp0_iter27_reg;
                tmp_20_reg_3557_pp0_iter29_reg <= tmp_20_reg_3557_pp0_iter28_reg;
                tmp_20_reg_3557_pp0_iter2_reg <= tmp_20_reg_3557_pp0_iter1_reg;
                tmp_20_reg_3557_pp0_iter30_reg <= tmp_20_reg_3557_pp0_iter29_reg;
                tmp_20_reg_3557_pp0_iter31_reg <= tmp_20_reg_3557_pp0_iter30_reg;
                tmp_20_reg_3557_pp0_iter32_reg <= tmp_20_reg_3557_pp0_iter31_reg;
                tmp_20_reg_3557_pp0_iter33_reg <= tmp_20_reg_3557_pp0_iter32_reg;
                tmp_20_reg_3557_pp0_iter34_reg <= tmp_20_reg_3557_pp0_iter33_reg;
                tmp_20_reg_3557_pp0_iter35_reg <= tmp_20_reg_3557_pp0_iter34_reg;
                tmp_20_reg_3557_pp0_iter36_reg <= tmp_20_reg_3557_pp0_iter35_reg;
                tmp_20_reg_3557_pp0_iter37_reg <= tmp_20_reg_3557_pp0_iter36_reg;
                tmp_20_reg_3557_pp0_iter38_reg <= tmp_20_reg_3557_pp0_iter37_reg;
                tmp_20_reg_3557_pp0_iter3_reg <= tmp_20_reg_3557_pp0_iter2_reg;
                tmp_20_reg_3557_pp0_iter4_reg <= tmp_20_reg_3557_pp0_iter3_reg;
                tmp_20_reg_3557_pp0_iter5_reg <= tmp_20_reg_3557_pp0_iter4_reg;
                tmp_20_reg_3557_pp0_iter6_reg <= tmp_20_reg_3557_pp0_iter5_reg;
                tmp_20_reg_3557_pp0_iter7_reg <= tmp_20_reg_3557_pp0_iter6_reg;
                tmp_20_reg_3557_pp0_iter8_reg <= tmp_20_reg_3557_pp0_iter7_reg;
                tmp_20_reg_3557_pp0_iter9_reg <= tmp_20_reg_3557_pp0_iter8_reg;
                tmp_22_reg_3566_pp0_iter10_reg <= tmp_22_reg_3566_pp0_iter9_reg;
                tmp_22_reg_3566_pp0_iter11_reg <= tmp_22_reg_3566_pp0_iter10_reg;
                tmp_22_reg_3566_pp0_iter12_reg <= tmp_22_reg_3566_pp0_iter11_reg;
                tmp_22_reg_3566_pp0_iter13_reg <= tmp_22_reg_3566_pp0_iter12_reg;
                tmp_22_reg_3566_pp0_iter14_reg <= tmp_22_reg_3566_pp0_iter13_reg;
                tmp_22_reg_3566_pp0_iter15_reg <= tmp_22_reg_3566_pp0_iter14_reg;
                tmp_22_reg_3566_pp0_iter16_reg <= tmp_22_reg_3566_pp0_iter15_reg;
                tmp_22_reg_3566_pp0_iter17_reg <= tmp_22_reg_3566_pp0_iter16_reg;
                tmp_22_reg_3566_pp0_iter18_reg <= tmp_22_reg_3566_pp0_iter17_reg;
                tmp_22_reg_3566_pp0_iter19_reg <= tmp_22_reg_3566_pp0_iter18_reg;
                tmp_22_reg_3566_pp0_iter20_reg <= tmp_22_reg_3566_pp0_iter19_reg;
                tmp_22_reg_3566_pp0_iter21_reg <= tmp_22_reg_3566_pp0_iter20_reg;
                tmp_22_reg_3566_pp0_iter22_reg <= tmp_22_reg_3566_pp0_iter21_reg;
                tmp_22_reg_3566_pp0_iter23_reg <= tmp_22_reg_3566_pp0_iter22_reg;
                tmp_22_reg_3566_pp0_iter24_reg <= tmp_22_reg_3566_pp0_iter23_reg;
                tmp_22_reg_3566_pp0_iter25_reg <= tmp_22_reg_3566_pp0_iter24_reg;
                tmp_22_reg_3566_pp0_iter26_reg <= tmp_22_reg_3566_pp0_iter25_reg;
                tmp_22_reg_3566_pp0_iter27_reg <= tmp_22_reg_3566_pp0_iter26_reg;
                tmp_22_reg_3566_pp0_iter28_reg <= tmp_22_reg_3566_pp0_iter27_reg;
                tmp_22_reg_3566_pp0_iter29_reg <= tmp_22_reg_3566_pp0_iter28_reg;
                tmp_22_reg_3566_pp0_iter2_reg <= tmp_22_reg_3566_pp0_iter1_reg;
                tmp_22_reg_3566_pp0_iter30_reg <= tmp_22_reg_3566_pp0_iter29_reg;
                tmp_22_reg_3566_pp0_iter31_reg <= tmp_22_reg_3566_pp0_iter30_reg;
                tmp_22_reg_3566_pp0_iter32_reg <= tmp_22_reg_3566_pp0_iter31_reg;
                tmp_22_reg_3566_pp0_iter33_reg <= tmp_22_reg_3566_pp0_iter32_reg;
                tmp_22_reg_3566_pp0_iter34_reg <= tmp_22_reg_3566_pp0_iter33_reg;
                tmp_22_reg_3566_pp0_iter35_reg <= tmp_22_reg_3566_pp0_iter34_reg;
                tmp_22_reg_3566_pp0_iter36_reg <= tmp_22_reg_3566_pp0_iter35_reg;
                tmp_22_reg_3566_pp0_iter3_reg <= tmp_22_reg_3566_pp0_iter2_reg;
                tmp_22_reg_3566_pp0_iter4_reg <= tmp_22_reg_3566_pp0_iter3_reg;
                tmp_22_reg_3566_pp0_iter5_reg <= tmp_22_reg_3566_pp0_iter4_reg;
                tmp_22_reg_3566_pp0_iter6_reg <= tmp_22_reg_3566_pp0_iter5_reg;
                tmp_22_reg_3566_pp0_iter7_reg <= tmp_22_reg_3566_pp0_iter6_reg;
                tmp_22_reg_3566_pp0_iter8_reg <= tmp_22_reg_3566_pp0_iter7_reg;
                tmp_22_reg_3566_pp0_iter9_reg <= tmp_22_reg_3566_pp0_iter8_reg;
                vcoeffs_0_load_reg_3841_pp0_iter40_reg <= vcoeffs_0_load_reg_3841;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_20_reg_3557_pp0_iter35_reg = ap_const_lv1_1))) then
                brmerge4_reg_3640 <= brmerge4_fu_2006_p2;
                tmp_37_reg_3615 <= tmp_37_fu_1841_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1))) then
                col_rd_en_1_reg_894 <= ap_phi_reg_pp0_iter35_col_rd_en_1_reg_894;
                col_wr_en_1_reg_906 <= ap_phi_reg_pp0_iter35_col_wr_en_1_reg_906;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                cols_reg_3403 <= cols_fu_1196_p3;
                rows_reg_3397 <= rows_fu_1182_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (brmerge2_reg_3611_pp0_iter36_reg = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter36_reg = ap_const_lv1_1) and (col_wr_en_1_reg_906_pp0_iter36_reg = ap_const_lv1_1))) then
                h_fir_1_val_1_reg_3649 <= h_fir_1_val_1_fu_2189_p6;
                h_fir_1_val_2_reg_3654 <= h_fir_1_val_2_fu_2203_p6;
                h_fir_2_val_1_reg_3664 <= h_fir_2_val_1_fu_2245_p6;
                h_fir_2_val_2_reg_3669 <= h_fir_2_val_2_fu_2259_p6;
                h_fir_3_val_1_reg_3679 <= h_fir_3_val_1_fu_2311_p6;
                h_fir_3_val_2_reg_3684 <= h_fir_3_val_2_fu_2325_p6;
                hcoeffs_0_load_reg_3704 <= hcoeffs_0_q0;
                hcoeffs_1_load_reg_3699 <= hcoeffs_1_q0;
                hcoeffs_2_load_reg_3694 <= hcoeffs_2_q0;
                tmp_45_reg_3644 <= tmp_45_fu_2175_p6;
                tmp_47_reg_3659 <= tmp_47_fu_2231_p6;
                tmp_50_reg_3674 <= tmp_50_fu_2297_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (tmp_20_reg_3557_pp0_iter35_reg = ap_const_lv1_1))) then
                h_phase_acc_V_2_fu_258 <= h_phase_acc_V_1_fu_1863_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (row_rd_en_load_1_reg_3599 = ap_const_lv1_0) and (col_rd_en_1_reg_894 = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter35_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (or_cond3_reg_3603 = ap_const_lv1_0) and (or_cond4_reg_3607 = ap_const_lv1_1) and (row_rd_en_load_1_reg_3599 = ap_const_lv1_1) and (col_rd_en_1_reg_894 = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter35_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (or_cond4_reg_3607 = ap_const_lv1_0) and (or_cond3_reg_3603 = ap_const_lv1_0) and (row_rd_en_load_1_reg_3599 = ap_const_lv1_1) and (col_rd_en_1_reg_894 = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter35_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (or_cond3_reg_3603 = ap_const_lv1_1) and (row_rd_en_load_1_reg_3599 = ap_const_lv1_1) and (col_rd_en_1_reg_894 = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter35_reg = ap_const_lv1_1)))) then
                h_shreg_val_0_val_0_1_fu_330 <= h_shreg_val_0_val_0_4_fu_342;
                h_shreg_val_0_val_0_2_fu_334 <= h_shreg_val_0_val_0_5_fu_346;
                h_shreg_val_0_val_0_3_fu_338 <= h_shreg_val_0_val_1_fu_350;
                h_shreg_val_0_val_0_4_fu_342 <= h_shreg_val_0_val_1_1_fu_354;
                h_shreg_val_0_val_0_5_fu_346 <= h_shreg_val_0_val_1_2_fu_358;
                h_shreg_val_0_val_0_fu_326 <= h_shreg_val_0_val_0_3_fu_338;
                h_shreg_val_0_val_1_1_fu_354 <= h_shreg_val_0_val_2_1_fu_366;
                h_shreg_val_0_val_1_2_fu_358 <= h_shreg_val_0_val_2_2_fu_370;
                h_shreg_val_0_val_1_fu_350 <= h_shreg_val_0_val_2_fu_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (or_cond3_reg_3603 = ap_const_lv1_1) and (row_rd_en_load_1_reg_3599 = ap_const_lv1_1) and (col_rd_en_1_reg_894 = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter35_reg = ap_const_lv1_1))) then
                h_shreg_val_0_val_3_1_fu_270 <= p_src_data_stream_1_V_dout;
                h_shreg_val_0_val_3_2_fu_274 <= p_src_data_stream_2_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    i_op_assign_1_cast_reg_3546(12 downto 0) <= i_op_assign_1_cast_fu_1488_p1(12 downto 0);
                    i_op_assign_1_cast_reg_3546_pp0_iter1_reg(12 downto 0) <= i_op_assign_1_cast_reg_3546(12 downto 0);
                p_Val2_10_reg_840_pp0_iter1_reg <= p_Val2_10_reg_840;
                tmp_19_reg_3552 <= tmp_19_fu_1492_p1;
                tmp_19_reg_3552_pp0_iter1_reg <= tmp_19_reg_3552;
                tmp_20_reg_3557 <= tmp_20_fu_1496_p2;
                tmp_20_reg_3557_pp0_iter1_reg <= tmp_20_reg_3557;
                tmp_22_reg_3566_pp0_iter1_reg <= tmp_22_reg_3566;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_20_reg_3557_pp0_iter37_reg = ap_const_lv1_1))) then
                linebuf_val_val_0_0_s_reg_3719 <= tmp_40_fu_2355_p1(12 - 1 downto 0);
                linebuf_val_val_0_1_s_reg_3725 <= tmp_40_fu_2355_p1(12 - 1 downto 0);
                linebuf_val_val_0_2_s_reg_3731 <= tmp_40_fu_2355_p1(12 - 1 downto 0);
                linebuf_val_val_1_0_s_reg_3737 <= tmp_40_fu_2355_p1(12 - 1 downto 0);
                linebuf_val_val_1_1_s_reg_3743 <= tmp_40_fu_2355_p1(12 - 1 downto 0);
                linebuf_val_val_1_2_s_reg_3749 <= tmp_40_fu_2355_p1(12 - 1 downto 0);
                linebuf_val_val_2_0_s_reg_3755 <= tmp_40_fu_2355_p1(12 - 1 downto 0);
                linebuf_val_val_2_1_s_reg_3761 <= tmp_40_fu_2355_p1(12 - 1 downto 0);
                linebuf_val_val_2_2_s_reg_3767 <= tmp_40_fu_2355_p1(12 - 1 downto 0);
                linebuf_val_val_3_0_s_reg_3773 <= tmp_40_fu_2355_p1(12 - 1 downto 0);
                linebuf_val_val_3_1_s_reg_3779 <= tmp_40_fu_2355_p1(12 - 1 downto 0);
                linebuf_val_val_3_2_s_reg_3785 <= tmp_40_fu_2355_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state50) and (tmp_13_fu_1390_p2 = ap_const_lv1_1))) then
                notlhs_reg_3526 <= notlhs_fu_1457_p2;
                p_Result_3_reg_3490 <= r_V_3_fu_1405_p2(44 downto 44);
                r_V_3_reg_3484 <= r_V_3_fu_1405_p2;
                    t_V_2_cast_reg_3495(28 downto 16) <= t_V_2_cast_fu_1426_p1(28 downto 16);
                tmp12_reg_3541 <= tmp12_fu_1482_p2;
                tmp_118_0_t_reg_3531 <= tmp_118_0_t_fu_1474_p3;
                tmp_16_reg_3500 <= tmp_16_fu_1430_p2;
                tmp_18_reg_3510 <= tmp_18_fu_1451_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_col_rd_en_1_phi_fu_898_p4 = ap_const_lv1_1) and (row_rd_en_load_1_load_fu_1754_p1 = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter34_reg = ap_const_lv1_1))) then
                or_cond3_reg_3603 <= or_cond3_fu_1761_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond3_fu_1761_p2 = ap_const_lv1_0) and (ap_phi_mux_col_rd_en_1_phi_fu_898_p4 = ap_const_lv1_1) and (row_rd_en_load_1_load_fu_1754_p1 = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter34_reg = ap_const_lv1_1))) then
                or_cond4_reg_3607 <= or_cond4_fu_1776_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (brmerge4_reg_3640_pp0_iter40_reg = ap_const_lv1_0))) then
                pix_out_val_0_1_reg_3876 <= pix_out_val_0_1_sr_cast_fu_1065_ap_return;
                pix_out_val_1_1_reg_3881 <= pix_out_val_1_1_sr_cast_fu_1070_ap_return;
                tmp_64_reg_3886 <= tmp_64_sr_cast_fu_1075_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1) and (tmp_22_reg_3566_pp0_iter33_reg = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter33_reg = ap_const_lv1_1))) then
                row_rd_en_fu_242 <= ap_phi_mux_row_rd_en_3_phi_fu_875_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_col_rd_en_1_phi_fu_898_p4 = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter34_reg = ap_const_lv1_1))) then
                row_rd_en_load_1_reg_3599 <= row_rd_en_fu_242;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                row_reg_3479 <= row_fu_1395_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1) and (tmp_22_reg_3566_pp0_iter34_reg = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter34_reg = ap_const_lv1_1))) then
                row_wr_en_fu_238 <= ap_phi_reg_pp0_iter35_row_wr_en_3_reg_883;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1) and (brmerge2_reg_3611_pp0_iter37_reg = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter37_reg = ap_const_lv1_1) and (col_wr_en_1_reg_906_pp0_iter37_reg = ap_const_lv1_1))) then
                t_V_5_0_3_reg_3791 <= grp_fu_2918_p3;
                t_V_5_1_3_reg_3796 <= grp_fu_2943_p3;
                t_V_5_2_3_reg_3801 <= grp_fu_2968_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1) and (brmerge2_reg_3611_pp0_iter36_reg = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter36_reg = ap_const_lv1_1) and (col_wr_en_1_reg_906_pp0_iter36_reg = ap_const_lv1_1))) then
                t_V_5_1_reg_3709 <= grp_fu_2885_p3;
                t_V_5_2_reg_3714 <= grp_fu_2893_p3;
                t_V_5_reg_3689 <= grp_fu_2877_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1) and (brmerge4_reg_3640_pp0_iter39_reg = ap_const_lv1_0))) then
                t_V_7_0_2_reg_3861 <= grp_fu_2994_p3;
                t_V_7_1_2_reg_3866 <= grp_fu_3020_p3;
                t_V_7_2_2_reg_3871 <= grp_fu_3046_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (brmerge4_reg_3640_pp0_iter39_reg = ap_const_lv1_0))) then
                temp_out_0_val_0_1_1_reg_3856 <= temp_out_0_val_0_1_fu_286;
                temp_out_0_val_1_1_1_reg_3851 <= temp_out_0_val_1_1_fu_282;
                v_fir_3_val_2_load_reg_3846 <= v_fir_3_val_2_fu_278;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (col_wr_en_1_reg_906_pp0_iter38_reg = ap_const_lv1_1))) then
                temp_out_0_val_0_1_fu_286 <= ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4;
                temp_out_0_val_0_2_fu_374 <= ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4;
                temp_out_0_val_1_1_fu_282 <= ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4;
                temp_out_0_val_1_2_fu_378 <= ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4;
                temp_out_1_val_0_fu_386 <= ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4;
                temp_out_1_val_1_fu_390 <= ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4;
                temp_out_1_val_2_fu_394 <= ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4;
                temp_out_2_val_0_fu_398 <= ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4;
                temp_out_2_val_1_fu_402 <= ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4;
                temp_out_2_val_2_fu_406 <= ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4;
                temp_out_3_val_0_fu_410 <= ap_phi_mux_temp_out_3_val_0_s_phi_fu_943_p4;
                temp_out_3_val_1_fu_414 <= ap_phi_mux_temp_out_3_val_1_s_phi_fu_932_p4;
                temp_out_3_val_2_fu_418 <= ap_phi_mux_temp_out_3_val_2_s_phi_fu_921_p4;
                v_fir_0_val_0_1_fu_310 <= v_fir_0_val_0_fu_2436_p6;
                v_fir_0_val_1_1_fu_314 <= v_fir_0_val_1_fu_2449_p6;
                v_fir_0_val_2_1_fu_318 <= v_fir_0_val_2_fu_2462_p6;
                v_fir_1_val_0_1_fu_322 <= v_fir_1_val_0_fu_2475_p3;
                v_fir_1_val_1_1_fu_306 <= v_fir_1_val_1_fu_2482_p3;
                v_fir_1_val_2_1_fu_302 <= v_fir_1_val_2_fu_2489_p3;
                v_fir_2_val_0_1_fu_298 <= v_fir_2_val_0_fu_2496_p3;
                v_fir_2_val_1_1_fu_294 <= v_fir_2_val_1_fu_2503_p3;
                v_fir_2_val_2_1_fu_290 <= v_fir_2_val_2_fu_2510_p3;
                v_fir_3_val_2_1_fu_382 <= ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4;
                v_fir_3_val_2_fu_278 <= ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_fu_1496_p2 = ap_const_lv1_1))) then
                tmp_22_reg_3566 <= tmp_22_fu_1507_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1) and (tmp_22_reg_3566_pp0_iter36_reg = ap_const_lv1_1))) then
                v_phase_V_1_fu_254 <= v_phase_acc_V_2_fu_262(15 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (brmerge4_reg_3640_pp0_iter38_reg = ap_const_lv1_0))) then
                vcoeffs_0_load_reg_3841 <= vcoeffs_0_q0;
                vcoeffs_1_load_reg_3836 <= vcoeffs_1_q0;
                vcoeffs_2_load_reg_3831 <= vcoeffs_2_q0;
                vcoeffs_3_load_reg_3826 <= vcoeffs_3_q0;
            end if;
        end if;
    end process;
    t_V_2_cast_reg_3495(15 downto 0) <= "0000000000000000";
    t_V_2_cast_reg_3495(31 downto 29) <= "000";
    i_op_assign_1_cast_reg_3546(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter1_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter2_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter3_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter4_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter5_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter6_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter7_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter8_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter9_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter10_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter11_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter12_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter13_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter14_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter15_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter16_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter17_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter18_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter19_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter20_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter21_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter22_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter23_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter24_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter25_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter26_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter27_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter28_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter29_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter30_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter31_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter32_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter33_reg(13) <= '0';
    i_op_assign_1_cast_reg_3546_pp0_iter34_reg(13) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter42, tmp_13_fu_1390_p2, ap_CS_fsm_state50, ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter41)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state50) and (tmp_13_fu_1390_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter41 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter42 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter41 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter42 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state94;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    addconv_fu_1331_p2 <= std_logic_vector(unsigned(ap_const_lv14_3) + unsigned(cols_cast_fu_1322_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(50);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state94 <= ap_CS_fsm(51);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_0_V_empty_n, p_src_data_stream_1_V_empty_n, p_src_data_stream_2_V_empty_n, p_dst_data_stream_0_V_full_n, p_dst_data_stream_1_V_full_n, p_dst_data_stream_2_V_full_n, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter42, brmerge4_reg_3640_pp0_iter41_reg, ap_predicate_op536_read_state87, ap_predicate_op537_read_state87, ap_predicate_op538_read_state87)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter42 = ap_const_logic_1) and (((p_dst_data_stream_2_V_full_n = ap_const_logic_0) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0)) or ((p_dst_data_stream_1_V_full_n = ap_const_logic_0) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0)) or ((p_dst_data_stream_0_V_full_n = ap_const_logic_0) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (((ap_predicate_op538_read_state87 = ap_const_boolean_1) and (p_src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op537_read_state87 = ap_const_boolean_1) and (p_src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op536_read_state87 = ap_const_boolean_1) and (p_src_data_stream_0_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_0_V_empty_n, p_src_data_stream_1_V_empty_n, p_src_data_stream_2_V_empty_n, p_dst_data_stream_0_V_full_n, p_dst_data_stream_1_V_full_n, p_dst_data_stream_2_V_full_n, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter42, brmerge4_reg_3640_pp0_iter41_reg, ap_predicate_op536_read_state87, ap_predicate_op537_read_state87, ap_predicate_op538_read_state87)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter42 = ap_const_logic_1) and (((p_dst_data_stream_2_V_full_n = ap_const_logic_0) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0)) or ((p_dst_data_stream_1_V_full_n = ap_const_logic_0) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0)) or ((p_dst_data_stream_0_V_full_n = ap_const_logic_0) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (((ap_predicate_op538_read_state87 = ap_const_boolean_1) and (p_src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op537_read_state87 = ap_const_boolean_1) and (p_src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op536_read_state87 = ap_const_boolean_1) and (p_src_data_stream_0_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_0_V_empty_n, p_src_data_stream_1_V_empty_n, p_src_data_stream_2_V_empty_n, p_dst_data_stream_0_V_full_n, p_dst_data_stream_1_V_full_n, p_dst_data_stream_2_V_full_n, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter42, brmerge4_reg_3640_pp0_iter41_reg, ap_predicate_op536_read_state87, ap_predicate_op537_read_state87, ap_predicate_op538_read_state87)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter42 = ap_const_logic_1) and (((p_dst_data_stream_2_V_full_n = ap_const_logic_0) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0)) or ((p_dst_data_stream_1_V_full_n = ap_const_logic_0) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0)) or ((p_dst_data_stream_0_V_full_n = ap_const_logic_0) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (((ap_predicate_op538_read_state87 = ap_const_boolean_1) and (p_src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op537_read_state87 = ap_const_boolean_1) and (p_src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op536_read_state87 = ap_const_boolean_1) and (p_src_data_stream_0_V_empty_n = ap_const_logic_0)))));
    end process;

        ap_block_state51_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state82_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state83_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state84_pp0_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state85_pp0_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state86_pp0_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state87_pp0_stage0_iter36_assign_proc : process(p_src_data_stream_0_V_empty_n, p_src_data_stream_1_V_empty_n, p_src_data_stream_2_V_empty_n, ap_predicate_op536_read_state87, ap_predicate_op537_read_state87, ap_predicate_op538_read_state87)
    begin
                ap_block_state87_pp0_stage0_iter36 <= (((ap_predicate_op538_read_state87 = ap_const_boolean_1) and (p_src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op537_read_state87 = ap_const_boolean_1) and (p_src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op536_read_state87 = ap_const_boolean_1) and (p_src_data_stream_0_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state88_pp0_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp0_stage0_iter38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state90_pp0_stage0_iter39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state91_pp0_stage0_iter40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state92_pp0_stage0_iter41 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state93_pp0_stage0_iter42_assign_proc : process(p_dst_data_stream_0_V_full_n, p_dst_data_stream_1_V_full_n, p_dst_data_stream_2_V_full_n, brmerge4_reg_3640_pp0_iter41_reg)
    begin
                ap_block_state93_pp0_stage0_iter42 <= (((p_dst_data_stream_2_V_full_n = ap_const_logic_0) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0)) or ((p_dst_data_stream_1_V_full_n = ap_const_logic_0) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0)) or ((p_dst_data_stream_0_V_full_n = ap_const_logic_0) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0)));
    end process;


    ap_condition_1074_assign_proc : process(icmp_reg_3450, tmp_20_reg_3557_pp0_iter33_reg, tmp_22_reg_3566_pp0_iter33_reg)
    begin
                ap_condition_1074 <= ((icmp_reg_3450 = ap_const_lv1_0) and (tmp_22_reg_3566_pp0_iter33_reg = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter33_reg = ap_const_lv1_1));
    end process;


    ap_condition_1347_assign_proc : process(ap_block_pp0_stage0, tmp_20_reg_3557_pp0_iter33_reg, tmp_22_reg_3566_pp0_iter33_reg, ap_enable_reg_pp0_iter34)
    begin
                ap_condition_1347 <= ((ap_enable_reg_pp0_iter34 = ap_const_logic_1) and (tmp_22_reg_3566_pp0_iter33_reg = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter33_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_3347_assign_proc : process(ap_block_pp0_stage0, col_wr_en_1_reg_906_pp0_iter38_reg, tmp_20_reg_3557_pp0_iter38_reg, ap_enable_reg_pp0_iter39)
    begin
                ap_condition_3347 <= ((ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (tmp_20_reg_3557_pp0_iter38_reg = ap_const_lv1_1) and (col_wr_en_1_reg_906_pp0_iter38_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_3357_assign_proc : process(ap_enable_reg_pp0_iter36, tmp_20_reg_3557_pp0_iter35_reg, col_rd_en_1_reg_894, row_rd_en_load_1_reg_3599, ap_block_pp0_stage0_11001)
    begin
                ap_condition_3357 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (row_rd_en_load_1_reg_3599 = ap_const_lv1_1) and (col_rd_en_1_reg_894 = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter35_reg = ap_const_lv1_1));
    end process;


    ap_condition_633_assign_proc : process(icmp_reg_3450, tmp_20_reg_3557_pp0_iter33_reg, tmp_22_reg_3566_pp0_iter33_reg)
    begin
                ap_condition_633 <= ((tmp_22_reg_3566_pp0_iter33_reg = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter33_reg = ap_const_lv1_1) and (icmp_reg_3450 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter36_state87_assign_proc : process(ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter35)
    begin
        if (((ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            ap_condition_pp0_exit_iter36_state87 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter36_state87 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_13_fu_1390_p2, ap_CS_fsm_state50)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state50) and (tmp_13_fu_1390_p2 = ap_const_lv1_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter42, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter37, ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter40, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter39, ap_enable_reg_pp0_iter41)
    begin
        if (((ap_enable_reg_pp0_iter41 = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter40 = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter42 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_col_rd_en_1_phi_fu_898_p4 <= ap_phi_reg_pp0_iter35_col_rd_en_1_reg_894;
    ap_phi_mux_col_wr_en_1_phi_fu_910_p4 <= ap_phi_reg_pp0_iter35_col_wr_en_1_reg_906;

    ap_phi_mux_p_Val2_10_phi_fu_844_p4_assign_proc : process(ap_block_pp0_stage0, tmp_20_reg_3557, p_Val2_10_reg_840, ap_CS_fsm_pp0_stage0, col_reg_3561, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_20_reg_3557 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_Val2_10_phi_fu_844_p4 <= col_reg_3561;
        else 
            ap_phi_mux_p_Val2_10_phi_fu_844_p4 <= p_Val2_10_reg_840;
        end if; 
    end process;


    ap_phi_mux_row_rd_en_3_phi_fu_875_p4_assign_proc : process(icmp_reg_3450, ap_phi_reg_pp0_iter34_row_rd_en_3_reg_872, not_s_fu_1542_p2, ap_condition_1347)
    begin
        if ((ap_const_boolean_1 = ap_condition_1347)) then
            if ((icmp_reg_3450 = ap_const_lv1_0)) then 
                ap_phi_mux_row_rd_en_3_phi_fu_875_p4 <= not_s_fu_1542_p2;
            elsif ((icmp_reg_3450 = ap_const_lv1_1)) then 
                ap_phi_mux_row_rd_en_3_phi_fu_875_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_row_rd_en_3_phi_fu_875_p4 <= ap_phi_reg_pp0_iter34_row_rd_en_3_reg_872;
            end if;
        else 
            ap_phi_mux_row_rd_en_3_phi_fu_875_p4 <= ap_phi_reg_pp0_iter34_row_rd_en_3_reg_872;
        end if; 
    end process;


    ap_phi_mux_rows_rw_4_phi_fu_866_p4_assign_proc : process(icmp_reg_3450, rows_rw_fu_1581_p3, ap_phi_reg_pp0_iter34_rows_rw_4_reg_863, rows_rw_1_fu_1537_p1, ap_condition_1347)
    begin
        if ((ap_const_boolean_1 = ap_condition_1347)) then
            if ((icmp_reg_3450 = ap_const_lv1_0)) then 
                ap_phi_mux_rows_rw_4_phi_fu_866_p4 <= rows_rw_1_fu_1537_p1;
            elsif ((icmp_reg_3450 = ap_const_lv1_1)) then 
                ap_phi_mux_rows_rw_4_phi_fu_866_p4 <= rows_rw_fu_1581_p3;
            else 
                ap_phi_mux_rows_rw_4_phi_fu_866_p4 <= ap_phi_reg_pp0_iter34_rows_rw_4_reg_863;
            end if;
        else 
            ap_phi_mux_rows_rw_4_phi_fu_866_p4 <= ap_phi_reg_pp0_iter34_rows_rw_4_reg_863;
        end if; 
    end process;


    ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4_assign_proc : process(brmerge2_reg_3611_pp0_iter38_reg, linebuf_val_val_0_0_q0, pix_out_val_0_sr_cast_fu_1047_ap_return, ap_phi_reg_pp0_iter39_temp_out_0_val_0_reg_1017, ap_condition_3347)
    begin
        if ((ap_const_boolean_1 = ap_condition_3347)) then
            if ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_0)) then 
                ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4 <= linebuf_val_val_0_0_q0;
            elsif ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_1)) then 
                ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4 <= pix_out_val_0_sr_cast_fu_1047_ap_return;
            else 
                ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4 <= ap_phi_reg_pp0_iter39_temp_out_0_val_0_reg_1017;
            end if;
        else 
            ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4 <= ap_phi_reg_pp0_iter39_temp_out_0_val_0_reg_1017;
        end if; 
    end process;


    ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4_assign_proc : process(brmerge2_reg_3611_pp0_iter38_reg, linebuf_val_val_0_1_q0, pix_out_val_1_sr_cast_fu_1053_ap_return, ap_phi_reg_pp0_iter39_temp_out_0_val_1_reg_1027, ap_condition_3347)
    begin
        if ((ap_const_boolean_1 = ap_condition_3347)) then
            if ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_0)) then 
                ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4 <= linebuf_val_val_0_1_q0;
            elsif ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_1)) then 
                ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4 <= pix_out_val_1_sr_cast_fu_1053_ap_return;
            else 
                ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4 <= ap_phi_reg_pp0_iter39_temp_out_0_val_1_reg_1027;
            end if;
        else 
            ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4 <= ap_phi_reg_pp0_iter39_temp_out_0_val_1_reg_1027;
        end if; 
    end process;


    ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4_assign_proc : process(brmerge2_reg_3611_pp0_iter38_reg, linebuf_val_val_0_2_q0, temp_out_0_val_2_sr_cast_fu_1059_ap_return, ap_phi_reg_pp0_iter39_temp_out_0_val_2_4_reg_1037, ap_condition_3347)
    begin
        if ((ap_const_boolean_1 = ap_condition_3347)) then
            if ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_0)) then 
                ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4 <= linebuf_val_val_0_2_q0;
            elsif ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_1)) then 
                ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4 <= temp_out_0_val_2_sr_cast_fu_1059_ap_return;
            else 
                ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4 <= ap_phi_reg_pp0_iter39_temp_out_0_val_2_4_reg_1037;
            end if;
        else 
            ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4 <= ap_phi_reg_pp0_iter39_temp_out_0_val_2_4_reg_1037;
        end if; 
    end process;


    ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4_assign_proc : process(brmerge2_reg_3611_pp0_iter38_reg, linebuf_val_val_0_0_q0, linebuf_val_val_1_0_q0, ap_phi_reg_pp0_iter39_temp_out_1_val_0_2_reg_1006, ap_condition_3347)
    begin
        if ((ap_const_boolean_1 = ap_condition_3347)) then
            if ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_0)) then 
                ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4 <= linebuf_val_val_1_0_q0;
            elsif ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_1)) then 
                ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4 <= linebuf_val_val_0_0_q0;
            else 
                ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4 <= ap_phi_reg_pp0_iter39_temp_out_1_val_0_2_reg_1006;
            end if;
        else 
            ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4 <= ap_phi_reg_pp0_iter39_temp_out_1_val_0_2_reg_1006;
        end if; 
    end process;


    ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4_assign_proc : process(brmerge2_reg_3611_pp0_iter38_reg, linebuf_val_val_0_1_q0, linebuf_val_val_1_1_q0, ap_phi_reg_pp0_iter39_temp_out_1_val_1_2_reg_995, ap_condition_3347)
    begin
        if ((ap_const_boolean_1 = ap_condition_3347)) then
            if ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_0)) then 
                ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4 <= linebuf_val_val_1_1_q0;
            elsif ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_1)) then 
                ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4 <= linebuf_val_val_0_1_q0;
            else 
                ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4 <= ap_phi_reg_pp0_iter39_temp_out_1_val_1_2_reg_995;
            end if;
        else 
            ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4 <= ap_phi_reg_pp0_iter39_temp_out_1_val_1_2_reg_995;
        end if; 
    end process;


    ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4_assign_proc : process(brmerge2_reg_3611_pp0_iter38_reg, linebuf_val_val_0_2_q0, linebuf_val_val_1_2_q0, ap_phi_reg_pp0_iter39_temp_out_1_val_2_2_reg_984, ap_condition_3347)
    begin
        if ((ap_const_boolean_1 = ap_condition_3347)) then
            if ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_0)) then 
                ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4 <= linebuf_val_val_1_2_q0;
            elsif ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_1)) then 
                ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4 <= linebuf_val_val_0_2_q0;
            else 
                ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4 <= ap_phi_reg_pp0_iter39_temp_out_1_val_2_2_reg_984;
            end if;
        else 
            ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4 <= ap_phi_reg_pp0_iter39_temp_out_1_val_2_2_reg_984;
        end if; 
    end process;


    ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4_assign_proc : process(brmerge2_reg_3611_pp0_iter38_reg, linebuf_val_val_1_0_q0, linebuf_val_val_2_0_q0, ap_phi_reg_pp0_iter39_temp_out_2_val_0_2_reg_973, ap_condition_3347)
    begin
        if ((ap_const_boolean_1 = ap_condition_3347)) then
            if ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_0)) then 
                ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4 <= linebuf_val_val_2_0_q0;
            elsif ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_1)) then 
                ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4 <= linebuf_val_val_1_0_q0;
            else 
                ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4 <= ap_phi_reg_pp0_iter39_temp_out_2_val_0_2_reg_973;
            end if;
        else 
            ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4 <= ap_phi_reg_pp0_iter39_temp_out_2_val_0_2_reg_973;
        end if; 
    end process;


    ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4_assign_proc : process(brmerge2_reg_3611_pp0_iter38_reg, linebuf_val_val_1_1_q0, linebuf_val_val_2_1_q0, ap_phi_reg_pp0_iter39_temp_out_2_val_1_2_reg_962, ap_condition_3347)
    begin
        if ((ap_const_boolean_1 = ap_condition_3347)) then
            if ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_0)) then 
                ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4 <= linebuf_val_val_2_1_q0;
            elsif ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_1)) then 
                ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4 <= linebuf_val_val_1_1_q0;
            else 
                ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4 <= ap_phi_reg_pp0_iter39_temp_out_2_val_1_2_reg_962;
            end if;
        else 
            ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4 <= ap_phi_reg_pp0_iter39_temp_out_2_val_1_2_reg_962;
        end if; 
    end process;


    ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4_assign_proc : process(brmerge2_reg_3611_pp0_iter38_reg, linebuf_val_val_1_2_q0, linebuf_val_val_2_2_q0, ap_phi_reg_pp0_iter39_temp_out_2_val_2_2_reg_951, ap_condition_3347)
    begin
        if ((ap_const_boolean_1 = ap_condition_3347)) then
            if ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_0)) then 
                ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4 <= linebuf_val_val_2_2_q0;
            elsif ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_1)) then 
                ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4 <= linebuf_val_val_1_2_q0;
            else 
                ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4 <= ap_phi_reg_pp0_iter39_temp_out_2_val_2_2_reg_951;
            end if;
        else 
            ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4 <= ap_phi_reg_pp0_iter39_temp_out_2_val_2_2_reg_951;
        end if; 
    end process;


    ap_phi_mux_temp_out_3_val_0_s_phi_fu_943_p4_assign_proc : process(brmerge2_reg_3611_pp0_iter38_reg, linebuf_val_val_2_0_q0, linebuf_val_val_3_0_q0, ap_phi_reg_pp0_iter39_temp_out_3_val_0_s_reg_940, ap_condition_3347)
    begin
        if ((ap_const_boolean_1 = ap_condition_3347)) then
            if ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_0)) then 
                ap_phi_mux_temp_out_3_val_0_s_phi_fu_943_p4 <= linebuf_val_val_3_0_q0;
            elsif ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_1)) then 
                ap_phi_mux_temp_out_3_val_0_s_phi_fu_943_p4 <= linebuf_val_val_2_0_q0;
            else 
                ap_phi_mux_temp_out_3_val_0_s_phi_fu_943_p4 <= ap_phi_reg_pp0_iter39_temp_out_3_val_0_s_reg_940;
            end if;
        else 
            ap_phi_mux_temp_out_3_val_0_s_phi_fu_943_p4 <= ap_phi_reg_pp0_iter39_temp_out_3_val_0_s_reg_940;
        end if; 
    end process;


    ap_phi_mux_temp_out_3_val_1_s_phi_fu_932_p4_assign_proc : process(brmerge2_reg_3611_pp0_iter38_reg, linebuf_val_val_2_1_q0, linebuf_val_val_3_1_q0, ap_phi_reg_pp0_iter39_temp_out_3_val_1_s_reg_929, ap_condition_3347)
    begin
        if ((ap_const_boolean_1 = ap_condition_3347)) then
            if ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_0)) then 
                ap_phi_mux_temp_out_3_val_1_s_phi_fu_932_p4 <= linebuf_val_val_3_1_q0;
            elsif ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_1)) then 
                ap_phi_mux_temp_out_3_val_1_s_phi_fu_932_p4 <= linebuf_val_val_2_1_q0;
            else 
                ap_phi_mux_temp_out_3_val_1_s_phi_fu_932_p4 <= ap_phi_reg_pp0_iter39_temp_out_3_val_1_s_reg_929;
            end if;
        else 
            ap_phi_mux_temp_out_3_val_1_s_phi_fu_932_p4 <= ap_phi_reg_pp0_iter39_temp_out_3_val_1_s_reg_929;
        end if; 
    end process;


    ap_phi_mux_temp_out_3_val_2_s_phi_fu_921_p4_assign_proc : process(brmerge2_reg_3611_pp0_iter38_reg, linebuf_val_val_2_2_q0, linebuf_val_val_3_2_q0, ap_phi_reg_pp0_iter39_temp_out_3_val_2_s_reg_918, ap_condition_3347)
    begin
        if ((ap_const_boolean_1 = ap_condition_3347)) then
            if ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_0)) then 
                ap_phi_mux_temp_out_3_val_2_s_phi_fu_921_p4 <= linebuf_val_val_3_2_q0;
            elsif ((brmerge2_reg_3611_pp0_iter38_reg = ap_const_lv1_1)) then 
                ap_phi_mux_temp_out_3_val_2_s_phi_fu_921_p4 <= linebuf_val_val_2_2_q0;
            else 
                ap_phi_mux_temp_out_3_val_2_s_phi_fu_921_p4 <= ap_phi_reg_pp0_iter39_temp_out_3_val_2_s_reg_918;
            end if;
        else 
            ap_phi_mux_temp_out_3_val_2_s_phi_fu_921_p4 <= ap_phi_reg_pp0_iter39_temp_out_3_val_2_s_reg_918;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_col_rd_en_1_reg_894 <= "X";
    ap_phi_reg_pp0_iter0_col_wr_en_1_reg_906 <= "X";
    ap_phi_reg_pp0_iter0_row_wr_en_3_reg_883 <= "X";
    ap_phi_reg_pp0_iter34_row_rd_en_3_reg_872 <= "X";
    ap_phi_reg_pp0_iter34_rows_rw_4_reg_863 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter39_temp_out_0_val_0_reg_1017 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter39_temp_out_0_val_1_reg_1027 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter39_temp_out_0_val_2_4_reg_1037 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter39_temp_out_1_val_0_2_reg_1006 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter39_temp_out_1_val_1_2_reg_995 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter39_temp_out_1_val_2_2_reg_984 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter39_temp_out_2_val_0_2_reg_973 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter39_temp_out_2_val_1_2_reg_962 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter39_temp_out_2_val_2_2_reg_951 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter39_temp_out_3_val_0_s_reg_940 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter39_temp_out_3_val_1_s_reg_929 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter39_temp_out_3_val_2_s_reg_918 <= "XXXXXXXX";

    ap_predicate_op536_read_state87_assign_proc : process(tmp_20_reg_3557_pp0_iter35_reg, col_rd_en_1_reg_894, row_rd_en_load_1_reg_3599, or_cond3_reg_3603)
    begin
                ap_predicate_op536_read_state87 <= ((or_cond3_reg_3603 = ap_const_lv1_1) and (row_rd_en_load_1_reg_3599 = ap_const_lv1_1) and (col_rd_en_1_reg_894 = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter35_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op537_read_state87_assign_proc : process(tmp_20_reg_3557_pp0_iter35_reg, col_rd_en_1_reg_894, row_rd_en_load_1_reg_3599, or_cond3_reg_3603)
    begin
                ap_predicate_op537_read_state87 <= ((or_cond3_reg_3603 = ap_const_lv1_1) and (row_rd_en_load_1_reg_3599 = ap_const_lv1_1) and (col_rd_en_1_reg_894 = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter35_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op538_read_state87_assign_proc : process(tmp_20_reg_3557_pp0_iter35_reg, col_rd_en_1_reg_894, row_rd_en_load_1_reg_3599, or_cond3_reg_3603)
    begin
                ap_predicate_op538_read_state87 <= ((or_cond3_reg_3603 = ap_const_lv1_1) and (row_rd_en_load_1_reg_3599 = ap_const_lv1_1) and (col_rd_en_1_reg_894 = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter35_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(tmp_13_fu_1390_p2, ap_CS_fsm_state50)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state50) and (tmp_13_fu_1390_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge1_fu_1847_p2 <= (icmp1_reg_3460 or col_rd_en_1_reg_894);
    brmerge2_fu_1784_p2 <= (tmp12_reg_3541 or row_rd_en_fu_242);
    brmerge4_fu_2006_p2 <= (tmp14_fu_2000_p2 or tmp13_fu_1989_p2);
    brmerge_fu_2033_p2 <= (row_rd_en_3_reg_872_pp0_iter36_reg or icmp_reg_3450);
    col_assign_fu_2097_p2 <= (tmp_19_reg_3552_pp0_iter36_reg xor ap_const_lv2_3);
    col_fu_1501_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(ap_phi_mux_p_Val2_10_phi_fu_844_p4));
    col_ratio_V_fu_1223_p1 <= grp_fu_1170_p2(32 - 1 downto 0);
        cols_cast_fu_1322_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cols_reg_3403),14));

    cols_fu_1196_p3 <= 
        cols_in_cast_fu_1120_p1 when (tmp_8_fu_1190_p2(0) = '1') else 
        p_dst_cols_V_read;
    cols_in_cast_fu_1120_p0 <= p_src_cols_V_read;
        cols_in_cast_fu_1120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cols_in_cast_fu_1120_p0),13));

    cols_rw_1_dcol_2_fu_1634_p3 <= 
        cols_rw_fu_246 when (or_cond2_fu_1628_p2(0) = '1') else 
        cols_rw_4_fu_1613_p1;
    cols_rw_1_dcol_fu_1725_p3 <= 
        cols_rw_fu_246 when (or_cond1_fu_1719_p2(0) = '1') else 
        cols_rw_3_fu_1700_p3;
    cols_rw_3_fu_1700_p3 <= 
        tmp_33_fu_1692_p3 when (p_Result_4_fu_1658_p3(0) = '1') else 
        tmp_30_fu_1676_p4;
    cols_rw_4_fu_1613_p1 <= grp_fu_1529_p2(16 - 1 downto 0);

    grp_fu_1144_ap_start_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_fu_1144_ap_start <= ap_const_logic_1;
        else 
            grp_fu_1144_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1144_p0 <= (p_dst_rows_V_read & ap_const_lv32_0);

    grp_fu_1170_ap_start_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_fu_1170_ap_start <= ap_const_logic_1;
        else 
            grp_fu_1170_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1170_p0 <= (p_dst_cols_V_read & ap_const_lv32_0);

    grp_fu_1513_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1513_ce <= ap_const_logic_1;
        else 
            grp_fu_1513_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1513_p0 <= t_V_2_cast_reg_3495(31 - 1 downto 0);

    grp_fu_1529_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1529_ce <= ap_const_logic_1;
        else 
            grp_fu_1529_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1529_p0 <= grp_fu_1529_p00(31 - 1 downto 0);
    grp_fu_1529_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_1_fu_1517_p3),32));
    grp_fu_2877_p0 <= hcoeffs_3_load_cast_fu_2343_p1(17 - 1 downto 0);
    grp_fu_2877_p1 <= grp_fu_2877_p10(8 - 1 downto 0);
    grp_fu_2877_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_2109_p6),25));
    grp_fu_2877_p2 <= ap_const_lv26_80000(21 - 1 downto 0);
    grp_fu_2885_p0 <= hcoeffs_3_load_cast_fu_2343_p1(17 - 1 downto 0);
    grp_fu_2885_p1 <= grp_fu_2885_p10(8 - 1 downto 0);
    grp_fu_2885_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_fir_0_val_1_fu_2123_p6),25));
    grp_fu_2885_p2 <= ap_const_lv26_80000(21 - 1 downto 0);
    grp_fu_2893_p0 <= hcoeffs_3_load_cast_fu_2343_p1(17 - 1 downto 0);
    grp_fu_2893_p1 <= grp_fu_2893_p10(8 - 1 downto 0);
    grp_fu_2893_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_fir_0_val_2_fu_2137_p6),25));
    grp_fu_2893_p2 <= ap_const_lv26_80000(21 - 1 downto 0);
    grp_fu_2901_p0 <= tmp_53_fu_2377_p1(21 - 1 downto 0);
    grp_fu_2901_p1 <= grp_fu_2901_p10(8 - 1 downto 0);
    grp_fu_2901_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_reg_3644),29));
    grp_fu_2910_p0 <= tmp_113_0_2_cast_cas_fu_2386_p1(21 - 1 downto 0);
    grp_fu_2910_p1 <= grp_fu_2910_p10(8 - 1 downto 0);
    grp_fu_2910_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_reg_3659),29));
    grp_fu_2918_p0 <= hcoeffs_0_load_cast_fu_2392_p1(17 - 1 downto 0);
    grp_fu_2918_p1 <= grp_fu_2918_p10(8 - 1 downto 0);
    grp_fu_2918_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_50_reg_3674),25));
    grp_fu_2926_p0 <= tmp_53_fu_2377_p1(21 - 1 downto 0);
    grp_fu_2926_p1 <= grp_fu_2926_p10(8 - 1 downto 0);
    grp_fu_2926_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_fir_1_val_1_reg_3649),29));
    grp_fu_2935_p0 <= tmp_113_0_2_cast_cas_fu_2386_p1(21 - 1 downto 0);
    grp_fu_2935_p1 <= grp_fu_2935_p10(8 - 1 downto 0);
    grp_fu_2935_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_fir_2_val_1_reg_3664),29));
    grp_fu_2943_p0 <= hcoeffs_0_load_cast_fu_2392_p1(17 - 1 downto 0);
    grp_fu_2943_p1 <= grp_fu_2943_p10(8 - 1 downto 0);
    grp_fu_2943_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_fir_3_val_1_reg_3679),25));
    grp_fu_2951_p0 <= tmp_53_fu_2377_p1(21 - 1 downto 0);
    grp_fu_2951_p1 <= grp_fu_2951_p10(8 - 1 downto 0);
    grp_fu_2951_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_fir_1_val_2_reg_3654),29));
    grp_fu_2960_p0 <= tmp_113_0_2_cast_cas_fu_2386_p1(21 - 1 downto 0);
    grp_fu_2960_p1 <= grp_fu_2960_p10(8 - 1 downto 0);
    grp_fu_2960_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_fir_2_val_2_reg_3669),29));
    grp_fu_2968_p0 <= hcoeffs_0_load_cast_fu_2392_p1(17 - 1 downto 0);
    grp_fu_2968_p1 <= grp_fu_2968_p10(8 - 1 downto 0);
    grp_fu_2968_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_fir_3_val_2_reg_3684),25));
    grp_fu_2976_p0 <= vcoeffs_3_load_cast_fu_2806_p1(17 - 1 downto 0);
    grp_fu_2976_p1 <= grp_fu_2976_p10(8 - 1 downto 0);
    grp_fu_2976_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_fir_0_val_0_1_fu_310),25));
    grp_fu_2976_p2 <= ap_const_lv26_80000(21 - 1 downto 0);
    grp_fu_2985_p0 <= tmp_61_fu_2816_p1(21 - 1 downto 0);
    grp_fu_2985_p1 <= grp_fu_2985_p10(8 - 1 downto 0);
    grp_fu_2985_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_fir_1_val_0_1_fu_322),29));
    grp_fu_2994_p0 <= tmp_131_0_2_cast_cas_fu_2826_p1(21 - 1 downto 0);
    grp_fu_2994_p1 <= grp_fu_2994_p10(8 - 1 downto 0);
    grp_fu_2994_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_fir_2_val_0_1_fu_298),29));
    grp_fu_3002_p0 <= vcoeffs_3_load_cast_fu_2806_p1(17 - 1 downto 0);
    grp_fu_3002_p1 <= grp_fu_3002_p10(8 - 1 downto 0);
    grp_fu_3002_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_fir_0_val_1_1_fu_314),25));
    grp_fu_3002_p2 <= ap_const_lv26_80000(21 - 1 downto 0);
    grp_fu_3011_p0 <= tmp_61_fu_2816_p1(21 - 1 downto 0);
    grp_fu_3011_p1 <= grp_fu_3011_p10(8 - 1 downto 0);
    grp_fu_3011_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_fir_1_val_1_1_fu_306),29));
    grp_fu_3020_p0 <= tmp_131_0_2_cast_cas_fu_2826_p1(21 - 1 downto 0);
    grp_fu_3020_p1 <= grp_fu_3020_p10(8 - 1 downto 0);
    grp_fu_3020_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_fir_2_val_1_1_fu_294),29));
    grp_fu_3028_p0 <= vcoeffs_3_load_cast_fu_2806_p1(17 - 1 downto 0);
    grp_fu_3028_p1 <= grp_fu_3028_p10(8 - 1 downto 0);
    grp_fu_3028_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_fir_0_val_2_1_fu_318),25));
    grp_fu_3028_p2 <= ap_const_lv26_80000(21 - 1 downto 0);
    grp_fu_3037_p0 <= tmp_61_fu_2816_p1(21 - 1 downto 0);
    grp_fu_3037_p1 <= grp_fu_3037_p10(8 - 1 downto 0);
    grp_fu_3037_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_fir_1_val_2_1_fu_302),29));
    grp_fu_3046_p0 <= tmp_131_0_2_cast_cas_fu_2826_p1(21 - 1 downto 0);
    grp_fu_3046_p1 <= grp_fu_3046_p10(8 - 1 downto 0);
    grp_fu_3046_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_fir_2_val_2_1_fu_290),29));
    grp_fu_3054_p0 <= vcoeffs_0_load_cast_fu_2868_p1(17 - 1 downto 0);
    grp_fu_3054_p1 <= grp_fu_3054_p10(8 - 1 downto 0);
    grp_fu_3054_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_out_0_val_0_1_1_reg_3856),25));
    grp_fu_3062_p0 <= vcoeffs_0_load_cast_fu_2868_p1(17 - 1 downto 0);
    grp_fu_3062_p1 <= grp_fu_3062_p10(8 - 1 downto 0);
    grp_fu_3062_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_out_0_val_1_1_1_reg_3851),25));
    grp_fu_3070_p0 <= vcoeffs_0_load_cast_fu_2868_p1(17 - 1 downto 0);
    grp_fu_3070_p1 <= grp_fu_3070_p10(8 - 1 downto 0);
    grp_fu_3070_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_fir_3_val_2_load_reg_3846),25));
    h_phase_V_fu_1828_p4 <= h_phase_acc_V_2_fu_258(15 downto 12);
    h_phase_acc_V_1_fu_1863_p3 <= 
        h_phase_acc_V_fu_1858_p2 when (or_cond_fu_1852_p2(0) = '1') else 
        h_phase_acc_V_4_reg_3423;
    h_phase_acc_V_4_fu_1311_p3 <= 
        ret_V_4_fu_1305_p2 when (p_Result_2_fu_1297_p3(0) = '1') else 
        tmp_s_fu_1287_p4;
    h_phase_acc_V_fu_1858_p2 <= std_logic_vector(unsigned(h_phase_acc_V_2_fu_258) + unsigned(h_phase_acc_V_4_reg_3423));
    h_shreg_val_0_val_3_6_fu_1893_p3 <= 
        h_shreg_val_0_val_2_fu_362 when (tmp_16_reg_3500(0) = '1') else 
        ap_const_lv8_0;
    h_shreg_val_0_val_3_7_fu_1900_p3 <= 
        h_shreg_val_0_val_3_fu_266 when (tmp_16_reg_3500(0) = '1') else 
        ap_const_lv8_0;
    hcoeffs_0_address0 <= tmp_51_fu_1972_p1(4 - 1 downto 0);

    hcoeffs_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            hcoeffs_0_ce0 <= ap_const_logic_1;
        else 
            hcoeffs_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hcoeffs_0_load_cast_fu_2392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hcoeffs_0_load_reg_3704),25));
    hcoeffs_1_address0 <= tmp_51_fu_1972_p1(4 - 1 downto 0);

    hcoeffs_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            hcoeffs_1_ce0 <= ap_const_logic_1;
        else 
            hcoeffs_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hcoeffs_2_address0 <= tmp_51_fu_1972_p1(4 - 1 downto 0);

    hcoeffs_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            hcoeffs_2_ce0 <= ap_const_logic_1;
        else 
            hcoeffs_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hcoeffs_3_address0 <= tmp_51_fu_1972_p1(4 - 1 downto 0);

    hcoeffs_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            hcoeffs_3_ce0 <= ap_const_logic_1;
        else 
            hcoeffs_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hcoeffs_3_load_cast_fu_2343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hcoeffs_3_q0),25));
    i_op_assign_1_cast_fu_1488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_Val2_10_phi_fu_844_p4),14));
    i_op_assign_cast_fu_1386_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_8_reg_829),14));
    icmp1_fu_1367_p2 <= "1" when (signed(tmp_11_fu_1357_p4) < signed(ap_const_lv16_1)) else "0";
    icmp2_fu_1445_p2 <= "1" when (tmp_17_fu_1435_p4 = ap_const_lv12_0) else "0";
    icmp3_fu_2161_p2 <= "0" when (tmp_43_fu_2151_p4 = ap_const_lv12_0) else "1";
    icmp4_fu_2283_p2 <= "0" when (tmp_48_fu_2273_p4 = ap_const_lv11_0) else "1";
    icmp_fu_1347_p2 <= "1" when (signed(tmp_fu_1337_p4) < signed(ap_const_lv16_1)) else "0";
    linebuf_val_val_0_0_address0 <= tmp_40_fu_2355_p1(12 - 1 downto 0);

    linebuf_val_val_0_0_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1))) then 
            linebuf_val_val_0_0_ce0 <= ap_const_logic_1;
        else 
            linebuf_val_val_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_0_0_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_0_0_ce1 <= ap_const_logic_1;
        else 
            linebuf_val_val_0_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_0_0_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_0_0_we1 <= ap_const_logic_1;
        else 
            linebuf_val_val_0_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_0_1_address0 <= tmp_40_fu_2355_p1(12 - 1 downto 0);

    linebuf_val_val_0_1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1))) then 
            linebuf_val_val_0_1_ce0 <= ap_const_logic_1;
        else 
            linebuf_val_val_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_0_1_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_0_1_ce1 <= ap_const_logic_1;
        else 
            linebuf_val_val_0_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_0_1_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_0_1_we1 <= ap_const_logic_1;
        else 
            linebuf_val_val_0_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_0_2_address0 <= tmp_40_fu_2355_p1(12 - 1 downto 0);

    linebuf_val_val_0_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1))) then 
            linebuf_val_val_0_2_ce0 <= ap_const_logic_1;
        else 
            linebuf_val_val_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_0_2_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_0_2_ce1 <= ap_const_logic_1;
        else 
            linebuf_val_val_0_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_0_2_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_0_2_we1 <= ap_const_logic_1;
        else 
            linebuf_val_val_0_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_1_0_address0 <= tmp_40_fu_2355_p1(12 - 1 downto 0);

    linebuf_val_val_1_0_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1))) then 
            linebuf_val_val_1_0_ce0 <= ap_const_logic_1;
        else 
            linebuf_val_val_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_1_0_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_1_0_ce1 <= ap_const_logic_1;
        else 
            linebuf_val_val_1_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_1_0_d1 <= 
        temp_out_1_val_0_fu_386 when (tmp_18_reg_3510(0) = '1') else 
        temp_out_0_val_0_2_fu_374;

    linebuf_val_val_1_0_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_1_0_we1 <= ap_const_logic_1;
        else 
            linebuf_val_val_1_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_1_1_address0 <= tmp_40_fu_2355_p1(12 - 1 downto 0);

    linebuf_val_val_1_1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1))) then 
            linebuf_val_val_1_1_ce0 <= ap_const_logic_1;
        else 
            linebuf_val_val_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_1_1_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_1_1_ce1 <= ap_const_logic_1;
        else 
            linebuf_val_val_1_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_1_1_d1 <= 
        temp_out_1_val_1_fu_390 when (tmp_18_reg_3510(0) = '1') else 
        temp_out_0_val_1_2_fu_378;

    linebuf_val_val_1_1_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_1_1_we1 <= ap_const_logic_1;
        else 
            linebuf_val_val_1_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_1_2_address0 <= tmp_40_fu_2355_p1(12 - 1 downto 0);

    linebuf_val_val_1_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1))) then 
            linebuf_val_val_1_2_ce0 <= ap_const_logic_1;
        else 
            linebuf_val_val_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_1_2_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_1_2_ce1 <= ap_const_logic_1;
        else 
            linebuf_val_val_1_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_1_2_d1 <= 
        temp_out_1_val_2_fu_394 when (tmp_18_reg_3510(0) = '1') else 
        v_fir_3_val_2_1_fu_382;

    linebuf_val_val_1_2_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_1_2_we1 <= ap_const_logic_1;
        else 
            linebuf_val_val_1_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_2_0_address0 <= tmp_40_fu_2355_p1(12 - 1 downto 0);

    linebuf_val_val_2_0_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1))) then 
            linebuf_val_val_2_0_ce0 <= ap_const_logic_1;
        else 
            linebuf_val_val_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_2_0_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_2_0_ce1 <= ap_const_logic_1;
        else 
            linebuf_val_val_2_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_2_0_d1 <= 
        temp_out_2_val_0_fu_398 when (tmp_18_reg_3510(0) = '1') else 
        temp_out_0_val_0_2_fu_374;

    linebuf_val_val_2_0_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_2_0_we1 <= ap_const_logic_1;
        else 
            linebuf_val_val_2_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_2_1_address0 <= tmp_40_fu_2355_p1(12 - 1 downto 0);

    linebuf_val_val_2_1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1))) then 
            linebuf_val_val_2_1_ce0 <= ap_const_logic_1;
        else 
            linebuf_val_val_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_2_1_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_2_1_ce1 <= ap_const_logic_1;
        else 
            linebuf_val_val_2_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_2_1_d1 <= 
        temp_out_2_val_1_fu_402 when (tmp_18_reg_3510(0) = '1') else 
        temp_out_0_val_1_2_fu_378;

    linebuf_val_val_2_1_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_2_1_we1 <= ap_const_logic_1;
        else 
            linebuf_val_val_2_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_2_2_address0 <= tmp_40_fu_2355_p1(12 - 1 downto 0);

    linebuf_val_val_2_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1))) then 
            linebuf_val_val_2_2_ce0 <= ap_const_logic_1;
        else 
            linebuf_val_val_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_2_2_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_2_2_ce1 <= ap_const_logic_1;
        else 
            linebuf_val_val_2_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_2_2_d1 <= 
        temp_out_2_val_2_fu_406 when (tmp_18_reg_3510(0) = '1') else 
        v_fir_3_val_2_1_fu_382;

    linebuf_val_val_2_2_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_2_2_we1 <= ap_const_logic_1;
        else 
            linebuf_val_val_2_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_3_0_address0 <= tmp_40_fu_2355_p1(12 - 1 downto 0);

    linebuf_val_val_3_0_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1))) then 
            linebuf_val_val_3_0_ce0 <= ap_const_logic_1;
        else 
            linebuf_val_val_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_3_0_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_3_0_ce1 <= ap_const_logic_1;
        else 
            linebuf_val_val_3_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_3_0_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_3_0_we1 <= ap_const_logic_1;
        else 
            linebuf_val_val_3_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_3_1_address0 <= tmp_40_fu_2355_p1(12 - 1 downto 0);

    linebuf_val_val_3_1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1))) then 
            linebuf_val_val_3_1_ce0 <= ap_const_logic_1;
        else 
            linebuf_val_val_3_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_3_1_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_3_1_ce1 <= ap_const_logic_1;
        else 
            linebuf_val_val_3_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_3_1_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_3_1_we1 <= ap_const_logic_1;
        else 
            linebuf_val_val_3_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_val_val_3_2_address0 <= tmp_40_fu_2355_p1(12 - 1 downto 0);

    linebuf_val_val_3_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1))) then 
            linebuf_val_val_3_2_ce0 <= ap_const_logic_1;
        else 
            linebuf_val_val_3_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_3_2_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_3_2_ce1 <= ap_const_logic_1;
        else 
            linebuf_val_val_3_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_val_val_3_2_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1))) then 
            linebuf_val_val_3_2_we1 <= ap_const_logic_1;
        else 
            linebuf_val_val_3_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    next_mul_fu_1605_p2 <= std_logic_vector(unsigned(r_V_4_reg_852) + unsigned(tmp_20_cast_reg_3465));
    not_1_fu_1589_p2 <= "0" when (drow_fu_250 = rows_rw_fu_1581_p3) else "1";
    not_or_cond1_fu_1648_p2 <= (tmp_39_not_fu_1642_p2 or tmp_22_reg_3566_pp0_iter33_reg);
    not_or_cond_fu_1739_p2 <= (tmp_41_not_fu_1733_p2 or tmp_22_reg_3566_pp0_iter33_reg);
    not_s_fu_1542_p2 <= "0" when (drow_fu_250 = rows_rw_1_fu_1537_p1) else "1";
    notlhs_fu_1457_p2 <= "1" when (unsigned(p_Val2_8_reg_829) < unsigned(ap_const_lv13_3)) else "0";
    notrhs_fu_1983_p2 <= "1" when (unsigned(p_Val2_10_reg_840_pp0_iter35_reg) < unsigned(ap_const_lv13_3)) else "0";
    or_cond1_fu_1719_p2 <= (tmp_34_fu_1713_p2 and tmp_30_not_fu_1708_p2);
    or_cond2_fu_1628_p2 <= (tmp_36_fu_1622_p2 and tmp_30_not1_fu_1617_p2);
    or_cond3_fu_1761_p2 <= (tmp_38_fu_1757_p2 and tmp_16_reg_3500);
    or_cond4_fu_1776_p2 <= (tmp_16_reg_3500 and rev1_fu_1770_p2);
    or_cond_fu_1852_p2 <= (tmp_37_fu_1841_p2 and brmerge1_fu_1847_p2);
    p_Result_2_fu_1297_p3 <= ret_V_2_fu_1281_p2(47 downto 47);
    p_Result_4_fu_1658_p3 <= r_V_4_reg_852(44 downto 44);
    p_Result_s_fu_1251_p3 <= ret_V_fu_1235_p2(47 downto 47);

    p_dst_data_stream_0_V_blk_n_assign_proc : process(p_dst_data_stream_0_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter42, brmerge4_reg_3640_pp0_iter41_reg)
    begin
        if (((ap_enable_reg_pp0_iter42 = ap_const_logic_1) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_dst_data_stream_0_V_blk_n <= p_dst_data_stream_0_V_full_n;
        else 
            p_dst_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_0_V_din <= pix_out_val_0_1_reg_3876;

    p_dst_data_stream_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter42, brmerge4_reg_3640_pp0_iter41_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter42 = ap_const_logic_1) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0))) then 
            p_dst_data_stream_0_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_dst_data_stream_1_V_blk_n_assign_proc : process(p_dst_data_stream_1_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter42, brmerge4_reg_3640_pp0_iter41_reg)
    begin
        if (((ap_enable_reg_pp0_iter42 = ap_const_logic_1) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_dst_data_stream_1_V_blk_n <= p_dst_data_stream_1_V_full_n;
        else 
            p_dst_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_1_V_din <= pix_out_val_1_1_reg_3881;

    p_dst_data_stream_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter42, brmerge4_reg_3640_pp0_iter41_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter42 = ap_const_logic_1) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0))) then 
            p_dst_data_stream_1_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_dst_data_stream_2_V_blk_n_assign_proc : process(p_dst_data_stream_2_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter42, brmerge4_reg_3640_pp0_iter41_reg)
    begin
        if (((ap_enable_reg_pp0_iter42 = ap_const_logic_1) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_dst_data_stream_2_V_blk_n <= p_dst_data_stream_2_V_full_n;
        else 
            p_dst_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_2_V_din <= tmp_64_reg_3886;

    p_dst_data_stream_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter42, brmerge4_reg_3640_pp0_iter41_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter42 = ap_const_logic_1) and (brmerge4_reg_3640_pp0_iter41_reg = ap_const_lv1_0))) then 
            p_dst_data_stream_2_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_0_V_blk_n_assign_proc : process(p_src_data_stream_0_V_empty_n, ap_enable_reg_pp0_iter36, ap_block_pp0_stage0, tmp_20_reg_3557_pp0_iter35_reg, col_rd_en_1_reg_894, row_rd_en_load_1_reg_3599, or_cond3_reg_3603)
    begin
        if (((ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (or_cond3_reg_3603 = ap_const_lv1_1) and (row_rd_en_load_1_reg_3599 = ap_const_lv1_1) and (col_rd_en_1_reg_894 = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter35_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_src_data_stream_0_V_blk_n <= p_src_data_stream_0_V_empty_n;
        else 
            p_src_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_0_V_read_assign_proc : process(ap_enable_reg_pp0_iter36, ap_predicate_op536_read_state87, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op536_read_state87 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            p_src_data_stream_0_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_1_V_blk_n_assign_proc : process(p_src_data_stream_1_V_empty_n, ap_enable_reg_pp0_iter36, ap_block_pp0_stage0, tmp_20_reg_3557_pp0_iter35_reg, col_rd_en_1_reg_894, row_rd_en_load_1_reg_3599, or_cond3_reg_3603)
    begin
        if (((ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (or_cond3_reg_3603 = ap_const_lv1_1) and (row_rd_en_load_1_reg_3599 = ap_const_lv1_1) and (col_rd_en_1_reg_894 = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter35_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_src_data_stream_1_V_blk_n <= p_src_data_stream_1_V_empty_n;
        else 
            p_src_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_1_V_read_assign_proc : process(ap_enable_reg_pp0_iter36, ap_predicate_op537_read_state87, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op537_read_state87 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            p_src_data_stream_1_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_2_V_blk_n_assign_proc : process(p_src_data_stream_2_V_empty_n, ap_enable_reg_pp0_iter36, ap_block_pp0_stage0, tmp_20_reg_3557_pp0_iter35_reg, col_rd_en_1_reg_894, row_rd_en_load_1_reg_3599, or_cond3_reg_3603)
    begin
        if (((ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (or_cond3_reg_3603 = ap_const_lv1_1) and (row_rd_en_load_1_reg_3599 = ap_const_lv1_1) and (col_rd_en_1_reg_894 = ap_const_lv1_1) and (tmp_20_reg_3557_pp0_iter35_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_src_data_stream_2_V_blk_n <= p_src_data_stream_2_V_empty_n;
        else 
            p_src_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_2_V_read_assign_proc : process(ap_enable_reg_pp0_iter36, ap_predicate_op538_read_state87, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op538_read_state87 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            p_src_data_stream_2_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_2_fu_1273_p3 <= (col_ratio_V_fu_1223_p1 & ap_const_lv16_0);
    r_V_3_fu_1405_p0 <= r_V_3_fu_1405_p00(13 - 1 downto 0);
    r_V_3_fu_1405_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_8_reg_829),45));
    r_V_3_fu_1405_p1 <= tmp_18_cast_reg_3455(32 - 1 downto 0);
    r_V_3_fu_1405_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &r_V_3_fu_1405_p0) * signed(r_V_3_fu_1405_p1))), 45));
    r_V_fu_1227_p3 <= (row_ratio_V_fu_1219_p1 & ap_const_lv16_0);
    ret_V_1_fu_1259_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_9_fu_1241_p4));
    ret_V_2_fu_1281_p2 <= (r_V_2_fu_1273_p3 or ap_const_lv48_8000);
    ret_V_4_fu_1305_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_s_fu_1287_p4));
    ret_V_fu_1235_p2 <= (r_V_fu_1227_p3 or ap_const_lv48_8000);
    rev1_fu_1770_p2 <= (slt1_fu_1766_p2 xor ap_const_lv1_1);
    rev_fu_1468_p2 <= (slt_fu_1463_p2 xor ap_const_lv1_1);
    row_fu_1395_p2 <= std_logic_vector(unsigned(p_Val2_8_reg_829) + unsigned(ap_const_lv13_1));
    row_rate_fu_1265_p3 <= 
        ret_V_1_fu_1259_p2 when (p_Result_s_fu_1251_p3(0) = '1') else 
        tmp_9_fu_1241_p4;
    row_ratio_V_fu_1219_p1 <= grp_fu_1144_p2(32 - 1 downto 0);
    row_rd_en_load_1_load_fu_1754_p1 <= row_rd_en_fu_242;
        rows_cast_cast_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rows_reg_3397),14));

    rows_fu_1182_p3 <= 
        rows_in_cast_fu_1116_p1 when (tmp_4_fu_1176_p2(0) = '1') else 
        p_dst_rows_V_read;
    rows_in_cast_fu_1116_p0 <= p_src_rows_V_read;
        rows_in_cast_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rows_in_cast_fu_1116_p0),13));

    rows_rw_1_fu_1537_p1 <= grp_fu_1513_p2(16 - 1 downto 0);
    rows_rw_fu_1581_p3 <= 
        tmp_27_fu_1573_p3 when (p_Result_3_reg_3490(0) = '1') else 
        tmp_25_fu_1558_p4;
    sel_SEBB1_fu_1886_p3 <= 
        h_shreg_val_0_val_2_1_fu_366 when (tmp_16_reg_3500(0) = '1') else 
        h_shreg_val_0_val_3_1_fu_270;
    sel_SEBB_fu_1879_p3 <= 
        h_shreg_val_0_val_2_2_fu_370 when (tmp_16_reg_3500(0) = '1') else 
        h_shreg_val_0_val_3_2_fu_274;
    slt1_fu_1766_p2 <= "1" when (signed(i_op_assign_1_cast_reg_3546_pp0_iter34_reg) < signed(cols_cast_reg_3434)) else "0";
    slt_fu_1463_p2 <= "1" when (signed(i_op_assign_cast_fu_1386_p1) < signed(tmp_21_cast_cast_reg_3470)) else "0";
    t_V_1_fu_1517_p3 <= (ap_phi_mux_p_Val2_10_phi_fu_844_p4 & ap_const_lv16_0);
    t_V_2_cast_fu_1426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_fu_1418_p3),32));
    t_V_fu_1418_p3 <= (p_Val2_8_reg_829 & ap_const_lv16_0);
    tmp12_fu_1482_p2 <= (rev_fu_1468_p2 or icmp2_fu_1445_p2);
    tmp13_fu_1989_p2 <= (notrhs_fu_1983_p2 or notlhs_reg_3526);
    tmp14_fu_2000_p2 <= (tmp38_demorgan_fu_1994_p2 xor ap_const_lv1_1);
    tmp38_demorgan_fu_1994_p2 <= (row_wr_en_fu_238 and col_wr_en_1_reg_906);
    tmp_103_2_fu_2217_p2 <= "1" when (unsigned(p_Val2_10_reg_840_pp0_iter36_reg) > unsigned(ap_const_lv13_2)) else "0";
    tmp_10_fu_1325_p2 <= std_logic_vector(unsigned(ap_const_lv14_3) + unsigned(rows_cast_cast_fu_1319_p1));
        tmp_113_0_2_cast_cas_fu_2386_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(hcoeffs_1_load_reg_3699),29));

    tmp_118_0_t_fu_1474_p3 <= 
        ap_const_lv2_3 when (tmp_18_fu_1451_p2(0) = '1') else 
        ap_const_lv2_0;
    tmp_11_fu_1357_p4 <= h_phase_acc_V_4_fu_1311_p3(31 downto 16);
    tmp_12_fu_1377_p2 <= std_logic_vector(signed(ap_const_lv13_1FFE) + signed(rows_reg_3397));
        tmp_131_0_2_cast_cas_fu_2826_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(vcoeffs_1_load_reg_3836),29));

    tmp_13_fu_1390_p2 <= "1" when (signed(i_op_assign_cast_fu_1386_p1) < signed(tmp_10_reg_3440)) else "0";
    tmp_16_fu_1430_p2 <= "1" when (signed(i_op_assign_cast_fu_1386_p1) < signed(rows_cast_cast_reg_3429)) else "0";
    tmp_17_fu_1435_p4 <= p_Val2_8_reg_829(12 downto 1);
        tmp_18_cast_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(row_ratio_V_fu_1219_p1),45));

    tmp_18_fu_1451_p2 <= "0" when (p_Val2_8_reg_829 = ap_const_lv13_0) else "1";
    tmp_19_fu_1492_p1 <= ap_phi_mux_p_Val2_10_phi_fu_844_p4(2 - 1 downto 0);
    tmp_1_fu_1124_p1 <= p_src_rows_V_read;
    tmp_1_fu_1124_p3 <= (tmp_1_fu_1124_p1 & ap_const_lv16_0);
        tmp_20_cast_fu_1373_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(col_ratio_V_fu_1223_p1),45));

    tmp_20_fu_1496_p2 <= "1" when (signed(i_op_assign_1_cast_fu_1488_p1) < signed(addconv_reg_3445)) else "0";
        tmp_21_cast_cast_fu_1382_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_12_fu_1377_p2),14));

    tmp_22_fu_1507_p2 <= "1" when (ap_phi_mux_p_Val2_10_phi_fu_844_p4 = ap_const_lv13_0) else "0";
    tmp_23_fu_1549_p1 <= r_V_3_reg_3484(16 - 1 downto 0);
    tmp_24_fu_1552_p2 <= "1" when (tmp_23_fu_1549_p1 = ap_const_lv16_0) else "0";
    tmp_25_fu_1558_p4 <= r_V_3_reg_3484(31 downto 16);
    tmp_26_fu_1567_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(tmp_25_fu_1558_p4));
    tmp_27_fu_1573_p3 <= 
        tmp_25_fu_1558_p4 when (tmp_24_fu_1552_p2(0) = '1') else 
        tmp_26_fu_1567_p2;
    tmp_29_fu_1670_p2 <= "1" when (tmp_31_fu_1666_p1 = ap_const_lv16_0) else "0";
    tmp_30_fu_1676_p4 <= r_V_4_reg_852(31 downto 16);
    tmp_30_not1_fu_1617_p2 <= (tmp_22_reg_3566_pp0_iter33_reg xor ap_const_lv1_1);
    tmp_30_not_fu_1708_p2 <= (tmp_22_reg_3566_pp0_iter33_reg xor ap_const_lv1_1);
    tmp_31_fu_1666_p1 <= r_V_4_reg_852(16 - 1 downto 0);
    tmp_32_fu_1686_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(tmp_30_fu_1676_p4));
    tmp_33_fu_1692_p3 <= 
        tmp_30_fu_1676_p4 when (tmp_29_fu_1670_p2(0) = '1') else 
        tmp_32_fu_1686_p2;
    tmp_34_fu_1713_p2 <= "1" when (cols_rw_fu_246 = cols_rw_3_fu_1700_p3) else "0";
    tmp_36_fu_1622_p2 <= "1" when (cols_rw_fu_246 = cols_rw_4_fu_1613_p1) else "0";
    tmp_37_fu_1841_p2 <= "0" when (p_Val2_10_reg_840_pp0_iter35_reg = ap_const_lv13_0) else "1";
    tmp_38_fu_1757_p2 <= "1" when (signed(i_op_assign_1_cast_reg_3546_pp0_iter34_reg) < signed(cols_cast_reg_3434)) else "0";
    tmp_39_not_fu_1642_p2 <= (tmp_36_fu_1622_p2 xor ap_const_lv1_1);
    tmp_3_fu_1150_p1 <= p_src_cols_V_read;
    tmp_3_fu_1150_p3 <= (tmp_3_fu_1150_p1 & ap_const_lv16_0);
    tmp_40_fu_2355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_10_reg_840_pp0_iter37_reg),64));
    tmp_41_fu_2102_p3 <= 
        ap_const_lv2_0 when (tmp_37_reg_3615(0) = '1') else 
        col_assign_fu_2097_p2;
    tmp_41_not_fu_1733_p2 <= (tmp_34_fu_1713_p2 xor ap_const_lv1_1);
    tmp_43_fu_2151_p4 <= p_Val2_10_reg_840_pp0_iter36_reg(12 downto 1);
    tmp_44_fu_2167_p3 <= 
        ap_const_lv2_1 when (icmp3_fu_2161_p2(0) = '1') else 
        col_assign_fu_2097_p2;
    tmp_46_fu_2223_p3 <= 
        ap_const_lv2_2 when (tmp_103_2_fu_2217_p2(0) = '1') else 
        col_assign_fu_2097_p2;
    tmp_48_fu_2273_p4 <= p_Val2_10_reg_840_pp0_iter36_reg(12 downto 2);
    tmp_49_fu_2289_p3 <= 
        ap_const_lv2_3 when (icmp4_fu_2283_p2(0) = '1') else 
        col_assign_fu_2097_p2;
    tmp_4_fu_1176_p2 <= "1" when (signed(rows_in_cast_fu_1116_p1) > signed(p_dst_rows_V_read)) else "0";
    tmp_51_fu_1972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_phase_V_fu_1828_p4),64));
        tmp_53_fu_2377_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(hcoeffs_2_load_reg_3694),29));

    tmp_59_fu_2428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_phase_V_1_fu_254),64));
        tmp_61_fu_2816_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(vcoeffs_2_load_reg_3831),29));

    tmp_8_fu_1190_p2 <= "1" when (signed(cols_in_cast_fu_1120_p1) > signed(p_dst_cols_V_read)) else "0";
    tmp_9_fu_1241_p4 <= ret_V_fu_1235_p2(47 downto 16);
    tmp_fu_1337_p4 <= row_rate_fu_1265_p3(31 downto 16);
    tmp_s_fu_1287_p4 <= ret_V_2_fu_1281_p2(47 downto 16);
    v_fir_1_val_0_fu_2475_p3 <= 
        ap_phi_mux_temp_out_2_val_0_2_phi_fu_976_p4 when (tmp_18_reg_3510(0) = '1') else 
        ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4;
    v_fir_1_val_1_fu_2482_p3 <= 
        ap_phi_mux_temp_out_2_val_1_2_phi_fu_965_p4 when (tmp_18_reg_3510(0) = '1') else 
        ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4;
    v_fir_1_val_2_fu_2489_p3 <= 
        ap_phi_mux_temp_out_2_val_2_2_phi_fu_954_p4 when (tmp_18_reg_3510(0) = '1') else 
        ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4;
    v_fir_2_val_0_fu_2496_p3 <= 
        ap_phi_mux_temp_out_1_val_0_2_phi_fu_1009_p4 when (tmp_18_reg_3510(0) = '1') else 
        ap_phi_mux_temp_out_0_val_0_phi_fu_1020_p4;
    v_fir_2_val_1_fu_2503_p3 <= 
        ap_phi_mux_temp_out_1_val_1_2_phi_fu_998_p4 when (tmp_18_reg_3510(0) = '1') else 
        ap_phi_mux_temp_out_0_val_1_phi_fu_1030_p4;
    v_fir_2_val_2_fu_2510_p3 <= 
        ap_phi_mux_temp_out_1_val_2_2_phi_fu_987_p4 when (tmp_18_reg_3510(0) = '1') else 
        ap_phi_mux_temp_out_0_val_2_4_phi_fu_1040_p4;
    v_phase_acc_V_1_fu_2043_p3 <= 
        v_phase_acc_V_fu_2038_p2 when (brmerge_fu_2033_p2(0) = '1') else 
        v_phase_acc_V_2_fu_262;
    v_phase_acc_V_fu_2038_p2 <= std_logic_vector(unsigned(v_phase_acc_V_2_fu_262) + unsigned(row_rate_reg_3418));
    vcoeffs_0_address0 <= tmp_59_fu_2428_p1(4 - 1 downto 0);

    vcoeffs_0_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1))) then 
            vcoeffs_0_ce0 <= ap_const_logic_1;
        else 
            vcoeffs_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    vcoeffs_0_load_cast_fu_2868_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vcoeffs_0_load_reg_3841_pp0_iter40_reg),25));
    vcoeffs_1_address0 <= tmp_59_fu_2428_p1(4 - 1 downto 0);

    vcoeffs_1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1))) then 
            vcoeffs_1_ce0 <= ap_const_logic_1;
        else 
            vcoeffs_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    vcoeffs_2_address0 <= tmp_59_fu_2428_p1(4 - 1 downto 0);

    vcoeffs_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1))) then 
            vcoeffs_2_ce0 <= ap_const_logic_1;
        else 
            vcoeffs_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    vcoeffs_3_address0 <= tmp_59_fu_2428_p1(4 - 1 downto 0);

    vcoeffs_3_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1))) then 
            vcoeffs_3_ce0 <= ap_const_logic_1;
        else 
            vcoeffs_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    vcoeffs_3_load_cast_fu_2806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vcoeffs_3_load_reg_3826),25));
end behav;
